html {
  line-height: 1.15;
  -webkit-text-size-adjust: 100%;
  -webkit-box-sizing: border-box;
  box-sizing: border-box;
}

body {
  margin: 0;
}

main {
  display: block;
}

h1 {
  font-size: 2em;
  margin: 0.67em 0;
}

hr {
  -webkit-box-sizing: content-box;
  box-sizing: content-box;
  height: 0;
  overflow: visible;
}

pre {
  font: 1em monospace, monospace;
}

a {
  background: transparent;
}

abbr[title] {
  border-bottom: none;
  text-decoration: underline;
  -webkit-text-decoration: underline dotted;
  text-decoration: underline dotted;
}

b,
strong {
  font-weight: bolder;
}

code,
kbd,
samp {
  font: 1em monospace, monospace;
}

small {
  font-size: 80%;
}

sub,
sup {
  font-size: 75%;
  line-height: 0;
  position: relative;
  vertical-align: baseline;
}

sub {
  bottom: -0.25em;
}

sup {
  top: -0.5em;
}

img {
  border-style: none;
}

button,
input,
optgroup,
select,
textarea {
  font: 100%/1.15 inherit;
  margin: 0;
}

button,
input {
  overflow: visible;
}

button,
select {
  text-transform: none;
}

button,
[type=button],
[type=reset],
[type=submit] {
  -webkit-appearance: button;
}

button::-moz-focus-inner,
[type=button]::-moz-focus-inner,
[type=reset]::-moz-focus-inner,
[type=submit]::-moz-focus-inner {
  border-style: none;
  padding: 0;
}

button:-moz-focusring,
[type=button]:-moz-focusring,
[type=reset]:-moz-focusring,
[type=submit]:-moz-focusring {
  outline: 1px dotted ButtonText;
}

fieldset {
  padding: 0.35em 0.75em 0.625em;
}

legend {
  -webkit-box-sizing: border-box;
  box-sizing: border-box;
  color: inherit;
  display: table;
  max-width: 100%;
  padding: 0;
  white-space: normal;
}

progress {
  vertical-align: baseline;
}

textarea {
  overflow: auto;
}

[type=checkbox],
[type=radio] {
  -webkit-box-sizing: border-box;
  box-sizing: border-box;
  padding: 0;
}

[type=number]::-webkit-inner-spin-button,
[type=number]::-webkit-outer-spin-button {
  height: auto;
}

[type=search] {
  -webkit-appearance: textfield;
  outline-offset: -2px;
}

[type=search]::-webkit-search-decoration {
  -webkit-appearance: none;
}

::-webkit-file-upload-button {
  -webkit-appearance: button;
  font: inherit;
}

details {
  display: block;
}

summary {
  display: list-item;
}

template {
  display: none;
}

[hidden] {
  display: none;
}

*,
*:before,
*:after {
  -webkit-box-sizing: border-box;
  box-sizing: border-box;
  scroll-behavior: smooth;
}

body {
  background: #E5E5E5;
  color: #FFFFFF;
}

a,
a:link,
a:visited {
  text-decoration: none;
  color: #FFFFFF;
}

ol,
ul {
  list-style: none;
  padding: 0;
}

.container {
  background: #09131B;
  max-width: 1920px;
  margin: auto;
}

.content {
  margin: 0 auto;
}

button {
  border: none;
  cursor: pointer;
}

.item-button {
  background: #0059ac;
  border-radius: 8px;
  color: #FFFFFF;
  font-family: "Open Sans";
  font-style: normal;
}

.logo {
  font: 400 36px/45px "Righteous", sans-serif;
  text-transform: uppercase;
}

.section-title {
  font: 400 48px/60px "Arsenal";
  max-width: 540px;
}

.section-description {
  font: 400 17px/170% "Open Sans";
  max-width: 540px;
  color: #8991AF;
  padding-left: 10px;
}

@font-face {
  font-family: "Arsenal";
  src: url("../font/Arsenal-Regular.eot");
  src: url("../font/Arsenal-Regular.eot?#iefix") format("embedded-opentype"), url("../font/Arsenal-Regular.woff2") format("woff2"), url("../font/Arsenal-Regular.woff") format("woff"), url("../font/Arsenal-Regular.ttf") format("truetype");
  font-weight: normal;
  font-style: normal;
}

@font-face {
  font-family: "Arsenal";
  src: url("../font/Arsenal-Bold.eot");
  src: url("../font/Arsenal-Bold.eot?#iefix") format("embedded-opentype"), url("../font/Arsenal-Bold.woff2") format("woff2"), url("../font/Arsenal-Bold.woff") format("woff"), url("../font/Arsenal-Bold.ttf") format("truetype");
  font-weight: 700;
  font-style: normal;
}

@font-face {
  font-family: "Arsenal";
  src: url("../font/Arsenal-italic.eot");
  src: url("../font/Arsenal-italic.eot?#iefix") format("embedded-opentype"), url("../font/Arsenal-italic.woff2") format("woff2"), url("../font/Arsenal-italic.woff") format("woff"), url("../font/Arsenal-italic.ttf") format("truetype");
  font-weight: normal;
  font-style: italic;
}

@font-face {
  font-family: "Open Sans";
  src: url("../font/OpenSans-Regular.eot");
  src: url("../font/OpenSans-Regular.eot?#iefix") format("embedded-opentype"), url("../font/OpenSans-Regular.woff2") format("woff2"), url("../font/OpenSans-Regular.woff") format("woff"), url("../font/OpenSans-Regular.ttf") format("truetype");
  font-weight: normal;
  font-style: normal;
}

@font-face {
  font-family: "Open Sans";
  src: url("../font/OpenSans-Bold.eot");
  src: url("../font/OpenSans-Bold.eot?#iefix") format("embedded-opentype"), url("../font/OpenSans-Bold.woff2") format("woff2"), url("../font/OpenSans-Bold.woff") format("woff"), url("../font/OpenSans-Bold.ttf") format("truetype");
  font-weight: bold;
  font-style: normal;
}

@font-face {
  font-family: "Open Sans";
  src: url("../font/OpenSans-SemiBold.eot");
  src: url("../font/OpenSans-SemiBold.eot?#iefix") format("embedded-opentype"), url("../font/OpenSans-SemiBold.woff2") format("woff2"), url("../font/OpenSans-SemiBold.woff") format("woff"), url("../font/OpenSans-SemiBold.ttf") format("truetype");
  font-weight: 600;
  font-style: normal;
}

@font-face {
  font-family: "Open Sans";
  src: url("../font/OpenSans-Italic.eot");
  src: url("../font/OpenSans-Italic.eot?#iefix") format("embedded-opentype"), url("../font/OpenSans-Italic.woff2") format("woff2"), url("../font/OpenSans-Italic.woff") format("woff"), url("../font/OpenSans-Italic.ttf") format("truetype");
  font-weight: normal;
  font-style: italic;
}

@font-face {
  font-family: "Righteous";
  src: url("../font/Righteous-Regular.eot");
  src: url("../font/Righteous-Regular.eot?#iefix") format("embedded-opentype"), url("../font/Righteous-Regular.woff2") format("woff2"), url("../font/Righteous-Regular.woff") format("woff"), url("../font/Righteous-Regular.ttf") format("truetype");
  font-weight: normal;
  font-style: normal;
}

@font-face {
  font-family: "DM Serif Display";
  src: url("../font/DMSerifDisplay-italic.eot");
  src: url("../font/DMSerifDisplay-italic.eot?#iefix") format("embedded-opentype"), url("../font/DMSerifDisplay-italic.woff2") format("woff2"), url("../font/DMSerifDisplay-italic.woff") format("woff"), url("../font/DMSerifDisplay-italic.ttf") format("truetype");
  font-weight: normal;
  font-style: italic;
}

@font-face {
  font-family: "DM Serif Display";
  src: url("../font/DMSerifDisplay-Regular.eot");
  src: url("../font/DMSerifDisplay-Regular.eot?#iefix") format("embedded-opentype"), url("../font/DMSerifDisplay-Regular.woff2") format("woff2"), url("../font/DMSerifDisplay-Regular.woff") format("woff"), url("../font/DMSerifDisplay-Regular.ttf") format("truetype");
  font-weight: normal;
  font-style: normal;
}

@font-face {
  font-family: "Roboto";
  src: url("../font/Roboto-Regular.eot");
  src: url("../font/Roboto-Regular.eot?#iefix") format("embedded-opentype"), url("../font/Roboto-Regular.woff2") format("woff2"), url("../font/Roboto-Regular.woff") format("woff"), url("../font/Roboto-Regular.ttf") format("truetype");
  font-weight: normal;
  font-style: normal;
}

@font-face {
  font-family: "Roboto Bold";
  src: url("../font/Roboto-Bold.eot");
  src: url("../font/Roboto-Bold.eot?#iefix") format("embedded-opentype"), url("../font/Roboto-Bold.woff2") format("woff2"), url("../font/Roboto-Bold.woff") format("woff"), url("../font/Roboto-Bold.ttf") format("truetype");
  font-weight: bold;
  font-style: normal;
}

.footer {
  font: normal 400 17px/214% "Open Sans";
  max-width: 1400px;
  border-top: 1px solid rgba(0, 89, 172, 0.4);
  padding-top: 40px;
  display: -webkit-box;
  display: -ms-flexbox;
  display: flex;
  -webkit-box-pack: justify;
  -ms-flex-pack: justify;
  justify-content: space-between;
  color: #8991AF;
  gap: 5px;
}

.header-top {
  display: -webkit-box;
  display: -ms-flexbox;
  display: flex;
  -webkit-box-pack: justify;
  -ms-flex-pack: justify;
  justify-content: space-between;
  height: 68px;
  max-width: 1717px;
  -webkit-box-align: center;
  -ms-flex-align: center;
  align-items: center;
}

.header-contacts {
  font: normal 400 18px/27px "Roboto";
  display: -webkit-box;
  display: -ms-flexbox;
  display: flex;
  -webkit-text-decoration-line: underline;
  text-decoration-line: underline;
}

.header-email {
  display: -webkit-box;
  display: -ms-flexbox;
  display: flex;
  -webkit-box-align: center;
  -ms-flex-align: center;
  align-items: center;
}

.header-email:before {
  background: url("../img/svg/email.svg") no-repeat;
  content: "";
  width: 24px;
  height: 24px;
  margin-right: 12px;
}

.header-phone {
  display: -webkit-box;
  display: -ms-flexbox;
  display: flex;
  padding-left: 24px;
  -webkit-box-align: center;
  -ms-flex-align: center;
  align-items: center;
}

.header-phone:before {
  background: url("../img/svg/phone.svg") no-repeat;
  content: "";
  width: 24px;
  height: 24px;
  margin-right: 12px;
}

.social {
  display: -webkit-box;
  display: -ms-flexbox;
  display: flex;
  -webkit-box-align: center;
  -ms-flex-align: center;
  align-items: center;
  text-align: center;
  width: 267px;
  -webkit-box-pack: justify;
  -ms-flex-pack: justify;
  justify-content: space-between;
}

.social__link > svg {
  padding: 0 10px;
  width: 100%;
  fill: #a1a1a1;
  -webkit-transition: all 0.3s ease;
  -o-transition: all 0.3s ease;
  transition: all 0.3s ease;
}

.social__link > svg:hover {
  fill: #FFFFFF;
}

.social__link {
  -webkit-tap-highlight-color: transparent;
}

.header-content {
  background: url("../img/header-bg.jpg") no-repeat center center/cover;
  position: relative;
}

.header-navigation {
  display: -webkit-box;
  display: -ms-flexbox;
  display: flex;
  -webkit-box-pack: justify;
  -ms-flex-pack: justify;
  justify-content: space-between;
  height: 100px;
  -webkit-box-align: center;
  -ms-flex-align: center;
  align-items: center;
  max-width: 1717px;
  margin: 0 auto 123px auto;
}

.header-navigation__element {
  display: -webkit-box;
  display: -ms-flexbox;
  display: flex;
  -webkit-box-align: center;
  -ms-flex-align: center;
  align-items: center;
  -webkit-box-pack: justify;
  -ms-flex-pack: justify;
  justify-content: space-between;
  -webkit-column-gap: 50px;
  -moz-column-gap: 50px;
  column-gap: 50px;
}

.header-navigation__link {
  font: bold 17px "Open Sans", sans-serif;
  text-transform: uppercase;
  height: 24px;
  padding: 0 5px;
  border-radius: 5px;
  -webkit-transition: 0.3s ease;
  -o-transition: 0.3s ease;
  transition: 0.3s ease;
}

.header-navigation__link.active {
  display: block;
}

.header-navigation__link:hover {
  background: #0059AC;
}

.header-navigation__link:focus {
  background: #1982e4;
}

.header-navigation__icon {
  cursor: pointer;
  display: none;
}

.header-navigation__icon-close {
  display: none;
}

.header-navigation__icon picture {
  display: -webkit-box;
  display: -ms-flexbox;
  display: flex;
}

.header-app {
  margin-bottom: 130px;
  text-align: center;
  padding-bottom: 76px;
  margin: 0 auto;
}

.header-app__subtitle {
  font: 36px/45px "Arsenal";
  text-transform: uppercase;
  letter-spacing: 0.2em;
  margin: 0 0 -15px 0;
}

.header-app__title {
  font: 144px "Arsenal";
  text-transform: uppercase;
  margin: 0;
  margin-bottom: 18px;
}

.header-search-form {
  display: -webkit-box;
  display: -ms-flexbox;
  display: flex;
  -webkit-box-pack: center;
  -ms-flex-pack: center;
  justify-content: center;
}

.header-search__title {
  font: italic 18px "Open Sans";
  letter-spacing: 0.1em;
}

.header-search__input {
  font: 19px "Open Sans";
  width: 476px;
  height: 76px;
  border: none;
  border-radius: 10px 0 0 10px;
  padding-left: 34px;
  outline: none;
  left: 0;
}

.header-search__button {
  background: #0E0E0E;
  min-width: 97px;
  height: 76px;
  border-radius: 0 10px 10px 0;
}

.header-search__button:after {
  content: url(../img/svg/search.svg);
}

.header-features {
  max-width: 1348px;
  margin: 0 auto 275px;
  display: grid;
  grid-template-columns: repeat(4, 250px);
  -webkit-box-pack: justify;
  -ms-flex-pack: justify;
  justify-content: space-between;
}

.header-feature__img-wrapper {
  min-height: 70px;
  overflow: hidden;
  position: relative;
}

.header-feature__img {
  position: absolute;
  bottom: 0;
}

.header-feature__title {
  font: normal 700 22px/170% "Arsenal";
  margin-top: 20px;
  margin-bottom: 4px;
}

.header-feature__description {
  font: normal 16px/170% "Open Sans";
}

.header-about {
  padding-bottom: 190px;
  max-width: 1230px;
  display: -webkit-box;
  display: -ms-flexbox;
  display: flex;
  -webkit-box-pack: justify;
  -ms-flex-pack: justify;
  justify-content: space-between;
}

.highlights {
  max-width: 1260px;
  margin-bottom: 160px;
}

.highlights-content {
  display: grid;
  grid-template-columns: repeat(2, 1fr);
  gap: 160px 70px;
}

.hotels {
  max-width: 1400px;
  margin-bottom: 229px;
}

.hotels-countries {
  display: -webkit-box;
  display: -ms-flexbox;
  display: flex;
  text-align: center;
  -webkit-box-pack: center;
  -ms-flex-pack: center;
  justify-content: center;
  -webkit-column-gap: 40px;
  -moz-column-gap: 40px;
  column-gap: 40px;
  margin-bottom: 60px;
}

.hotels-countries-name {
  font: 700 14px/19px "Open Sans";
  padding: 5px 13px;
  cursor: pointer;
}

.hotels-countries-name.active {
  color: #000000;
  background: #F2C94C;
  border-radius: 8px;
}

.hotels-items-content {
  display: none;
}

.hotels-items-content.active {
  display: block;
}

.yellow-star {
  fill: #FFC22B;
}

.hotels-items {
  display: grid;
  grid-template-columns: repeat(4, 1fr);
  -webkit-column-gap: 40px;
  -moz-column-gap: 40px;
  column-gap: 40px;
  margin-bottom: 80px;
}

.hotels-item {
  background: #000000;
  border-radius: 8px;
}

.hotels-item__img-wrapper {
  position: relative;
  margin-bottom: 38px;
}

.hotels-item__img {
  border-radius: 8px 8px 0 0;
  width: 100%;
  height: 256px;
  -o-object-fit: cover;
  object-fit: cover;
}

.hotels-item__title {
  font: normal 700 24px/25px "Arsenal";
  letter-spacing: 0.01em;
  text-align: center;
  margin: 0;
  margin-bottom: 18px;
}

.hotels-item__heart {
  position: absolute;
  top: 24px;
  right: 24px;
  cursor: pointer;
}

.hotels-item__heart-path.favorited {
  fill: #FFC22B;
}

.hotels-item__rating {
  padding-left: 24px;
  margin-bottom: 33px;
}

.hotels-item__star:not(:last-child) {
  margin-right: 8px;
}

.hotels-item__price-wrapper {
  padding-right: 22px;
  text-align: right;
  font-family: "DM Serif Display";
  font-weight: 400;
  letter-spacing: 0.02em;
  line-height: 25px;
  margin-bottom: 21px;
}

.hotels-item__price_old {
  font-style: italic;
  font-size: 22px;
  -webkit-text-decoration-line: line-through;
  text-decoration-line: line-through;
  color: #B1B4B9;
  padding-right: 3px;
}

.hotels-item__price_big {
  font-size: 48px;
  text-align: right;
}

.hotels-item__description {
  font: normal 400 17px/170% "Open Sans";
  padding: 0 24px;
  margin: 0;
  color: #8991AF;
}

.hotels-item__saving {
  font: normal 400 14px/25px "Open Sans";
  text-align: center;
  letter-spacing: 0.02em;
  color: #111111;
  display: block;
  margin-bottom: 20px;
}

.hotels-item__button {
  width: 290px;
  height: 92px;
  text-align: center;
  display: block;
  margin: 0 auto;
  font-weight: 700;
  font-size: 17px;
  letter-spacing: 0.2em;
  text-transform: uppercase;
  margin-bottom: 24px;
}

.hotels-button {
  font: normal 900 15px/18px "Roboto";
  background: none;
  width: 151px;
  height: 45px;
  text-transform: uppercase;
  letter-spacing: 0.1em;
  margin: 0 auto;
  display: block;
  border: 2px solid #FFFFFF;
  color: #FFFFFF;
}

:root {
  --swiper-pagination-color: #F2C94C;
  --swiper-pagination-bullet-inactive-color: #FFF;
  --swiper-pagination-bullet-inactive-opacity: 1;
  --swiper-pagination-bullet-horizontal-gap: 15px;
}

.swiper-pagination {
  position: absolute;
  text-align: center;
  -webkit-transition: 300ms opacity;
  -o-transition: 300ms opacity;
  transition: 300ms opacity;
  -webkit-transform: translate3d(0, 0, 0);
  transform: translate3d(0, 0, 0);
  z-index: 10;
}

.swiper-pagination.swiper-pagination-hidden {
  opacity: 0;
}

.swiper-pagination-disabled > .swiper-pagination,
.swiper-pagination.swiper-pagination-disabled {
  display: none !important;
}

.swiper-pagination-fraction,
.swiper-pagination-custom,
.swiper-horizontal > .swiper-pagination-bullets,
.swiper-pagination-bullets.swiper-pagination-horizontal {
  bottom: 10px;
  left: 0;
  width: 100%;
}

.swiper-pagination-bullets-dynamic {
  overflow: hidden;
  font-size: 0;
}

.swiper-pagination-bullets-dynamic .swiper-pagination-bullet {
  -webkit-transform: scale(0.33);
  -ms-transform: scale(0.33);
  transform: scale(0.33);
  position: relative;
}

.swiper-pagination-bullets-dynamic .swiper-pagination-bullet-active {
  -webkit-transform: scale(1);
  -ms-transform: scale(1);
  transform: scale(1);
}

.swiper-pagination-bullets-dynamic .swiper-pagination-bullet-active-main {
  -webkit-transform: scale(1);
  -ms-transform: scale(1);
  transform: scale(1);
}

.swiper-pagination-bullets-dynamic .swiper-pagination-bullet-active-prev {
  -webkit-transform: scale(0.66);
  -ms-transform: scale(0.66);
  transform: scale(0.66);
}

.swiper-pagination-bullets-dynamic .swiper-pagination-bullet-active-prev-prev {
  -webkit-transform: scale(0.33);
  -ms-transform: scale(0.33);
  transform: scale(0.33);
}

.swiper-pagination-bullets-dynamic .swiper-pagination-bullet-active-next {
  -webkit-transform: scale(0.66);
  -ms-transform: scale(0.66);
  transform: scale(0.66);
}

.swiper-pagination-bullets-dynamic .swiper-pagination-bullet-active-next-next {
  -webkit-transform: scale(0.33);
  -ms-transform: scale(0.33);
  transform: scale(0.33);
}

.swiper-pagination-bullet {
  width: var(--swiper-pagination-bullet-width, var(--swiper-pagination-bullet-size, 8px));
  height: var(--swiper-pagination-bullet-height, var(--swiper-pagination-bullet-size, 8px));
  display: inline-block;
  border-radius: 50%;
  background: var(--swiper-pagination-bullet-inactive-color, #000);
  opacity: var(--swiper-pagination-bullet-inactive-opacity, 0.2);
}

button.swiper-pagination-bullet {
  border: none;
  margin: 0;
  padding: 0;
  -webkit-box-shadow: none;
  box-shadow: none;
  -webkit-appearance: none;
  -moz-appearance: none;
  appearance: none;
}

.swiper-pagination-clickable .swiper-pagination-bullet {
  cursor: pointer;
}

.swiper-pagination-bullet:only-child {
  display: none !important;
}

.swiper-pagination-bullet-active {
  opacity: var(--swiper-pagination-bullet-opacity, 1);
  background: var(--swiper-pagination-color, var(--swiper-theme-color));
}

.swiper-vertical > .swiper-pagination-bullets,
.swiper-pagination-vertical.swiper-pagination-bullets {
  right: 10px;
  top: 50%;
  -webkit-transform: translate3d(0px, -50%, 0);
  transform: translate3d(0px, -50%, 0);
}

.swiper-vertical > .swiper-pagination-bullets .swiper-pagination-bullet,
.swiper-pagination-vertical.swiper-pagination-bullets .swiper-pagination-bullet {
  margin: var(--swiper-pagination-bullet-vertical-gap, 6px) 0;
  display: block;
}

.swiper-vertical > .swiper-pagination-bullets.swiper-pagination-bullets-dynamic,
.swiper-pagination-vertical.swiper-pagination-bullets.swiper-pagination-bullets-dynamic {
  top: 50%;
  -webkit-transform: translateY(-50%);
  -ms-transform: translateY(-50%);
  transform: translateY(-50%);
  width: 8px;
}

.swiper-vertical > .swiper-pagination-bullets.swiper-pagination-bullets-dynamic .swiper-pagination-bullet,
.swiper-pagination-vertical.swiper-pagination-bullets.swiper-pagination-bullets-dynamic .swiper-pagination-bullet {
  display: inline-block;
  -webkit-transition: 200ms top, 200ms -webkit-transform;
  transition: 200ms top, 200ms -webkit-transform;
  -o-transition: 200ms transform, 200ms top;
  transition: 200ms transform, 200ms top;
  transition: 200ms transform, 200ms top, 200ms -webkit-transform;
}

.swiper-horizontal > .swiper-pagination-bullets .swiper-pagination-bullet,
.swiper-pagination-horizontal.swiper-pagination-bullets .swiper-pagination-bullet {
  margin: 0 var(--swiper-pagination-bullet-horizontal-gap, 4px);
}

.swiper-horizontal > .swiper-pagination-bullets.swiper-pagination-bullets-dynamic,
.swiper-pagination-horizontal.swiper-pagination-bullets.swiper-pagination-bullets-dynamic {
  left: 50%;
  -webkit-transform: translateX(-50%);
  -ms-transform: translateX(-50%);
  transform: translateX(-50%);
  white-space: nowrap;
}

.swiper-horizontal > .swiper-pagination-bullets.swiper-pagination-bullets-dynamic .swiper-pagination-bullet,
.swiper-pagination-horizontal.swiper-pagination-bullets.swiper-pagination-bullets-dynamic .swiper-pagination-bullet {
  -webkit-transition: 200ms left, 200ms -webkit-transform;
  transition: 200ms left, 200ms -webkit-transform;
  -o-transition: 200ms transform, 200ms left;
  transition: 200ms transform, 200ms left;
  transition: 200ms transform, 200ms left, 200ms -webkit-transform;
}

.swiper-horizontal.swiper-rtl > .swiper-pagination-bullets-dynamic .swiper-pagination-bullet {
  -webkit-transition: 200ms right, 200ms -webkit-transform;
  transition: 200ms right, 200ms -webkit-transform;
  -o-transition: 200ms transform, 200ms right;
  transition: 200ms transform, 200ms right;
  transition: 200ms transform, 200ms right, 200ms -webkit-transform;
}

.swiper-pagination-progressbar {
  background: rgba(0, 0, 0, 0.25);
  position: absolute;
}

.swiper-pagination-progressbar .swiper-pagination-progressbar-fill {
  background: var(--swiper-pagination-color, var(--swiper-theme-color));
  position: absolute;
  left: 0;
  top: 0;
  width: 100%;
  height: 100%;
  -webkit-transform: scale(0);
  -ms-transform: scale(0);
  transform: scale(0);
  -webkit-transform-origin: left top;
  -ms-transform-origin: left top;
  transform-origin: left top;
}

.swiper-rtl .swiper-pagination-progressbar .swiper-pagination-progressbar-fill {
  -webkit-transform-origin: right top;
  -ms-transform-origin: right top;
  transform-origin: right top;
}

.swiper-horizontal > .swiper-pagination-progressbar,
.swiper-pagination-progressbar.swiper-pagination-horizontal,
.swiper-vertical > .swiper-pagination-progressbar.swiper-pagination-progressbar-opposite,
.swiper-pagination-progressbar.swiper-pagination-vertical.swiper-pagination-progressbar-opposite {
  width: 100%;
  height: 4px;
  left: 0;
  top: 0;
}

.swiper-vertical > .swiper-pagination-progressbar,
.swiper-pagination-progressbar.swiper-pagination-vertical,
.swiper-horizontal > .swiper-pagination-progressbar.swiper-pagination-progressbar-opposite,
.swiper-pagination-progressbar.swiper-pagination-horizontal.swiper-pagination-progressbar-opposite {
  width: 4px;
  height: 100%;
  left: 0;
  top: 0;
}

.swiper-pagination-lock {
  display: none;
}

.price-item-feature,
.price-item-description,
.price-item-month {
  font: normal 400 16px/25px "Open Sans";
  color: #8991AF;
}

.price-bottom-address,
.price-bottom-email {
  font: normal 400 14px/30px "Roboto";
  text-align: center;
  color: #8991AF;
}

.pricing {
  background: url("../img/svg/footer-bg.svg") center center/cover;
  margin-bottom: 60px;
}

.price-items {
  display: -webkit-box;
  display: -ms-flexbox;
  display: flex;
  max-width: 1400px;
  margin: 0 auto 180px;
  -webkit-box-pack: justify;
  -ms-flex-pack: justify;
  justify-content: space-between;
  gap: 10px;
}

.price-item::after {
  content: '';
  border-radius: 16px;
  position: absolute;
  opacity: 0.8;
  top: 0;
  left: 0; 
  bottom: 0;
  right: 0;
  z-index: -1;  
  background-color: rgba(0, 0, 1, 0.8);
}

.price-item {
  position: relative; 
  border-radius: 16px;
  padding: 0;
  position: relative;
  display: flex;
  justify-content: space-between;
  min-height: 850px;
  flex-direction: column;
  flex-basis: 430px;
}

.price-item-content {
  max-width: 310px;
  display: -webkit-box;
  display: -ms-flexbox;
  display: flex;
  -webkit-box-orient: vertical;
  -webkit-box-direction: normal;
  -ms-flex-direction: column;
  flex-direction: column;
  margin: 0 auto;
  padding: 60px 20px 0 20px;
}

.price-item-big {
  font: normal 400 50px/25px "DM Serif Display";
  letter-spacing: 0.03em;
  color: #FFFFFF;
}

.price-item-month {
  color: #A5ADBB;
}

.price-item-name {
  font: normal 400 21px/25px "Arsenal";
  color: #FFFFFF;
  margin-bottom: 30px;
  margin-top: 17px;
}

.price-item-features {
  margin-top: 20px;
  padding-top: 60px;
  border-top: 2px solid rgba(235, 236, 237, 0.2);
}

.price-item-feature:not(:last-child) {
  margin-bottom: 20px;
}

.price-item-feature::before {
  content: url("../img/svg/price-check-mark.svg");
  margin-right: 10px;
}

.price-item-button {
  margin-top: auto;
  margin-bottom: 80px;
  height: 50px;
  width: 260px;
  display: -webkit-box;
  display: -ms-flexbox;
  display: flex;
  -webkit-box-align: center;
  -ms-flex-align: center;
  align-items: center;
  -webkit-box-pack: center;
  -ms-flex-pack: center;
  justify-content: center;
  margin: 50px auto 80px auto;
  cursor: pointer;
}

.price-bottom {
  text-align: center;
  margin-bottom: 50px;
}

.price-bottom-logo {
  font-size: 48px;
  margin: 0 auto 15px;
}

.price-bottom-email {
  text-decoration: underline;
  font-size: 24px;
  margin-bottom: 20px;
}

.price-bottom-social {
  margin: 0 auto;
}

.price-bottom-address {
  margin-bottom: 40px;
}

@font-face {
  font-family: "swiper-icons";
  src: url("data:application/font-woff;charset=utf-8;base64, d09GRgABAAAAAAZgABAAAAAADAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAABGRlRNAAAGRAAAABoAAAAci6qHkUdERUYAAAWgAAAAIwAAACQAYABXR1BPUwAABhQAAAAuAAAANuAY7+xHU1VCAAAFxAAAAFAAAABm2fPczU9TLzIAAAHcAAAASgAAAGBP9V5RY21hcAAAAkQAAACIAAABYt6F0cBjdnQgAAACzAAAAAQAAAAEABEBRGdhc3AAAAWYAAAACAAAAAj//wADZ2x5ZgAAAywAAADMAAAD2MHtryVoZWFkAAABbAAAADAAAAA2E2+eoWhoZWEAAAGcAAAAHwAAACQC9gDzaG10eAAAAigAAAAZAAAArgJkABFsb2NhAAAC0AAAAFoAAABaFQAUGG1heHAAAAG8AAAAHwAAACAAcABAbmFtZQAAA/gAAAE5AAACXvFdBwlwb3N0AAAFNAAAAGIAAACE5s74hXjaY2BkYGAAYpf5Hu/j+W2+MnAzMYDAzaX6QjD6/4//Bxj5GA8AuRwMYGkAPywL13jaY2BkYGA88P8Agx4j+/8fQDYfA1AEBWgDAIB2BOoAeNpjYGRgYNBh4GdgYgABEMnIABJzYNADCQAACWgAsQB42mNgYfzCOIGBlYGB0YcxjYGBwR1Kf2WQZGhhYGBiYGVmgAFGBiQQkOaawtDAoMBQxXjg/wEGPcYDDA4wNUA2CCgwsAAAO4EL6gAAeNpj2M0gyAACqxgGNWBkZ2D4/wMA+xkDdgAAAHjaY2BgYGaAYBkGRgYQiAHyGMF8FgYHIM3DwMHABGQrMOgyWDLEM1T9/w8UBfEMgLzE////P/5//f/V/xv+r4eaAAeMbAxwIUYmIMHEgKYAYjUcsDAwsLKxc3BycfPw8jEQA/gZBASFhEVExcQlJKWkZWTl5BUUlZRVVNXUNTQZBgMAAMR+E+gAEQFEAAAAKgAqACoANAA+AEgAUgBcAGYAcAB6AIQAjgCYAKIArAC2AMAAygDUAN4A6ADyAPwBBgEQARoBJAEuATgBQgFMAVYBYAFqAXQBfgGIAZIBnAGmAbIBzgHsAAB42u2NMQ6CUAyGW568x9AneYYgm4MJbhKFaExIOAVX8ApewSt4Bic4AfeAid3VOBixDxfPYEza5O+Xfi04YADggiUIULCuEJK8VhO4bSvpdnktHI5QCYtdi2sl8ZnXaHlqUrNKzdKcT8cjlq+rwZSvIVczNiezsfnP/uznmfPFBNODM2K7MTQ45YEAZqGP81AmGGcF3iPqOop0r1SPTaTbVkfUe4HXj97wYE+yNwWYxwWu4v1ugWHgo3S1XdZEVqWM7ET0cfnLGxWfkgR42o2PvWrDMBSFj/IHLaF0zKjRgdiVMwScNRAoWUoH78Y2icB/yIY09An6AH2Bdu/UB+yxopYshQiEvnvu0dURgDt8QeC8PDw7Fpji3fEA4z/PEJ6YOB5hKh4dj3EvXhxPqH/SKUY3rJ7srZ4FZnh1PMAtPhwP6fl2PMJMPDgeQ4rY8YT6Gzao0eAEA409DuggmTnFnOcSCiEiLMgxCiTI6Cq5DZUd3Qmp10vO0LaLTd2cjN4fOumlc7lUYbSQcZFkutRG7g6JKZKy0RmdLY680CDnEJ+UMkpFFe1RN7nxdVpXrC4aTtnaurOnYercZg2YVmLN/d/gczfEimrE/fs/bOuq29Zmn8tloORaXgZgGa78yO9/cnXm2BpaGvq25Dv9S4E9+5SIc9PqupJKhYFSSl47+Qcr1mYNAAAAeNptw0cKwkAAAMDZJA8Q7OUJvkLsPfZ6zFVERPy8qHh2YER+3i/BP83vIBLLySsoKimrqKqpa2hp6+jq6RsYGhmbmJqZSy0sraxtbO3sHRydnEMU4uR6yx7JJXveP7WrDycAAAAAAAH//wACeNpjYGRgYOABYhkgZgJCZgZNBkYGLQZtIJsFLMYAAAw3ALgAeNolizEKgDAQBCchRbC2sFER0YD6qVQiBCv/H9ezGI6Z5XBAw8CBK/m5iQQVauVbXLnOrMZv2oLdKFa8Pjuru2hJzGabmOSLzNMzvutpB3N42mNgZGBg4GKQYzBhYMxJLMlj4GBgAYow/P/PAJJhLM6sSoWKfWCAAwDAjgbRAAB42mNgYGBkAIIbCZo5IPrmUn0hGA0AO8EFTQAA") format("woff");
  font-weight: 400;
  font-style: normal;
}

:root {
  --swiper-theme-color: #007aff;
}

.swiper {
  margin-left: auto;
  margin-right: auto;
  position: relative;
  overflow: hidden;
  list-style: none;
  padding: 0;
  z-index: 1;
}

.swiper-vertical > .swiper-wrapper {
  -webkit-box-orient: vertical;
  -webkit-box-direction: normal;
  -ms-flex-direction: column;
  flex-direction: column;
}

.swiper-wrapper {
  position: relative;
  width: 100%;
  height: 100%;
  z-index: 1;
  display: -webkit-box;
  display: -ms-flexbox;
  display: flex;
  -webkit-transition-property: -webkit-transform;
  transition-property: -webkit-transform;
  -o-transition-property: transform;
  transition-property: transform;
  transition-property: transform, -webkit-transform;
  -webkit-box-sizing: content-box;
  box-sizing: content-box;
}

.swiper-android .swiper-slide,
.swiper-wrapper {
  -webkit-transform: translate3d(0px, 0, 0);
  transform: translate3d(0px, 0, 0);
}

.swiper-pointer-events {
  -ms-touch-action: pan-y;
  touch-action: pan-y;
}

.swiper-pointer-events.swiper-vertical {
  -ms-touch-action: pan-x;
  touch-action: pan-x;
}

.swiper-slide {
  -ms-flex-negative: 0;
  flex-shrink: 0;
  width: 100%;
  height: 100%;
  position: relative;
  -webkit-transition-property: -webkit-transform;
  transition-property: -webkit-transform;
  -o-transition-property: transform;
  transition-property: transform;
  transition-property: transform, -webkit-transform;
}

.swiper-slide-invisible-blank {
  visibility: hidden;
}

.swiper-autoheight,
.swiper-autoheight .swiper-slide {
  height: auto;
}

.swiper-autoheight .swiper-wrapper {
  -webkit-box-align: start;
  -ms-flex-align: start;
  align-items: flex-start;
  -webkit-transition-property: height, -webkit-transform;
  transition-property: height, -webkit-transform;
  -o-transition-property: transform, height;
  transition-property: transform, height;
  transition-property: transform, height, -webkit-transform;
}

.swiper-backface-hidden .swiper-slide {
  -webkit-transform: translateZ(0);
  transform: translateZ(0);
  -webkit-backface-visibility: hidden;
  backface-visibility: hidden;
}

.swiper-3d,
.swiper-3d.swiper-css-mode .swiper-wrapper {
  -webkit-perspective: 1200px;
  perspective: 1200px;
}

.swiper-3d .swiper-wrapper,
.swiper-3d .swiper-slide,
.swiper-3d .swiper-slide-shadow,
.swiper-3d .swiper-slide-shadow-left,
.swiper-3d .swiper-slide-shadow-right,
.swiper-3d .swiper-slide-shadow-top,
.swiper-3d .swiper-slide-shadow-bottom,
.swiper-3d .swiper-cube-shadow {
  -webkit-transform-style: preserve-3d;
  transform-style: preserve-3d;
}

.swiper-3d .swiper-slide-shadow,
.swiper-3d .swiper-slide-shadow-left,
.swiper-3d .swiper-slide-shadow-right,
.swiper-3d .swiper-slide-shadow-top,
.swiper-3d .swiper-slide-shadow-bottom {
  position: absolute;
  left: 0;
  top: 0;
  width: 100%;
  height: 100%;
  pointer-events: none;
  z-index: 10;
}

.swiper-3d .swiper-slide-shadow {
  background: rgba(0, 0, 0, 0.15);
}

.swiper-3d .swiper-slide-shadow-left {
  background: -webkit-gradient(linear, right top, left top, from(rgba(0, 0, 0, 0.5)), to(rgba(0, 0, 0, 0)));
  background: -o-linear-gradient(right, rgba(0, 0, 0, 0.5), rgba(0, 0, 0, 0));
  background: linear-gradient(to left, rgba(0, 0, 0, 0.5), rgba(0, 0, 0, 0));
}

.swiper-3d .swiper-slide-shadow-right {
  background: -webkit-gradient(linear, left top, right top, from(rgba(0, 0, 0, 0.5)), to(rgba(0, 0, 0, 0)));
  background: -o-linear-gradient(left, rgba(0, 0, 0, 0.5), rgba(0, 0, 0, 0));
  background: linear-gradient(to right, rgba(0, 0, 0, 0.5), rgba(0, 0, 0, 0));
}

.swiper-3d .swiper-slide-shadow-top {
  background: -webkit-gradient(linear, left bottom, left top, from(rgba(0, 0, 0, 0.5)), to(rgba(0, 0, 0, 0)));
  background: -o-linear-gradient(bottom, rgba(0, 0, 0, 0.5), rgba(0, 0, 0, 0));
  background: linear-gradient(to top, rgba(0, 0, 0, 0.5), rgba(0, 0, 0, 0));
}

.swiper-3d .swiper-slide-shadow-bottom {
  background: -webkit-gradient(linear, left top, left bottom, from(rgba(0, 0, 0, 0.5)), to(rgba(0, 0, 0, 0)));
  background: -o-linear-gradient(top, rgba(0, 0, 0, 0.5), rgba(0, 0, 0, 0));
  background: linear-gradient(to bottom, rgba(0, 0, 0, 0.5), rgba(0, 0, 0, 0));
}

.swiper-css-mode > .swiper-wrapper {
  overflow: auto;
  scrollbar-width: none;
  -ms-overflow-style: none;
}

.swiper-css-mode > .swiper-wrapper::-webkit-scrollbar {
  display: none;
}

.swiper-css-mode > .swiper-wrapper > .swiper-slide {
  scroll-snap-align: start start;
}

.swiper-horizontal.swiper-css-mode > .swiper-wrapper {
  -ms-scroll-snap-type: x mandatory;
  scroll-snap-type: x mandatory;
}

.swiper-vertical.swiper-css-mode > .swiper-wrapper {
  -ms-scroll-snap-type: y mandatory;
  scroll-snap-type: y mandatory;
}

.swiper-centered > .swiper-wrapper::before {
  content: "";
  -ms-flex-negative: 0;
  flex-shrink: 0;
  -webkit-box-ordinal-group: 10000;
  -ms-flex-order: 9999;
  order: 9999;
}

.swiper-centered.swiper-horizontal > .swiper-wrapper > .swiper-slide:first-child {
  -webkit-margin-start: var(--swiper-centered-offset-before);
  margin-inline-start: var(--swiper-centered-offset-before);
}

.swiper-centered.swiper-horizontal > .swiper-wrapper::before {
  height: 100%;
  width: var(--swiper-centered-offset-after);
}

.swiper-centered.swiper-vertical > .swiper-wrapper > .swiper-slide:first-child {
  -webkit-margin-before: var(--swiper-centered-offset-before);
  margin-block-start: var(--swiper-centered-offset-before);
}

.swiper-centered.swiper-vertical > .swiper-wrapper::before {
  width: 100%;
  height: var(--swiper-centered-offset-after);
}

.swiper-centered > .swiper-wrapper > .swiper-slide {
  scroll-snap-align: center center;
}

.testimonials {
  max-width: 1030px;
  margin-bottom: 250px;
}

.testimonials-slider {
  display: -webkit-box;
  display: -ms-flexbox;
  display: flex;
}

.testimonials-img {
  margin-right: 100px;
  margin-top: 77px;
}

.testimonials-content__quote {
  font: italic 400 32px/170% "Arsenal";
}

.testimonials-content__author {
  font-family: "Open Sans";
  font-style: normal;
  color: #8991AF;
}

.testimonials-content__company {
  font: normal 400 18px/180% "Open Sans";
}

.swiper-wrapper {
  margin-bottom: 62px;
}

.swiper-horizontal > .swiper-pagination-bullets .swiper-pagination-bullet,
.swiper-pagination-horizontal.swiper-pagination-bullets .swiper-pagination-bullet {
  padding: 0 0;
  position: relative;
}

.swiper-horizontal > .swiper-pagination-bullets .swiper-pagination-bullet-active,
.swiper-pagination-horizontal.swiper-pagination-bullets .swiper-pagination-bullet-active {
  top: -2px;
  width: 12px;
  height: 12px;
  -webkit-transition: all 0.5s ease;
  -o-transition: all 0.5s ease;
  transition: all 0.5s ease;
}

.swiper-horizontal > .swiper-pagination-bullets .swiper-pagination-bullet-active::after,
.swiper-pagination-horizontal.swiper-pagination-bullets .swiper-pagination-bullet-active::after {
  margin-left: -9px;
}

.swiper-pagination-bullet::after {
  content: "";
  padding: 10px 15px;
  margin-left: -11px;
}

@supports (-webkit-appearance:none) {
  .header-email:before {
    background: url("../img/svg/email.svg") no-repeat;
  }

  .header-phone:before {
    background: url("../img/svg/phone.svg") no-repeat;
  }

  .header-content {
    background: url("../img/header-bg.webp") no-repeat center center/cover;
  }

  .pricing {
    background: url("../img/svg/footer-bg.svg") center center/cover;
  }
}

@media (max-width: 1800px) {
  .content {
    padding: 0 20px;
  }

@supports (-webkit-appearance:none) {

}
}

@media (max-width: 1440px) {
  .highlights-content-media-img img {
    max-width: 450px;
  }

  .highlights-content {
    -webkit-column-gap: 40px;
    -moz-column-gap: 40px;
    column-gap: 40px;
  }

  .hotels-items {
    grid-template-columns: repeat(2, 1fr);
    justify-items: center;
    row-gap: 50px;
    -webkit-column-gap: 10px;
    -moz-column-gap: 10px;
    column-gap: 10px;
  }

  .hotels-item__img {
    max-width: none;
    width: 100%;
    -o-object-fit: cover;
    object-fit: cover;
  }

  .hotels-item {
    max-width: 400px;
  }

@supports (-webkit-appearance:none) {

}
}

@media (max-width: 1040px) {
  .highlights-content {
    grid-template-columns: 1fr;
    justify-items: center;
    row-gap: 0;
  }

  .highlights-content-media-img_top {
    grid-row-start: 3;
    margin-top: 150px;
  }

@supports (-webkit-appearance:none) {

}
}

@media (max-width: 992px) {
  .header-top {
    -webkit-box-orient: vertical;
    -webkit-box-direction: normal;
    -ms-flex-direction: column;
    flex-direction: column;
    -webkit-box-pack: space-evenly;
    -ms-flex-pack: space-evenly;
    justify-content: space-evenly;
    height: 88px;
  }

  .header-navigation {
    max-width: none;
  }

  .header-navigation__element {
    -webkit-column-gap: 30px;
    -moz-column-gap: 30px;
    column-gap: 30px;
  }

  .header-features {
    grid-template-columns: repeat(2, 250px);
    -webkit-box-pack: space-evenly;
    -ms-flex-pack: space-evenly;
    justify-content: space-evenly;
  }

  .header-about {
    -webkit-box-orient: vertical;
    -webkit-box-direction: normal;
    -ms-flex-direction: column;
    flex-direction: column;
    -webkit-box-align: center;
    -ms-flex-align: center;
    align-items: center;
    text-align: center;
  }

  .section-description {
    padding-left: 0;
  }

  .section-title {
    font-size: 32px;
  }

  .price-items {
    -webkit-box-orient: vertical;
    -webkit-box-direction: normal;
    -ms-flex-direction: column;
    flex-direction: column;
    -webkit-box-align: center;
    -ms-flex-align: center;
    align-items: center;
    row-gap: 50px;
  }

  .price-item {
    width: 90%;
    -webkit-box-pack: justify;
    -ms-flex-pack: justify;
    justify-content: space-between;
    min-height: auto;
  }

  .price-item-content {
    max-width: none;
  }

  .price-item-button {
    margin-bottom: 50px;
  }

  .price-item-features {
    padding-top: 40px;
  }

@supports (-webkit-appearance:none) {

}
}

@media (max-width: 768px) {
  .header-content {
    padding: 0;
  }

  .header-navigation {
    position: relative;
  }

  .header-navigation__element {
    position: absolute;
    background: #09131B;
    -webkit-box-orient: vertical;
    -webkit-box-direction: normal;
    -ms-flex-direction: column;
    flex-direction: column;
    width: 100%;
    top: -1px;
    padding: 50px 0 50px 0;
    row-gap: 30px;
    -webkit-transform: translateX(-100%);
    -ms-transform: translateX(-100%);
    transform: translateX(-100%);
    -webkit-transition: all 0.6s ease-in-out;
    -o-transition: all 0.6s ease-in-out;
    transition: all 0.6s ease-in-out;
  }

  .header-navigation__element.active {
    -webkit-transform: translateX(0);
    -ms-transform: translateX(0);
    transform: translateX(0);
    -webkit-transition: all 0.6s ease-in-out;
    -o-transition: all 0.6s ease-in-out;
    transition: all 0.6s ease-in-out;
  }

  .header-navigation__icon {
    display: block;
    -webkit-tap-highlight-color: rgba(255, 255, 255, 0);
    -webkit-tap-highlight-color: transparent;
  }

  .header-navigation__icon-close {
    position: absolute;
    right: 20px;
    display: block;
  }

  .header-navigation__logo,
  .header-navigation__icon {
    padding: 0 20px;
  }

  .header-app__title {
    font-size: 68px;
    line-height: 75px;
    margin-bottom: 30px;
  }

  .header-app__subtitle {
    font-size: 17px;
  }

  .header-search__input {
    font-size: 17px;
    padding-left: 0;
    height: 60px;
    text-align: center;
    border-radius: 8px 0 0 8px;
  }

  .header-search__title {
    font-size: 17px;
  }

  .header-search__button {
    height: 60px;
    min-width: 67px;
    border-radius: 0 8px 8px 0;
  }

  .hotels-countries {
    display: grid;
    grid-template-columns: 1fr 1fr 1fr;
    -webkit-column-gap: 20px;
    -moz-column-gap: 20px;
    column-gap: 20px;
  }

  .hotels-countries-name {
    justify-self: center;
  }

  .hotels-items {
    grid-template-columns: repeat(1, 1fr);
  }

  .testimonials-img {
    margin-right: 25px;
    margin-top: 50px;
  }

  .testimonials-content__quote {
    font-size: 24px;
  }

  .testimonials-img img {
    max-width: 50px;
  }

@supports (-webkit-appearance:none) {

}
}

@media (max-width: 640px) {
  .header-contacts {
    display: -webkit-box;
    display: -ms-flexbox;
    display: flex;
    -webkit-box-orient: vertical;
    -webkit-box-direction: normal;
    -ms-flex-direction: column;
    flex-direction: column;
  }

  .header-top {
    height: 108px;
    -webkit-box-pack: center;
    -ms-flex-pack: center;
    justify-content: center;
  }

  .header-phone {
    margin-bottom: 15px;
    padding-left: 0;
  }

  .header-features {
    grid-template-columns: repeat(1, 250px);
    -webkit-box-pack: space-evenly;
    -ms-flex-pack: space-evenly;
    justify-content: space-evenly;
  }

  .header-feature {
    text-align: center;
    margin-bottom: 50px;
  }

  .header-feature__description {
    margin-top: 0;
  }

  .header-feature__img {
    position: initial;
  }

  .header-feature__title {
    margin-top: 0;
  }

  .highlights-content-media-img img {
    max-width: 300px;
  }

  .price-item-button {
    max-width: 200px;
  }

  .price-bottom-email {
    font-size: 22px;
  }

@supports (-webkit-appearance:none) {

}
}
/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIm5vcm1hbGl6ZS9ub3JtYWxpemUtbm8tY29tbWVudHMuc2NzcyIsIm1haW4uY3NzIiwibWFpbi5zY3NzIiwidmFycy92YXJzLnNjc3MiLCJjaHVua3MvZm9udHMuc2NzcyIsImNodW5rcy9mb290ZXIuc2NzcyIsImNodW5rcy9oZWFkZXIuc2NzcyIsImNodW5rcy9oaWdobGlnaHRzLnNjc3MiLCJjaHVua3MvaG90ZWxzLnNjc3MiLCJjaHVua3MvcGFnaW5hdGlvbi5zY3NzIiwiY2h1bmtzL3ByaWNpbmcuc2NzcyIsImNodW5rcy9zd2lwZXIuc2NzcyIsImNodW5rcy90ZXN0aW1vbmlhbHMuc2NzcyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFDQTtFQUNFLGlCQUFBO0VBQ0EsOEJBQUE7RUFDQSw4QkFBQTtVQUFBLHNCQUFBO0FDQUY7O0FESUE7RUFDRSxTQUFBO0FDREY7O0FESUE7RUFDRSxjQUFBO0FDREY7O0FES0E7RUFDRSxjQUFBO0VBQ0EsZ0JBQUE7QUNGRjs7QURPQTtFQUNFLCtCQUFBO1VBQUEsdUJBQUE7RUFDQSxTQUFBO0VBQ0EsaUJBQUE7QUNKRjs7QURTQTtFQUNFLDhCQUFBO0FDTkY7O0FBRUE7RURVQSx1QkFBQTtBQ1JBOztBQUVBO0VEV0EsbUJBQUE7RUFDRSwwQkFBQTtFQUNBLHlDQUFBO1VBQUEsaUNBQUE7QUNURjs7QUFFQTs7RURXQSxtQkFBQTtBQ1JBOztBQUVBOzs7RURZQSw4QkFBQTtBQ1JBOztBQUVBO0VBQ0UsY0FBYztBRGFoQjs7QUNWQTs7RURlQSxjQUFBO0VBQUEsY0FBQTtFQUVFLGtCQUFBO0VBQ0Esd0JBQUE7QUNaRjs7QUFFQTtFQUNFLGVBQWU7QURjakI7O0FDWEE7RUFDRSxXQUFXO0FEY2I7O0FDWEE7RUFDRSxrQkFBa0I7QURlcEI7O0FDWkE7Ozs7O0VEaUJBLHVCQUFBO0VBQUEsU0FBQTtBQ1ZBOztBQUVBOztFQUVFLGlCQUFpQjtBQUNuQjs7QURpQkE7O0VDYkUsb0JBQW9CO0FBQ3RCOztBRGtCQTs7OztF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LDhEQUE4RDtBQUN2RTs7Q0FFQzs7QUFFRDs7QUFFQTs7QUFFQTs7Q0FFQzs7QUFFRDs7QUFFQTs7QUFFQTs7Q0FFQzs7QUFFRDs7QUFFQTs7QUFFQTs7Q0FFQzs7QUFFRDs7QUFFQTs7QUFFQTs7Q0FFQzs7QUFFRDs7QUFFQTs7QUFFQTs7Q0FFQzs7QUFFRDs7QUFFQTs7QUFFQSIsImZpbGUiOiJtYWluLmNzcyIsInNvdXJjZXNDb250ZW50IjpbIlxuaHRtbCB7XG4gIGxpbmUtaGVpZ2h0OiAxLjE1OyBcbiAgLXdlYmtpdC10ZXh0LXNpemUtYWRqdXN0OiAxMDAlOyBcbiAgYm94LXNpemluZzogYm9yZGVyLWJveDtcbn1cblxuXG5ib2R5IHtcbiAgbWFyZ2luOiAwO1xufVxuXG5tYWluIHtcbiAgZGlzcGxheTogYmxvY2s7XG59XG5cblxuaDEge1xuICBmb250LXNpemU6IDJlbTtcbiAgbWFyZ2luOiAwLjY3ZW0gMDtcbn1cblxuXG5cbmhyIHtcbiAgYm94LXNpemluZzogY29udGVudC1ib3g7IFxuICBoZWlnaHQ6IDA7IFxuICBvdmVyZmxvdzogdmlzaWJsZTsgXG59XG5cblxuXG5wcmUge1xuICBmb250LWZhbWlseTogbW9ub3NwYWNlLCBtb25vc3BhY2U7IFxuICBmb250LXNpemU6IDFlbTsgXG59XG5cblxuXG5hIHtcbiAgYmFja2dyb3VuZC1jb2xvcjogdHJhbnNwYXJlbnQ7XG59XG5cblxuYWJiclt0aXRsZV0ge1xuICBib3JkZXItYm90dG9tOiBub25lOyBcbiAgdGV4dC1kZWNvcmF0aW9uOiB1bmRlcmxpbmU7IFxuICB0ZXh0LWRlY29yYXRpb246IHVuZGVybGluZSBkb3R0ZWQ7IFxufVxuXG5iLFxuc3Ryb25nIHtcbiAgZm9udC13ZWlnaHQ6IGJvbGRlcjtcbn1cblxuXG5jb2RlLFxua2JkLFxuc2FtcCB7XG4gIGZvbnQtZmFtaWx5OiBtb25vc3BhY2UsIG1vbm9zcGFjZTsgXG4gIGZvbnQtc2l6ZTogMWVtOyBcbn1cblxuXG5zbWFsbCB7XG4gIGZvbnQtc2l6ZTogODAlO1xufVxuXG5cbnN1YixcbnN1cCB7XG4gIGZvbnQtc2l6ZTogNzUlO1xuICBsaW5lLWhlaWdodDogMDtcbiAgcG9zaXRpb246IHJlbGF0aXZlO1xuICB2ZXJ0aWNhbC1hbGlnbjogYmFzZWxpbmU7XG59XG5cbnN1YiB7XG4gIGJvdHRvbTogLTAuMjVlbTtcbn1cblxuc3VwIHtcbiAgdG9wOiAtMC41ZW07XG59XG5cblxuaW1nIHtcbiAgYm9yZGVyLXN0eWxlOiBub25lO1xufVxuXG5cbmJ1dHRvbixcbmlucHV0LFxub3B0Z3JvdXAsXG5zZWxlY3QsXG50ZXh0YXJlYSB7XG4gIGZvbnQtZmFtaWx5OiBpbmhlcml0OyBcbiAgZm9udC1zaXplOiAxMDAlOyBcbiAgbGluZS1oZWlnaHQ6IDEuMTU7IFxuICBtYXJnaW46IDA7IFxufVxuXG5cbmJ1dHRvbixcbmlucHV0IHsgXG4gIG92ZXJmbG93OiB2aXNpYmxlO1xufVxuXG5cbmJ1dHRvbixcbnNlbGVjdCB7IFxuICB0ZXh0LXRyYW5zZm9ybTogbm9uZTtcbn1cblxuYnV0dG9uLFxuW3R5cGU9XCJidXR0b25cIl0sXG5bdHlwZT1cInJlc2V0XCJdLFxuW3R5cGU9XCJzdWJtaXRcIl0ge1xuICAtd2Via2l0LWFwcGVhcmFuY2U6IGJ1dHRvbjtcbn1cblxuXG5idXR0b246Oi1tb3otZm9jdXMtaW5uZXIsXG5bdHlwZT1cImJ1dHRvblwiXTo6LW1vei1mb2N1cy1pbm5lcixcblt0eXBlPVwicmVzZXRcIl06Oi1tb3otZm9jdXMtaW5uZXIsXG5bdHlwZT1cInN1Ym1pdFwiXTo6LW1vei1mb2N1cy1pbm5lciB7XG4gIGJvcmRlci1zdHlsZTogbm9uZTtcbiAgcGFkZGluZzogMDtcbn1cblxuXG5idXR0b246LW1vei1mb2N1c3JpbmcsXG5bdHlwZT1cImJ1dHRvblwiXTotbW96LWZvY3VzcmluZyxcblt0eXBlPVwicmVzZXRcIl06LW1vei1mb2N1c3JpbmcsXG5bdHlwZT1cInN1Ym1pdFwiXTotbW96LWZvY3VzcmluZyB7XG4gIG91dGxpbmU6IDFweCBkb3R0ZWQgQnV0dG9uVGV4dDtcbn1cblxuXG5maWVsZHNldCB7XG4gIHBhZGRpbmc6IDAuMzVlbSAwLjc1ZW0gMC42MjVlbTtcbn1cblxuXG5sZWdlbmQge1xuICBib3gtc2l6aW5nOiBib3JkZXItYm94OyBcbiAgY29sb3I6IGluaGVyaXQ7IFxuICBkaXNwbGF5OiB0YWJsZTsgXG4gIG1heC13aWR0aDogMTAwJTsgXG4gIHBhZGRpbmc6IDA7IFxuICB3aGl0ZS1zcGFjZTogbm9ybWFsOyBcbn1cblxuXG5wcm9ncmVzcyB7XG4gIHZlcnRpY2FsLWFsaWduOiBiYXNlbGluZTtcbn1cblxuXG50ZXh0YXJlYSB7XG4gIG92ZXJmbG93OiBhdXRvO1xufVxuXG5cblt0eXBlPVwiY2hlY2tib3hcIl0sXG5bdHlwZT1cInJhZGlvXCJdIHtcbiAgYm94LXNpemluZzogYm9yZGVyLWJveDsgXG4gIHBhZGRpbmc6IDA7IFxufVxuXG5cblt0eXBlPVwibnVtYmVyXCJdOjotd2Via2l0LWlubmVyLXNwaW4tYnV0dG9uLFxuW3R5cGU9XCJudW1iZXJcIl06Oi13ZWJraXQtb3V0ZXItc3Bpbi1idXR0b24ge1xuICBoZWlnaHQ6IGF1dG87XG59XG5cblxuW3R5cGU9XCJzZWFyY2hcIl0ge1xuICAtd2Via2l0LWFwcGVhcmFuY2U6IHRleHRmaWVsZDtcbiAgb3V0bGluZS1vZmZzZXQ6IC0ycHg7XG59XG5cblxuW3R5cGU9XCJzZWFyY2hcIl06Oi13ZWJraXQtc2VhcmNoLWRlY29yYXRpb24ge1xuICAtd2Via2l0LWFwcGVhcmFuY2U6IG5vbmU7XG59XG5cblxuOjotd2Via2l0LWZpbGUtdXBsb2FkLWJ1dHRvbiB7XG4gIC13ZWJraXQtYXBwZWFyYW5jZTogYnV0dG9uOyBcbiAgZm9udDogaW5oZXJpdDsgXG59XG5cblxuZGV0YWlscyB7XG4gIGRpc3BsYXk6IGJsb2NrO1xufVxuXG5cbnN1bW1hcnkge1xuICBkaXNwbGF5OiBsaXN0LWl0ZW07XG59XG5cbnRlbXBsYXRlIHtcbiAgZGlzcGxheTogbm9uZTtcbn1cblxuXG5baGlkZGVuXSB7XG4gIGRpc3BsYXk6IG5vbmU7XG59XG4iLCJodG1sIHtcbiAgbGluZS1oZWlnaHQ6IDEuMTU7XG4gIC13ZWJraXQtdGV4dC1zaXplLWFkanVzdDogMTAwJTtcbiAgYm94LXNpemluZzogYm9yZGVyLWJveDtcbn1cblxuYm9keSB7XG4gIG1hcmdpbjogMDtcbn1cblxubWFpbiB7XG4gIGRpc3BsYXk6IGJsb2NrO1xufVxuXG5oMSB7XG4gIGZvbnQtc2l6ZTogMmVtO1xuICBtYXJnaW46IDAuNjdlbSAwO1xufVxuXG5ociB7XG4gIGJveC1zaXppbmc6IGNvbnRlbnQtYm94O1xuICBoZWlnaHQ6IDA7XG4gIG92ZXJmbG93OiB2aXNpYmxlO1xufVxuXG5wcmUge1xuICBmb250OiAxZW0gbW9ub3NwYWNlLCBtb25vc3BhY2U7XG59XG5cbmEge1xuICBiYWNrZ3JvdW5kOiB0cmFuc3BhcmVudDtcbn1cblxuYWJiclt0aXRsZV0ge1xuICBib3JkZXItYm90dG9tOiBub25lO1xuICB0ZXh0LWRlY29yYXRpb246IHVuZGVybGluZTtcbiAgdGV4dC1kZWNvcmF0aW9uOiB1bmRlcmxpbmUgZG90dGVkO1xufVxuXG5iLFxuc3Ryb25nIHtcbiAgZm9udC13ZWlnaHQ6IGJvbGRlcjtcbn1cblxuY29kZSxcbmtiZCxcbnNhbXAge1xuICBmb250OiAxZW0gbW9ub3NwYWNlLCBtb25vc3BhY2U7XG59XG5cbnNtYWxsIHtcbiAgZm9udC1zaXplOiA4MCU7XG59XG5cbnN1YixcbnN1cCB7XG4gIGZvbnQtc2l6ZTogNzUlO1xuICBsaW5lLWhlaWdodDogMDtcbiAgcG9zaXRpb246IHJlbGF0aXZlO1xuICB2ZXJ0aWNhbC1hbGlnbjogYmFzZWxpbmU7XG59XG5cbnN1YiB7XG4gIGJvdHRvbTogLTAuMjVlbTtcbn1cblxuc3VwIHtcbiAgdG9wOiAtMC41ZW07XG59XG5cbmltZyB7XG4gIGJvcmRlci1zdHlsZTogbm9uZTtcbn1cblxuYnV0dG9uLFxuaW5wdXQsXG5vcHRncm91cCxcbnNlbGVjdCxcbnRleHRhcmVhIHtcbiAgZm9udDogMTAwJS8xLjE1IGluaGVyaXQ7XG4gIG1hcmdpbjogMDtcbn1cblxuYnV0dG9uLFxuaW5wdXQge1xuICBvdmVyZmxvdzogdmlzaWJsZTtcbn1cblxuYnV0dG9uLFxuc2VsZWN0IHtcbiAgdGV4dC10cmFuc2Zvcm06IG5vbmU7XG59XG5cbmJ1dHRvbixcblt0eXBlPWJ1dHRvbl0sXG5bdHlwZT1yZXNldF0sXG5bdHlwZT1zdWJtaXRdIHtcbiAgLXdlYmtpdC1hcHBlYXJhbmNlOiBidXR0b247XG59XG5cbmJ1dHRvbjo6LW1vei1mb2N1cy1pbm5lcixcblt0eXBlPWJ1dHRvbl06Oi1tb3otZm9jdXMtaW5uZXIsXG5bdHlwZT1yZXNldF06Oi1tb3otZm9jdXMtaW5uZXIsXG5bdHlwZT1zdWJtaXRdOjotbW96LWZvY3VzLWlubmVyIHtcbiAgYm9yZGVyLXN0eWxlOiBub25lO1xuICBwYWRkaW5nOiAwO1xufVxuXG5idXR0b246LW1vei1mb2N1c3JpbmcsXG5bdHlwZT1idXR0b25dOi1tb3otZm9jdXNyaW5nLFxuW3R5cGU9cmVzZXRdOi1tb3otZm9jdXNyaW5nLFxuW3R5cGU9c3VibWl0XTotbW96LWZvY3VzcmluZyB7XG4gIG91dGxpbmU6IDFweCBkb3R0ZWQgQnV0dG9uVGV4dDtcbn1cblxuZmllbGRzZXQge1xuICBwYWRkaW5nOiAwLjM1ZW0gMC43NWVtIDAuNjI1ZW07XG59XG5cbmxlZ2VuZCB7XG4gIGJveC1zaXppbmc6IGJvcmRlci1ib3g7XG4gIGNvbG9yOiBpbmhlcml0O1xuICBkaXNwbGF5OiB0YWJsZTtcbiAgbWF4LXdpZHRoOiAxMDAlO1xuICBwYWRkaW5nOiAwO1xuICB3aGl0ZS1zcGFjZTogbm9ybWFsO1xufVxuXG5wcm9ncmVzcyB7XG4gIHZlcnRpY2FsLWFsaWduOiBiYXNlbGluZTtcbn1cblxudGV4dGFyZWEge1xuICBvdmVyZmxvdzogYXV0bztcbn1cblxuW3R5cGU9Y2hlY2tib3hdLFxuW3R5cGU9cmFkaW9dIHtcbiAgYm94LXNpemluZzogYm9yZGVyLWJveDtcbiAgcGFkZGluZzogMDtcbn1cblxuW3R5cGU9bnVtYmVyXTo6LXdlYmtpdC1pbm5lci1zcGluLWJ1dHRvbixcblt0eXBlPW51bWJlcl06Oi13ZWJraXQtb3V0ZXItc3Bpbi1idXR0b24ge1xuICBoZWlnaHQ6IGF1dG87XG59XG5cblt0eXBlPXNlYXJjaF0ge1xuICAtd2Via2l0LWFwcGVhcmFuY2U6IHRleHRmaWVsZDtcbiAgb3V0bGluZS1vZmZzZXQ6IC0ycHg7XG59XG5cblt0eXBlPXNlYXJjaF06Oi13ZWJraXQtc2VhcmNoLWRlY29yYXRpb24ge1xuICAtd2Via2l0LWFwcGVhcmFuY2U6IG5vbmU7XG59XG5cbjo6LXdlYmtpdC1maWxlLXVwbG9hZC1idXR0b24ge1xuICAtd2Via2l0LWFwcGVhcmFuY2U6IGJ1dHRvbjtcbiAgZm9udDogaW5oZXJpdDtcbn1cblxuZGV0YWlscyB7XG4gIGRpc3BsYXk6IGJsb2NrO1xufVxuXG5zdW1tYXJ5IHtcbiAgZGlzcGxheTogbGlzdC1pdGVtO1xufVxuXG50ZW1wbGF0ZSB7XG4gIGRpc3BsYXk6IG5vbmU7XG59XG5cbltoaWRkZW5dIHtcbiAgZGlzcGxheTogbm9uZTtcbn1cblxuKixcbio6YmVmb3JlLFxuKjphZnRlciB7XG4gIGJveC1zaXppbmc6IGJvcmRlci1ib3g7XG4gIHNjcm9sbC1iZWhhdmlvcjogc21vb3RoO1xufVxuXG5ib2R5IHtcbiAgYmFja2dyb3VuZDogI0U1RTVFNTtcbiAgY29sb3I6ICNGRkZGRkY7XG59XG5cbmEsXG5hOmxpbmssXG5hOnZpc2l0ZWQge1xuICB0ZXh0LWRlY29yYXRpb246IG5vbmU7XG4gIGNvbG9yOiAjRkZGRkZGO1xufVxuXG5vbCxcbnVsIHtcbiAgbGlzdC1zdHlsZTogbm9uZTtcbiAgcGFkZGluZzogMDtcbn1cblxuLmNvbnRhaW5lciB7XG4gIGJhY2tncm91bmQ6ICMwOTEzMUI7XG4gIG1heC13aWR0aDogMTkyMHB4O1xuICBtYXJnaW46IGF1dG87XG59XG5cbi5jb250ZW50IHtcbiAgbWFyZ2luOiAwIGF1dG87XG59XG5cbmJ1dHRvbiB7XG4gIGJvcmRlcjogbm9uZTtcbiAgY3Vyc29yOiBwb2ludGVyO1xufVxuXG4uaXRlbS1idXR0b24ge1xuICBiYWNrZ3JvdW5kOiAjMDA1OWFjO1xuICBib3JkZXItcmFkaXVzOiA4cHg7XG4gIGNvbG9yOiAjRkZGRkZGO1xuICBmb250LWZhbWlseTogXCJPcGVuIFNhbnNcIjtcbiAgZm9udC1zdHlsZTogbm9ybWFsO1xufVxuXG4ubG9nbyB7XG4gIGZvbnQ6IDQwMCAzNnB4LzQ1cHggXCJSaWdodGVvdXNcIiwgc2Fucy1zZXJpZjtcbiAgdGV4dC10cmFuc2Zvcm06IHVwcGVyY2FzZTtcbn1cblxuLnNlY3Rpb24tdGl0bGUge1xuICBmb250OiA0MDAgNDhweC82MHB4IFwiQXJzZW5hbFwiO1xuICBtYXgtd2lkdGg6IDU0MHB4O1xufVxuXG4uc2VjdGlvbi1kZXNjcmlwdGlvbiB7XG4gIGZvbnQ6IDQwMCAxN3B4LzE3MCUgXCJPcGVuIFNhbnNcIjtcbiAgbWF4LXdpZHRoOiA1NDBweDtcbiAgY29sb3I6ICM4OTkxQUY7XG4gIHBhZGRpbmctbGVmdDogMTBweDtcbn1cblxuQG1lZGlhIChtYXgtd2lkdGg6IDE4MDBweCkge1xuICAuY29udGVudCB7XG4gICAgcGFkZGluZzogMCAyMHB4O1xuICB9XG59XG5cbkBmb250LWZhY2Uge1xuICBmb250LWZhbWlseTogXCJBcnNlbmFsXCI7XG4gIHNyYzogdXJsKFwiLi4vZm9udC9BcnNlbmFsLVJlZ3VsYXIuZW90XCIpO1xuICBzcmM6IHVybChcIi4uL2ZvbnQvQXJzZW5hbC1SZWd1bGFyLmVvdD8jaWVmaXhcIikgZm9ybWF0KFwiZW1iZWRkZWQtb3BlbnR5cGVcIiksIHVybChcIi4uL2ZvbnQvQXJzZW5hbC1SZWd1bGFyLndvZmYyXCIpIGZvcm1hdChcIndvZmYyXCIpLCB1cmwoXCIuLi9mb250L0Fyc2VuYWwtUmVndWxhci53b2ZmXCIpIGZvcm1hdChcIndvZmZcIiksIHVybChcIi4uL2ZvbnQvQXJzZW5hbC1SZWd1bGFyLnR0ZlwiKSBmb3JtYXQoXCJ0cnVldHlwZVwiKTtcbiAgZm9udC13ZWlnaHQ6IG5vcm1hbDtcbiAgZm9udC1zdHlsZTogbm9ybWFsO1xufVxuXG5AZm9udC1mYWNlIHtcbiAgZm9udC1mYW1pbHk6IFwiQXJzZW5hbFwiO1xuICBzcmM6IHVybChcIi4uL2ZvbnQvQXJzZW5hbC1Cb2xkLmVvdFwiKTtcbiAgc3JjOiB1cmwoXCIuLi9mb250L0Fyc2VuYWwtQm9sZC5lb3Q/I2llZml4XCIpIGZvcm1hdChcImVtYmVkZGVkLW9wZW50eXBlXCIpLCB1cmwoXCIuLi9mb250L0Fyc2VuYWwtQm9sZC53b2ZmMlwiKSBmb3JtYXQoXCJ3b2ZmMlwiKSwgdXJsKFwiLi4vZm9udC9BcnNlbmFsLUJvbGQud29mZlwiKSBmb3JtYXQoXCJ3b2ZmXCIpLCB1cmwoXCIuLi9mb250L0Fyc2VuYWwtQm9sZC50dGZcIikgZm9ybWF0KFwidHJ1ZXR5cGVcIik7XG4gIGZvbnQtd2VpZ2h0OiA3MDA7XG4gIGZvbnQtc3R5bGU6IG5vcm1hbDtcbn1cblxuQGZvbnQtZmFjZSB7XG4gIGZvbnQtZmFtaWx5OiBcIkFyc2VuYWxcIjtcbiAgc3JjOiB1cmwoXCIuLi9mb250L0Fyc2VuYWwtaXRhbGljLmVvdFwiKTtcbiAgc3JjOiB1cmwoXCIuLi9mb250L0Fyc2VuYWwtaXRhbGljLmVvdD8jaWVmaXhcIikgZm9ybWF0KFwiZW1iZWRkZWQtb3BlbnR5cGVcIiksIHVybChcIi4uL2ZvbnQvQXJzZW5hbC1pdGFsaWMud29mZjJcIikgZm9ybWF0KFwid29mZjJcIiksIHVybChcIi4uL2ZvbnQvQXJzZW5hbC1pdGFsaWMud29mZlwiKSBmb3JtYXQoXCJ3b2ZmXCIpLCB1cmwoXCIuLi9mb250L0Fyc2VuYWwtaXRhbGljLnR0ZlwiKSBmb3JtYXQoXCJ0cnVldHlwZVwiKTtcbiAgZm9udC13ZWlnaHQ6IG5vcm1hbDtcbiAgZm9udC1zdHlsZTogaXRhbGljO1xufVxuXG5AZm9udC1mYWNlIHtcbiAgZm9udC1mYW1pbHk6IFwiT3BlbiBTYW5zXCI7XG4gIHNyYzogdXJsKFwiLi4vZm9udC9PcGVuU2Fucy1SZWd1bGFyLmVvdFwiKTtcbiAgc3JjOiB1cmwoXCIuLi9mb250L09wZW5TYW5zLVJlZ3VsYXIuZW90PyNpZWZpeFwiKSBmb3JtYXQoXCJlbWJlZGRlZC1vcGVudHlwZVwiKSwgdXJsKFwiLi4vZm9udC9PcGVuU2Fucy1SZWd1bGFyLndvZmYyXCIpIGZvcm1hdChcIndvZmYyXCIpLCB1cmwoXCIuLi9mb250L09wZW5TYW5zLVJlZ3VsYXIud29mZlwiKSBmb3JtYXQoXCJ3b2ZmXCIpLCB1cmwoXCIuLi9mb250L09wZW5TYW5zLVJlZ3VsYXIudHRmXCIpIGZvcm1hdChcInRydWV0eXBlXCIpO1xuICBmb250LXdlaWdodDogbm9ybWFsO1xuICBmb250LXN0eWxlOiBub3JtYWw7XG59XG5cbkBmb250LWZhY2Uge1xuICBmb250LWZhbWlseTogXCJPcGVuIFNhbnNcIjtcbiAgc3JjOiB1cmwoXCIuLi9mb250L09wZW5TYW5zLUJvbGQuZW90XCIpO1xuICBzcmM6IHVybChcIi4uL2ZvbnQvT3BlblNhbnMtQm9sZC5lb3Q/I2llZml4XCIpIGZvcm1hdChcImVtYmVkZGVkLW9wZW50eXBlXCIpLCB1cmwoXCIuLi9mb250L09wZW5TYW5zLUJvbGQud29mZjJcIikgZm9ybWF0KFwid29mZjJcIiksIHVybChcIi4uL2ZvbnQvT3BlblNhbnMtQm9sZC53b2ZmXCIpIGZvcm1hdChcIndvZmZcIiksIHVybChcIi4uL2ZvbnQvT3BlblNhbnMtQm9sZC50dGZcIikgZm9ybWF0KFwidHJ1ZXR5cGVcIik7XG4gIGZvbnQtd2VpZ2h0OiBib2xkO1xuICBmb250LXN0eWxlOiBub3JtYWw7XG59XG5cbkBmb250LWZhY2Uge1xuICBmb250LWZhbWlseTogXCJPcGVuIFNhbnNcIjtcbiAgc3JjOiB1cmwoXCIuLi9mb250L09wZW5TYW5zLVNlbWlCb2xkLmVvdFwiKTtcbiAgc3JjOiB1cmwoXCIuLi9mb250L09wZW5TYW5zLVNlbWlCb2xkLmVvdD8jaWVmaXhcIikgZm9ybWF0KFwiZW1iZWRkZWQtb3BlbnR5cGVcIiksIHVybChcIi4uL2ZvbnQvT3BlblNhbnMtU2VtaUJvbGQud29mZjJcIikgZm9ybWF0KFwid29mZjJcIiksIHVybChcIi4uL2ZvbnQvT3BlblNhbnMtU2VtaUJvbGQud29mZlwiKSBmb3JtYXQoXCJ3b2ZmXCIpLCB1cmwoXCIuLi9mb250L09wZW5TYW5zLVNlbWlCb2xkLnR0ZlwiKSBmb3JtYXQoXCJ0cnVldHlwZVwiKTtcbiAgZm9udC13ZWlnaHQ6IDYwMDtcbiAgZm9udC1zdHlsZTogbm9ybWFsO1xufVxuXG5AZm9udC1mYWNlIHtcbiAgZm9udC1mYW1pbHk6IFwiT3BlbiBTYW5zXCI7XG4gIHNyYzogdXJsKFwiLi4vZm9udC9PcGVuU2Fucy1JdGFsaWMuZW90XCIpO1xuICBzcmM6IHVybChcIi4uL2ZvbnQvT3BlblNhbnMtSXRhbGljLmVvdD8jaWVmaXhcIikgZm9ybWF0KFwiZW1iZWRkZWQtb3BlbnR5cGVcIiksIHVybChcIi4uL2ZvbnQvT3BlblNhbnMtSXRhbGljLndvZmYyXCIpIGZvcm1hdChcIndvZmYyXCIpLCB1cmwoXCIuLi9mb250L09wZW5TYW5zLUl0YWxpYy53b2ZmXCIpIGZvcm1hdChcIndvZmZcIiksIHVybChcIi4uL2ZvbnQvT3BlblNhbnMtSXRhbGljLnR0ZlwiKSBmb3JtYXQoXCJ0cnVldHlwZVwiKTtcbiAgZm9udC13ZWlnaHQ6IG5vcm1hbDtcbiAgZm9udC1zdHlsZTogaXRhbGljO1xufVxuXG5AZm9udC1mYWNlIHtcbiAgZm9udC1mYW1pbHk6IFwiUmlnaHRlb3VzXCI7XG4gIHNyYzogdXJsKFwiLi4vZm9udC9SaWdodGVvdXMtUmVndWxhci5lb3RcIik7XG4gIHNyYzogdXJsKFwiLi4vZm9udC9SaWdodGVvdXMtUmVndWxhci5lb3Q/I2llZml4XCIpIGZvcm1hdChcImVtYmVkZGVkLW9wZW50eXBlXCIpLCB1cmwoXCIuLi9mb250L1JpZ2h0ZW91cy1SZWd1bGFyLndvZmYyXCIpIGZvcm1hdChcIndvZmYyXCIpLCB1cmwoXCIuLi9mb250L1JpZ2h0ZW91cy1SZWd1bGFyLndvZmZcIikgZm9ybWF0KFwid29mZlwiKSwgdXJsKFwiLi4vZm9udC9SaWdodGVvdXMtUmVndWxhci50dGZcIikgZm9ybWF0KFwidHJ1ZXR5cGVcIik7XG4gIGZvbnQtd2VpZ2h0OiBub3JtYWw7XG4gIGZvbnQtc3R5bGU6IG5vcm1hbDtcbn1cblxuQGZvbnQtZmFjZSB7XG4gIGZvbnQtZmFtaWx5OiBcIkRNIFNlcmlmIERpc3BsYXlcIjtcbiAgc3JjOiB1cmwoXCIuLi9mb250L0RNU2VyaWZEaXNwbGF5LWl0YWxpYy5lb3RcIik7XG4gIHNyYzogdXJsKFwiLi4vZm9udC9ETVNlcmlmRGlzcGxheS1pdGFsaWMuZW90PyNpZWZpeFwiKSBmb3JtYXQoXCJlbWJlZGRlZC1vcGVudHlwZVwiKSwgdXJsKFwiLi4vZm9udC9ETVNlcmlmRGlzcGxheS1pdGFsaWMud29mZjJcIikgZm9ybWF0KFwid29mZjJcIiksIHVybChcIi4uL2ZvbnQvRE1TZXJpZkRpc3BsYXktaXRhbGljLndvZmZcIikgZm9ybWF0KFwid29mZlwiKSwgdXJsKFwiLi4vZm9udC9ETVNlcmlmRGlzcGxheS1pdGFsaWMudHRmXCIpIGZvcm1hdChcInRydWV0eXBlXCIpO1xuICBmb250LXdlaWdodDogbm9ybWFsO1xuICBmb250LXN0eWxlOiBpdGFsaWM7XG59XG5cbkBmb250LWZhY2Uge1xuICBmb250LWZhbWlseTogXCJETSBTZXJpZiBEaXNwbGF5XCI7XG4gIHNyYzogdXJsKFwiLi4vZm9udC9ETVNlcmlmRGlzcGxheS1SZWd1bGFyLmVvdFwiKTtcbiAgc3JjOiB1cmwoXCIuLi9mb250L0RNU2VyaWZEaXNwbGF5LVJlZ3VsYXIuZW90PyNpZWZpeFwiKSBmb3JtYXQoXCJlbWJlZGRlZC1vcGVudHlwZVwiKSwgdXJsKFwiLi4vZm9udC9ETVNlcmlmRGlzcGxheS1SZWd1bGFyLndvZmYyXCIpIGZvcm1hdChcIndvZmYyXCIpLCB1cmwoXCIuLi9mb250L0RNU2VyaWZEaXNwbGF5LVJlZ3VsYXIud29mZlwiKSBmb3JtYXQoXCJ3b2ZmXCIpLCB1cmwoXCIuLi9mb250L0RNU2VyaWZEaXNwbGF5LVJlZ3VsYXIudHRmXCIpIGZvcm1hdChcInRydWV0eXBlXCIpO1xuICBmb250LXdlaWdodDogbm9ybWFsO1xuICBmb250LXN0eWxlOiBub3JtYWw7XG59XG5cbkBmb250LWZhY2Uge1xuICBmb250LWZhbWlseTogXCJSb2JvdG9cIjtcbiAgc3JjOiB1cmwoXCIuLi9mb250L1JvYm90by1SZWd1bGFyLmVvdFwiKTtcbiAgc3JjOiB1cmwoXCIuLi9mb250L1JvYm90by1SZWd1bGFyLmVvdD8jaWVmaXhcIikgZm9ybWF0KFwiZW1iZWRkZWQtb3BlbnR5cGVcIiksIHVybChcIi4uL2ZvbnQvUm9ib3RvLVJlZ3VsYXIud29mZjJcIikgZm9ybWF0KFwid29mZjJcIiksIHVybChcIi4uL2ZvbnQvUm9ib3RvLVJlZ3VsYXIud29mZlwiKSBmb3JtYXQoXCJ3b2ZmXCIpLCB1cmwoXCIuLi9mb250L1JvYm90by1SZWd1bGFyLnR0ZlwiKSBmb3JtYXQoXCJ0cnVldHlwZVwiKTtcbiAgZm9udC13ZWlnaHQ6IG5vcm1hbDtcbiAgZm9udC1zdHlsZTogbm9ybWFsO1xufVxuXG5AZm9udC1mYWNlIHtcbiAgZm9udC1mYW1pbHk6IFwiUm9ib3RvIEJvbGRcIjtcbiAgc3JjOiB1cmwoXCIuLi9mb250L1JvYm90by1Cb2xkLmVvdFwiKTtcbiAgc3JjOiB1cmwoXCIuLi9mb250L1JvYm90by1Cb2xkLmVvdD8jaWVmaXhcIikgZm9ybWF0KFwiZW1iZWRkZWQtb3BlbnR5cGVcIiksIHVybChcIi4uL2ZvbnQvUm9ib3RvLUJvbGQud29mZjJcIikgZm9ybWF0KFwid29mZjJcIiksIHVybChcIi4uL2ZvbnQvUm9ib3RvLUJvbGQud29mZlwiKSBmb3JtYXQoXCJ3b2ZmXCIpLCB1cmwoXCIuLi9mb250L1JvYm90by1Cb2xkLnR0ZlwiKSBmb3JtYXQoXCJ0cnVldHlwZVwiKTtcbiAgZm9udC13ZWlnaHQ6IGJvbGQ7XG4gIGZvbnQtc3R5bGU6IG5vcm1hbDtcbn1cblxuLmZvb3RlciB7XG4gIGZvbnQ6IG5vcm1hbCA0MDAgMTdweC8yMTQlIFwiT3BlbiBTYW5zXCI7XG4gIG1heC13aWR0aDogMTQwMHB4O1xuICBib3JkZXItdG9wOiAxcHggc29saWQgcmdiYSgwLCA4OSwgMTcyLCAwLjQpO1xuICBwYWRkaW5nLXRvcDogNDBweDtcbiAgZGlzcGxheTogZmxleDtcbiAganVzdGlmeS1jb250ZW50OiBzcGFjZS1iZXR3ZWVuO1xuICBjb2xvcjogIzg5OTFBRjtcbiAgZ2FwOiA1cHg7XG59XG5cbi5oZWFkZXItdG9wIHtcbiAgZGlzcGxheTogZmxleDtcbiAganVzdGlmeS1jb250ZW50OiBzcGFjZS1iZXR3ZWVuO1xuICBoZWlnaHQ6IDY4cHg7XG4gIG1heC13aWR0aDogMTcxN3B4O1xuICBhbGlnbi1pdGVtczogY2VudGVyO1xufVxuXG4uaGVhZGVyLWNvbnRhY3RzIHtcbiAgZm9udDogbm9ybWFsIDQwMCAxOHB4LzI3cHggXCJSb2JvdG9cIjtcbiAgZGlzcGxheTogZmxleDtcbiAgdGV4dC1kZWNvcmF0aW9uLWxpbmU6IHVuZGVybGluZTtcbn1cblxuLmhlYWRlci1lbWFpbCB7XG4gIGRpc3BsYXk6IGZsZXg7XG4gIGFsaWduLWl0ZW1zOiBjZW50ZXI7XG59XG5cbi5oZWFkZXItZW1haWw6YmVmb3JlIHtcbiAgYmFja2dyb3VuZDogdXJsKFwiLi4vaW1nL3N2Zy9lbWFpbC5zdmdcIikgbm8tcmVwZWF0O1xuICBjb250ZW50OiBcIlwiO1xuICB3aWR0aDogMjRweDtcbiAgaGVpZ2h0OiAyNHB4O1xuICBtYXJnaW4tcmlnaHQ6IDEycHg7XG59XG5cbi5oZWFkZXItcGhvbmUge1xuICBkaXNwbGF5OiBmbGV4O1xuICBwYWRkaW5nLWxlZnQ6IDI0cHg7XG4gIGFsaWduLWl0ZW1zOiBjZW50ZXI7XG59XG5cbi5oZWFkZXItcGhvbmU6YmVmb3JlIHtcbiAgYmFja2dyb3VuZDogdXJsKFwiLi4vaW1nL3N2Zy9waG9uZS5zdmdcIikgbm8tcmVwZWF0O1xuICBjb250ZW50OiBcIlwiO1xuICB3aWR0aDogMjRweDtcbiAgaGVpZ2h0OiAyNHB4O1xuICBtYXJnaW4tcmlnaHQ6IDEycHg7XG59XG5cbi5zb2NpYWwge1xuICBkaXNwbGF5OiBmbGV4O1xuICBhbGlnbi1pdGVtczogY2VudGVyO1xuICB0ZXh0LWFsaWduOiBjZW50ZXI7XG4gIHdpZHRoOiAyNjdweDtcbiAganVzdGlmeS1jb250ZW50OiBzcGFjZS1iZXR3ZWVuO1xufVxuXG4uc29jaWFsX19saW5rID4gc3ZnIHtcbiAgcGFkZGluZzogMCAxMHB4O1xuICB3aWR0aDogMTAwJTtcbiAgZmlsbDogI2ExYTFhMTtcbiAgdHJhbnNpdGlvbjogYWxsIDAuM3MgZWFzZTtcbn1cblxuLnNvY2lhbF9fbGluayA+IHN2Zzpob3ZlciB7XG4gIGZpbGw6ICNGRkZGRkY7XG59XG5cbi5zb2NpYWxfX2xpbmsge1xuICAtd2Via2l0LXRhcC1oaWdobGlnaHQtY29sb3I6IHRyYW5zcGFyZW50O1xufVxuXG4uaGVhZGVyLWNvbnRlbnQge1xuICBiYWNrZ3JvdW5kOiB1cmwoXCIuLi9pbWcvaGVhZGVyLWJnLmpwZ1wiKSBuby1yZXBlYXQgY2VudGVyIGNlbnRlci9jb3ZlcjtcbiAgcG9zaXRpb246IHJlbGF0aXZlO1xufVxuXG4uaGVhZGVyLW5hdmlnYXRpb24ge1xuICBkaXNwbGF5OiBmbGV4O1xuICBqdXN0aWZ5LWNvbnRlbnQ6IHNwYWNlLWJldHdlZW47XG4gIGhlaWdodDogMTAwcHg7XG4gIGFsaWduLWl0ZW1zOiBjZW50ZXI7XG4gIG1heC13aWR0aDogMTcxN3B4O1xuICBtYXJnaW46IDAgYXV0byAxMjNweCBhdXRvO1xufVxuXG4uaGVhZGVyLW5hdmlnYXRpb25fX2VsZW1lbnQge1xuICBkaXNwbGF5OiBmbGV4O1xuICBhbGlnbi1pdGVtczogY2VudGVyO1xuICBqdXN0aWZ5LWNvbnRlbnQ6IHNwYWNlLWJldHdlZW47XG4gIGNvbHVtbi1nYXA6IDUwcHg7XG59XG5cbi5oZWFkZXItbmF2aWdhdGlvbl9fbGluayB7XG4gIGZvbnQ6IGJvbGQgMTdweCBcIk9wZW4gU2Fuc1wiLCBzYW5zLXNlcmlmO1xuICB0ZXh0LXRyYW5zZm9ybTogdXBwZXJjYXNlO1xuICBoZWlnaHQ6IDI0cHg7XG4gIHBhZGRpbmc6IDAgNXB4O1xuICBib3JkZXItcmFkaXVzOiA1cHg7XG4gIHRyYW5zaXRpb246IDAuM3MgZWFzZTtcbn1cblxuLmhlYWRlci1uYXZpZ2F0aW9uX19saW5rLmFjdGl2ZSB7XG4gIGRpc3BsYXk6IGJsb2NrO1xufVxuXG4uaGVhZGVyLW5hdmlnYXRpb25fX2xpbms6aG92ZXIge1xuICBiYWNrZ3JvdW5kOiAjMDA1OUFDO1xufVxuXG4uaGVhZGVyLW5hdmlnYXRpb25fX2xpbms6Zm9jdXMge1xuICBiYWNrZ3JvdW5kOiAjMTk4MmU0O1xufVxuXG4uaGVhZGVyLW5hdmlnYXRpb25fX2ljb24ge1xuICBjdXJzb3I6IHBvaW50ZXI7XG4gIGRpc3BsYXk6IG5vbmU7XG59XG5cbi5oZWFkZXItbmF2aWdhdGlvbl9faWNvbi1jbG9zZSB7XG4gIGRpc3BsYXk6IG5vbmU7XG59XG5cbi5oZWFkZXItbmF2aWdhdGlvbl9faWNvbiBwaWN0dXJlIHtcbiAgZGlzcGxheTogZmxleDtcbn1cblxuLmhlYWRlci1hcHAge1xuICBtYXJnaW4tYm90dG9tOiAxMzBweDtcbiAgdGV4dC1hbGlnbjogY2VudGVyO1xuICBwYWRkaW5nLWJvdHRvbTogNzZweDtcbiAgbWFyZ2luOiAwIGF1dG87XG59XG5cbi5oZWFkZXItYXBwX19zdWJ0aXRsZSB7XG4gIGZvbnQ6IDM2cHgvNDVweCBcIkFyc2VuYWxcIjtcbiAgdGV4dC10cmFuc2Zvcm06IHVwcGVyY2FzZTtcbiAgbGV0dGVyLXNwYWNpbmc6IDAuMmVtO1xuICBtYXJnaW46IDAgMCAtMTVweCAwO1xufVxuXG4uaGVhZGVyLWFwcF9fdGl0bGUge1xuICBmb250OiAxNDRweCBcIkFyc2VuYWxcIjtcbiAgdGV4dC10cmFuc2Zvcm06IHVwcGVyY2FzZTtcbiAgbWFyZ2luOiAwO1xuICBtYXJnaW4tYm90dG9tOiAxOHB4O1xufVxuXG4uaGVhZGVyLXNlYXJjaC1mb3JtIHtcbiAgZGlzcGxheTogZmxleDtcbiAganVzdGlmeS1jb250ZW50OiBjZW50ZXI7XG59XG5cbi5oZWFkZXItc2VhcmNoX190aXRsZSB7XG4gIGZvbnQ6IGl0YWxpYyAxOHB4IFwiT3BlbiBTYW5zXCI7XG4gIGxldHRlci1zcGFjaW5nOiAwLjFlbTtcbn1cblxuLmhlYWRlci1zZWFyY2hfX2lucHV0IHtcbiAgZm9udDogMTlweCBcIk9wZW4gU2Fuc1wiO1xuICB3aWR0aDogNDc2cHg7XG4gIGhlaWdodDogNzZweDtcbiAgYm9yZGVyOiBub25lO1xuICBib3JkZXItcmFkaXVzOiAxMHB4IDAgMCAxMHB4O1xuICBwYWRkaW5nLWxlZnQ6IDM0cHg7XG4gIG91dGxpbmU6IG5vbmU7XG4gIGxlZnQ6IDA7XG59XG5cbi5oZWFkZXItc2VhcmNoX19idXR0b24ge1xuICBiYWNrZ3JvdW5kOiAjMEUwRTBFO1xuICBtaW4td2lkdGg6IDk3cHg7XG4gIGhlaWdodDogNzZweDtcbiAgYm9yZGVyLXJhZGl1czogMCAxMHB4IDEwcHggMDtcbn1cblxuLmhlYWRlci1zZWFyY2hfX2J1dHRvbjphZnRlciB7XG4gIGNvbnRlbnQ6IHVybCguLi9pbWcvc3ZnL3NlYXJjaC5zdmcpO1xufVxuXG4uaGVhZGVyLWZlYXR1cmVzIHtcbiAgbWF4LXdpZHRoOiAxMzQ4cHg7XG4gIG1hcmdpbjogMCBhdXRvIDI3NXB4O1xuICBkaXNwbGF5OiBncmlkO1xuICBncmlkLXRlbXBsYXRlLWNvbHVtbnM6IHJlcGVhdCg0LCAyNTBweCk7XG4gIGp1c3RpZnktY29udGVudDogc3BhY2UtYmV0d2Vlbjtcbn1cblxuLmhlYWRlci1mZWF0dXJlX19pbWctd3JhcHBlciB7XG4gIG1pbi1oZWlnaHQ6IDcwcHg7XG4gIG92ZXJmbG93OiBoaWRkZW47XG4gIHBvc2l0aW9uOiByZWxhdGl2ZTtcbn1cblxuLmhlYWRlci1mZWF0dXJlX19pbWcge1xuICBwb3NpdGlvbjogYWJzb2x1dGU7XG4gIGJvdHRvbTogMDtcbn1cblxuLmhlYWRlci1mZWF0dXJlX190aXRsZSB7XG4gIGZvbnQ6IG5vcm1hbCA3MDAgMjJweC8xNzAlIFwiQXJzZW5hbFwiO1xuICBtYXJnaW4tdG9wOiAyMHB4O1xuICBtYXJnaW4tYm90dG9tOiA0cHg7XG59XG5cbi5oZWFkZXItZmVhdHVyZV9fZGVzY3JpcHRpb24ge1xuICBmb250OiBub3JtYWwgMTZweC8xNzAlIFwiT3BlbiBTYW5zXCI7XG59XG5cbi5oZWFkZXItYWJvdXQge1xuICBwYWRkaW5nLWJvdHRvbTogMTkwcHg7XG4gIG1heC13aWR0aDogMTIzMHB4O1xuICBkaXNwbGF5OiBmbGV4O1xuICBqdXN0aWZ5LWNvbnRlbnQ6IHNwYWNlLWJldHdlZW47XG59XG5cbkBtZWRpYSAobWF4LXdpZHRoOiA5OTJweCkge1xuICAuaGVhZGVyLXRvcCB7XG4gICAgZmxleC1kaXJlY3Rpb246IGNvbHVtbjtcbiAgICBqdXN0aWZ5LWNvbnRlbnQ6IHNwYWNlLWV2ZW5seTtcbiAgICBoZWlnaHQ6IDg4cHg7XG4gIH1cblxuICAuaGVhZGVyLW5hdmlnYXRpb24ge1xuICAgIG1heC13aWR0aDogbm9uZTtcbiAgfVxuXG4gIC5oZWFkZXItbmF2aWdhdGlvbl9fZWxlbWVudCB7XG4gICAgY29sdW1uLWdhcDogMzBweDtcbiAgfVxuXG4gIC5oZWFkZXItZmVhdHVyZXMge1xuICAgIGdyaWQtdGVtcGxhdGUtY29sdW1uczogcmVwZWF0KDIsIDI1MHB4KTtcbiAgICBqdXN0aWZ5LWNvbnRlbnQ6IHNwYWNlLWV2ZW5seTtcbiAgfVxuXG4gIC5oZWFkZXItYWJvdXQge1xuICAgIGZsZXgtZGlyZWN0aW9uOiBjb2x1bW47XG4gICAgYWxpZ24taXRlbXM6IGNlbnRlcjtcbiAgICB0ZXh0LWFsaWduOiBjZW50ZXI7XG4gIH1cblxuICAuc2VjdGlvbi1kZXNjcmlwdGlvbiB7XG4gICAgcGFkZGluZy1sZWZ0OiAwO1xuICB9XG5cbiAgLnNlY3Rpb24tdGl0bGUge1xuICAgIGZvbnQtc2l6ZTogMzJweDtcbiAgfVxufVxuXG5AbWVkaWEgKG1heC13aWR0aDogNzY4cHgpIHtcbiAgLmhlYWRlci1jb250ZW50IHtcbiAgICBwYWRkaW5nOiAwO1xuICB9XG5cbiAgLmhlYWRlci1uYXZpZ2F0aW9uIHtcbiAgICBwb3NpdGlvbjogcmVsYXRpdmU7XG4gIH1cblxuICAuaGVhZGVyLW5hdmlnYXRpb25fX2VsZW1lbnQge1xuICAgIHBvc2l0aW9uOiBhYnNvbHV0ZTtcbiAgICBiYWNrZ3JvdW5kOiAjMDkxMzFCO1xuICAgIGZsZXgtZGlyZWN0aW9uOiBjb2x1bW47XG4gICAgd2lkdGg6IDEwMCU7XG4gICAgdG9wOiAtMXB4O1xuICAgIHBhZGRpbmc6IDUwcHggMCA1MHB4IDA7XG4gICAgcm93LWdhcDogMzBweDtcbiAgICB0cmFuc2Zvcm06IHRyYW5zbGF0ZVgoLTEwMCUpO1xuICAgIHRyYW5zaXRpb246IGFsbCAwLjZzIGVhc2UtaW4tb3V0O1xuICB9XG5cbiAgLmhlYWRlci1uYXZpZ2F0aW9uX19lbGVtZW50LmFjdGl2ZSB7XG4gICAgdHJhbnNmb3JtOiB0cmFuc2xhdGVYKDApO1xuICAgIHRyYW5zaXRpb246IGFsbCAwLjZzIGVhc2UtaW4tb3V0O1xuICB9XG5cbiAgLmhlYWRlci1uYXZpZ2F0aW9uX19pY29uIHtcbiAgICBkaXNwbGF5OiBibG9jaztcbiAgICAtd2Via2l0LXRhcC1oaWdobGlnaHQtY29sb3I6IHJnYmEoMjU1LCAyNTUsIDI1NSwgMCk7XG4gICAgLXdlYmtpdC10YXAtaGlnaGxpZ2h0LWNvbG9yOiB0cmFuc3BhcmVudDtcbiAgfVxuXG4gIC5oZWFkZXItbmF2aWdhdGlvbl9faWNvbi1jbG9zZSB7XG4gICAgcG9zaXRpb246IGFic29sdXRlO1xuICAgIHJpZ2h0OiAyMHB4O1xuICAgIGRpc3BsYXk6IGJsb2NrO1xuICB9XG5cbiAgLmhlYWRlci1uYXZpZ2F0aW9uX19sb2dvLFxuICAuaGVhZGVyLW5hdmlnYXRpb25fX2ljb24ge1xuICAgIHBhZGRpbmc6IDAgMjBweDtcbiAgfVxuXG4gIC5oZWFkZXItYXBwX190aXRsZSB7XG4gICAgZm9udC1zaXplOiA2OHB4O1xuICAgIGxpbmUtaGVpZ2h0OiA3NXB4O1xuICAgIG1hcmdpbi1ib3R0b206IDMwcHg7XG4gIH1cblxuICAuaGVhZGVyLWFwcF9fc3VidGl0bGUge1xuICAgIGZvbnQtc2l6ZTogMTdweDtcbiAgfVxuXG4gIC5oZWFkZXItc2VhcmNoX19pbnB1dCB7XG4gICAgZm9udC1zaXplOiAxN3B4O1xuICAgIHBhZGRpbmctbGVmdDogMDtcbiAgICBoZWlnaHQ6IDYwcHg7XG4gICAgdGV4dC1hbGlnbjogY2VudGVyO1xuICAgIGJvcmRlci1yYWRpdXM6IDhweCAwIDAgOHB4O1xuICB9XG5cbiAgLmhlYWRlci1zZWFyY2hfX3RpdGxlIHtcbiAgICBmb250LXNpemU6IDE3cHg7XG4gIH1cblxuICAuaGVhZGVyLXNlYXJjaF9fYnV0dG9uIHtcbiAgICBoZWlnaHQ6IDYwcHg7XG4gICAgbWluLXdpZHRoOiA2N3B4O1xuICAgIGJvcmRlci1yYWRpdXM6IDAgOHB4IDhweCAwO1xuICB9XG59XG5cbkBtZWRpYSAobWF4LXdpZHRoOiA2NDBweCkge1xuICAuaGVhZGVyLWNvbnRhY3RzIHtcbiAgICBkaXNwbGF5OiBmbGV4O1xuICAgIGZsZXgtZGlyZWN0aW9uOiBjb2x1bW47XG4gIH1cblxuICAuaGVhZGVyLXRvcCB7XG4gICAgaGVpZ2h0OiAxMDhweDtcbiAgICBqdXN0aWZ5LWNvbnRlbnQ6IGNlbnRlcjtcbiAgfVxuXG4gIC5oZWFkZXItcGhvbmUge1xuICAgIG1hcmdpbi1ib3R0b206IDE1cHg7XG4gICAgcGFkZGluZy1sZWZ0OiAwO1xuICB9XG5cbiAgLmhlYWRlci1mZWF0dXJlcyB7XG4gICAgZ3JpZC10ZW1wbGF0ZS1jb2x1bW5zOiByZXBlYXQoMSwgMjUwcHgpO1xuICAgIGp1c3RpZnktY29udGVudDogc3BhY2UtZXZlbmx5O1xuICB9XG5cbiAgLmhlYWRlci1mZWF0dXJlIHtcbiAgICB0ZXh0LWFsaWduOiBjZW50ZXI7XG4gICAgbWFyZ2luLWJvdHRvbTogNTBweDtcbiAgfVxuXG4gIC5oZWFkZXItZmVhdHVyZV9fZGVzY3JpcHRpb24ge1xuICAgIG1hcmdpbi10b3A6IDA7XG4gIH1cblxuICAuaGVhZGVyLWZlYXR1cmVfX2ltZyB7XG4gICAgcG9zaXRpb246IGluaXRpYWw7XG4gIH1cblxuICAuaGVhZGVyLWZlYXR1cmVfX3RpdGxlIHtcbiAgICBtYXJnaW4tdG9wOiAwO1xuICB9XG59XG5cbi5oaWdobGlnaHRzIHtcbiAgbWF4LXdpZHRoOiAxMjYwcHg7XG4gIG1hcmdpbi1ib3R0b206IDE2MHB4O1xufVxuXG4uaGlnaGxpZ2h0cy1jb250ZW50IHtcbiAgZGlzcGxheTogZ3JpZDtcbiAgZ3JpZC10ZW1wbGF0ZS1jb2x1bW5zOiByZXBlYXQoMiwgMWZyKTtcbiAgZ2FwOiAxNjBweCA3MHB4O1xufVxuXG5AbWVkaWEgKG1heC13aWR0aDogMTQ0MHB4KSB7XG4gIC5oaWdobGlnaHRzLWNvbnRlbnQtbWVkaWEtaW1nIGltZyB7XG4gICAgbWF4LXdpZHRoOiA0NTBweDtcbiAgfVxuXG4gIC5oaWdobGlnaHRzLWNvbnRlbnQge1xuICAgIGNvbHVtbi1nYXA6IDQwcHg7XG4gIH1cbn1cblxuQG1lZGlhIChtYXgtd2lkdGg6IDEwNDBweCkge1xuICAuaGlnaGxpZ2h0cy1jb250ZW50IHtcbiAgICBncmlkLXRlbXBsYXRlLWNvbHVtbnM6IDFmcjtcbiAgICBqdXN0aWZ5LWl0ZW1zOiBjZW50ZXI7XG4gICAgcm93LWdhcDogMDtcbiAgfVxuXG4gIC5oaWdobGlnaHRzLWNvbnRlbnQtbWVkaWEtaW1nX3RvcCB7XG4gICAgZ3JpZC1yb3ctc3RhcnQ6IDM7XG4gICAgbWFyZ2luLXRvcDogMTUwcHg7XG4gIH1cbn1cblxuQG1lZGlhIChtYXgtd2lkdGg6IDY0MHB4KSB7XG4gIC5oaWdobGlnaHRzLWNvbnRlbnQtbWVkaWEtaW1nIGltZyB7XG4gICAgbWF4LXdpZHRoOiAzMDBweDtcbiAgfVxufVxuXG4uaG90ZWxzIHtcbiAgbWF4LXdpZHRoOiAxNDAwcHg7XG4gIG1hcmdpbi1ib3R0b206IDIyOXB4O1xufVxuXG4uaG90ZWxzLWNvdW50cmllcyB7XG4gIGRpc3BsYXk6IGZsZXg7XG4gIHRleHQtYWxpZ246IGNlbnRlcjtcbiAganVzdGlmeS1jb250ZW50OiBjZW50ZXI7XG4gIGNvbHVtbi1nYXA6IDQwcHg7XG4gIG1hcmdpbi1ib3R0b206IDYwcHg7XG59XG5cbi5ob3RlbHMtY291bnRyaWVzLW5hbWUge1xuICBmb250OiA3MDAgMTRweC8xOXB4IFwiT3BlbiBTYW5zXCI7XG4gIHBhZGRpbmc6IDVweCAxM3B4O1xuICBjdXJzb3I6IHBvaW50ZXI7XG59XG5cbi5ob3RlbHMtY291bnRyaWVzLW5hbWUuYWN0aXZlIHtcbiAgY29sb3I6ICMwMDAwMDA7XG4gIGJhY2tncm91bmQ6ICNGMkM5NEM7XG4gIGJvcmRlci1yYWRpdXM6IDhweDtcbn1cblxuLmhvdGVscy1pdGVtcy1jb250ZW50IHtcbiAgZGlzcGxheTogbm9uZTtcbn1cblxuLmhvdGVscy1pdGVtcy1jb250ZW50LmFjdGl2ZSB7XG4gIGRpc3BsYXk6IGJsb2NrO1xufVxuXG4ueWVsbG93LXN0YXIge1xuICBmaWxsOiAjRkZDMjJCO1xufVxuXG4uaG90ZWxzLWl0ZW1zIHtcbiAgZGlzcGxheTogZ3JpZDtcbiAgZ3JpZC10ZW1wbGF0ZS1jb2x1bW5zOiByZXBlYXQoNCwgMWZyKTtcbiAgY29sdW1uLWdhcDogNDBweDtcbiAgbWFyZ2luLWJvdHRvbTogODBweDtcbn1cblxuLmhvdGVscy1pdGVtIHtcbiAgYmFja2dyb3VuZDogIzAwMDAwMDtcbiAgYm9yZGVyLXJhZGl1czogOHB4O1xufVxuXG4uaG90ZWxzLWl0ZW1fX2ltZy13cmFwcGVyIHtcbiAgcG9zaXRpb246IHJlbGF0aXZlO1xuICBtYXJnaW4tYm90dG9tOiAzOHB4O1xufVxuXG4uaG90ZWxzLWl0ZW1fX2ltZyB7XG4gIGJvcmRlci1yYWRpdXM6IDhweCA4cHggMCAwO1xuICB3aWR0aDogMTAwJTtcbiAgaGVpZ2h0OiAyNTZweDtcbiAgb2JqZWN0LWZpdDogY292ZXI7XG59XG5cbi5ob3RlbHMtaXRlbV9fdGl0bGUge1xuICBmb250OiBub3JtYWwgNzAwIDI0cHgvMjVweCBcIkFyc2VuYWxcIjtcbiAgbGV0dGVyLXNwYWNpbmc6IDAuMDFlbTtcbiAgdGV4dC1hbGlnbjogY2VudGVyO1xuICBtYXJnaW46IDA7XG4gIG1hcmdpbi1ib3R0b206IDE4cHg7XG59XG5cbi5ob3RlbHMtaXRlbV9faGVhcnQge1xuICBwb3NpdGlvbjogYWJzb2x1dGU7XG4gIHRvcDogMjRweDtcbiAgcmlnaHQ6IDI0cHg7XG4gIGN1cnNvcjogcG9pbnRlcjtcbn1cblxuLmhvdGVscy1pdGVtX19oZWFydC1wYXRoLmZhdm9yaXRlZCB7XG4gIGZpbGw6ICNGRkMyMkI7XG59XG5cbi5ob3RlbHMtaXRlbV9fcmF0aW5nIHtcbiAgcGFkZGluZy1sZWZ0OiAyNHB4O1xuICBtYXJnaW4tYm90dG9tOiAzM3B4O1xufVxuXG4uaG90ZWxzLWl0ZW1fX3N0YXI6bm90KDpsYXN0LWNoaWxkKSB7XG4gIG1hcmdpbi1yaWdodDogOHB4O1xufVxuXG4uaG90ZWxzLWl0ZW1fX3ByaWNlLXdyYXBwZXIge1xuICBwYWRkaW5nLXJpZ2h0OiAyMnB4O1xuICB0ZXh0LWFsaWduOiByaWdodDtcbiAgZm9udC1mYW1pbHk6IFwiRE0gU2VyaWYgRGlzcGxheVwiO1xuICBmb250LXdlaWdodDogNDAwO1xuICBsZXR0ZXItc3BhY2luZzogMC4wMmVtO1xuICBsaW5lLWhlaWdodDogMjVweDtcbiAgbWFyZ2luLWJvdHRvbTogMjFweDtcbn1cblxuLmhvdGVscy1pdGVtX19wcmljZV9vbGQge1xuICBmb250LXN0eWxlOiBpdGFsaWM7XG4gIGZvbnQtc2l6ZTogMjJweDtcbiAgdGV4dC1kZWNvcmF0aW9uLWxpbmU6IGxpbmUtdGhyb3VnaDtcbiAgY29sb3I6ICNCMUI0Qjk7XG4gIHBhZGRpbmctcmlnaHQ6IDNweDtcbn1cblxuLmhvdGVscy1pdGVtX19wcmljZV9iaWcge1xuICBmb250LXNpemU6IDQ4cHg7XG4gIHRleHQtYWxpZ246IHJpZ2h0O1xufVxuXG4uaG90ZWxzLWl0ZW1fX2Rlc2NyaXB0aW9uIHtcbiAgZm9udDogbm9ybWFsIDQwMCAxN3B4LzE3MCUgXCJPcGVuIFNhbnNcIjtcbiAgcGFkZGluZzogMCAyNHB4O1xuICBtYXJnaW46IDA7XG4gIGNvbG9yOiAjODk5MUFGO1xufVxuXG4uaG90ZWxzLWl0ZW1fX3NhdmluZyB7XG4gIGZvbnQ6IG5vcm1hbCA0MDAgMTRweC8yNXB4IFwiT3BlbiBTYW5zXCI7XG4gIHRleHQtYWxpZ246IGNlbnRlcjtcbiAgbGV0dGVyLXNwYWNpbmc6IDAuMDJlbTtcbiAgY29sb3I6ICMxMTExMTE7XG4gIGRpc3BsYXk6IGJsb2NrO1xuICBtYXJnaW4tYm90dG9tOiAyMHB4O1xufVxuXG4uaG90ZWxzLWl0ZW1fX2J1dHRvbiB7XG4gIHdpZHRoOiAyOTBweDtcbiAgaGVpZ2h0OiA5MnB4O1xuICB0ZXh0LWFsaWduOiBjZW50ZXI7XG4gIGRpc3BsYXk6IGJsb2NrO1xuICBtYXJnaW46IDAgYXV0bztcbiAgZm9udC13ZWlnaHQ6IDcwMDtcbiAgZm9udC1zaXplOiAxN3B4O1xuICBsZXR0ZXItc3BhY2luZzogMC4yZW07XG4gIHRleHQtdHJhbnNmb3JtOiB1cHBlcmNhc2U7XG4gIG1hcmdpbi1ib3R0b206IDI0cHg7XG59XG5cbi5ob3RlbHMtYnV0dG9uIHtcbiAgZm9udDogbm9ybWFsIDkwMCAxNXB4LzE4cHggXCJSb2JvdG9cIjtcbiAgYmFja2dyb3VuZDogbm9uZTtcbiAgd2lkdGg6IDE1MXB4O1xuICBoZWlnaHQ6IDQ1cHg7XG4gIHRleHQtdHJhbnNmb3JtOiB1cHBlcmNhc2U7XG4gIGxldHRlci1zcGFjaW5nOiAwLjFlbTtcbiAgbWFyZ2luOiAwIGF1dG87XG4gIGRpc3BsYXk6IGJsb2NrO1xuICBib3JkZXI6IDJweCBzb2xpZCAjRkZGRkZGO1xuICBjb2xvcjogI0ZGRkZGRjtcbn1cblxuQG1lZGlhIChtYXgtd2lkdGg6IDE0NDBweCkge1xuICAuaG90ZWxzLWl0ZW1zIHtcbiAgICBncmlkLXRlbXBsYXRlLWNvbHVtbnM6IHJlcGVhdCgyLCAxZnIpO1xuICAgIGp1c3RpZnktaXRlbXM6IGNlbnRlcjtcbiAgICByb3ctZ2FwOiA1MHB4O1xuICAgIGNvbHVtbi1nYXA6IDEwcHg7XG4gIH1cblxuICAuaG90ZWxzLWl0ZW1fX2ltZyB7XG4gICAgbWF4LXdpZHRoOiBub25lO1xuICAgIHdpZHRoOiAxMDAlO1xuICAgIG9iamVjdC1maXQ6IGNvdmVyO1xuICB9XG5cbiAgLmhvdGVscy1pdGVtIHtcbiAgICBtYXgtd2lkdGg6IDQwMHB4O1xuICB9XG59XG5cbkBtZWRpYSAobWF4LXdpZHRoOiA3NjhweCkge1xuICAuaG90ZWxzLWNvdW50cmllcyB7XG4gICAgZGlzcGxheTogZ3JpZDtcbiAgICBncmlkLXRlbXBsYXRlLWNvbHVtbnM6IDFmciAxZnIgMWZyO1xuICAgIGNvbHVtbi1nYXA6IDIwcHg7XG4gIH1cblxuICAuaG90ZWxzLWNvdW50cmllcy1uYW1lIHtcbiAgICBqdXN0aWZ5LXNlbGY6IGNlbnRlcjtcbiAgfVxuXG4gIC5ob3RlbHMtaXRlbXMge1xuICAgIGdyaWQtdGVtcGxhdGUtY29sdW1uczogcmVwZWF0KDEsIDFmcik7XG4gIH1cbn1cblxuOnJvb3Qge1xuICAtLXN3aXBlci1wYWdpbmF0aW9uLWNvbG9yOiAjRjJDOTRDO1xuICAtLXN3aXBlci1wYWdpbmF0aW9uLWJ1bGxldC1pbmFjdGl2ZS1jb2xvcjogI0ZGRjtcbiAgLS1zd2lwZXItcGFnaW5hdGlvbi1idWxsZXQtaW5hY3RpdmUtb3BhY2l0eTogMTtcbiAgLS1zd2lwZXItcGFnaW5hdGlvbi1idWxsZXQtaG9yaXpvbnRhbC1nYXA6IDE1cHg7XG59XG5cbi5zd2lwZXItcGFnaW5hdGlvbiB7XG4gIHBvc2l0aW9uOiBhYnNvbHV0ZTtcbiAgdGV4dC1hbGlnbjogY2VudGVyO1xuICB0cmFuc2l0aW9uOiAzMDBtcyBvcGFjaXR5O1xuICB0cmFuc2Zvcm06IHRyYW5zbGF0ZTNkKDAsIDAsIDApO1xuICB6LWluZGV4OiAxMDtcbn1cblxuLnN3aXBlci1wYWdpbmF0aW9uLnN3aXBlci1wYWdpbmF0aW9uLWhpZGRlbiB7XG4gIG9wYWNpdHk6IDA7XG59XG5cbi5zd2lwZXItcGFnaW5hdGlvbi1kaXNhYmxlZCA+IC5zd2lwZXItcGFnaW5hdGlvbixcbi5zd2lwZXItcGFnaW5hdGlvbi5zd2lwZXItcGFnaW5hdGlvbi1kaXNhYmxlZCB7XG4gIGRpc3BsYXk6IG5vbmUgIWltcG9ydGFudDtcbn1cblxuLnN3aXBlci1wYWdpbmF0aW9uLWZyYWN0aW9uLFxuLnN3aXBlci1wYWdpbmF0aW9uLWN1c3RvbSxcbi5zd2lwZXItaG9yaXpvbnRhbCA+IC5zd2lwZXItcGFnaW5hdGlvbi1idWxsZXRzLFxuLnN3aXBlci1wYWdpbmF0aW9uLWJ1bGxldHMuc3dpcGVyLXBhZ2luYXRpb24taG9yaXpvbnRhbCB7XG4gIGJvdHRvbTogMTBweDtcbiAgbGVmdDogMDtcbiAgd2lkdGg6IDEwMCU7XG59XG5cbi5zd2lwZXItcGFnaW5hdGlvbi1idWxsZXRzLWR5bmFtaWMge1xuICBvdmVyZmxvdzogaGlkZGVuO1xuICBmb250LXNpemU6IDA7XG59XG5cbi5zd2lwZXItcGFnaW5hdGlvbi1idWxsZXRzLWR5bmFtaWMgLnN3aXBlci1wYWdpbmF0aW9uLWJ1bGxldCB7XG4gIHRyYW5zZm9ybTogc2NhbGUoMC4zMyk7XG4gIHBvc2l0aW9uOiByZWxhdGl2ZTtcbn1cblxuLnN3aXBlci1wYWdpbmF0aW9uLWJ1bGxldHMtZHluYW1pYyAuc3dpcGVyLXBhZ2luYXRpb24tYnVsbGV0LWFjdGl2ZSB7XG4gIHRyYW5zZm9ybTogc2NhbGUoMSk7XG59XG5cbi5zd2lwZXItcGFnaW5hdGlvbi1idWxsZXRzLWR5bmFtaWMgLnN3aXBlci1wYWdpbmF0aW9uLWJ1bGxldC1hY3RpdmUtbWFpbiB7XG4gIHRyYW5zZm9ybTogc2NhbGUoMSk7XG59XG5cbi5zd2lwZXItcGFnaW5hdGlvbi1idWxsZXRzLWR5bmFtaWMgLnN3aXBlci1wYWdpbmF0aW9uLWJ1bGxldC1hY3RpdmUtcHJldiB7XG4gIHRyYW5zZm9ybTogc2NhbGUoMC42Nik7XG59XG5cbi5zd2lwZXItcGFnaW5hdGlvbi1idWxsZXRzLWR5bmFtaWMgLnN3aXBlci1wYWdpbmF0aW9uLWJ1bGxldC1hY3RpdmUtcHJldi1wcmV2IHtcbiAgdHJhbnNmb3JtOiBzY2FsZSgwLjMzKTtcbn1cblxuLnN3aXBlci1wYWdpbmF0aW9uLWJ1bGxldHMtZHluYW1pYyAuc3dpcGVyLXBhZ2luYXRpb24tYnVsbGV0LWFjdGl2ZS1uZXh0IHtcbiAgdHJhbnNmb3JtOiBzY2FsZSgwLjY2KTtcbn1cblxuLnN3aXBlci1wYWdpbmF0aW9uLWJ1bGxldHMtZHluYW1pYyAuc3dpcGVyLXBhZ2luYXRpb24tYnVsbGV0LWFjdGl2ZS1uZXh0LW5leHQge1xuICB0cmFuc2Zvcm06IHNjYWxlKDAuMzMpO1xufVxuXG4uc3dpcGVyLXBhZ2luYXRpb24tYnVsbGV0IHtcbiAgd2lkdGg6IHZhcigtLXN3aXBlci1wYWdpbmF0aW9uLWJ1bGxldC13aWR0aCwgdmFyKC0tc3dpcGVyLXBhZ2luYXRpb24tYnVsbGV0LXNpemUsIDhweCkpO1xuICBoZWlnaHQ6IHZhcigtLXN3aXBlci1wYWdpbmF0aW9uLWJ1bGxldC1oZWlnaHQsIHZhcigtLXN3aXBlci1wYWdpbmF0aW9uLWJ1bGxldC1zaXplLCA4cHgpKTtcbiAgZGlzcGxheTogaW5saW5lLWJsb2NrO1xuICBib3JkZXItcmFkaXVzOiA1MCU7XG4gIGJhY2tncm91bmQ6IHZhcigtLXN3aXBlci1wYWdpbmF0aW9uLWJ1bGxldC1pbmFjdGl2ZS1jb2xvciwgIzAwMCk7XG4gIG9wYWNpdHk6IHZhcigtLXN3aXBlci1wYWdpbmF0aW9uLWJ1bGxldC1pbmFjdGl2ZS1vcGFjaXR5LCAwLjIpO1xufVxuXG5idXR0b24uc3dpcGVyLXBhZ2luYXRpb24tYnVsbGV0IHtcbiAgYm9yZGVyOiBub25lO1xuICBtYXJnaW46IDA7XG4gIHBhZGRpbmc6IDA7XG4gIGJveC1zaGFkb3c6IG5vbmU7XG4gIGFwcGVhcmFuY2U6IG5vbmU7XG59XG5cbi5zd2lwZXItcGFnaW5hdGlvbi1jbGlja2FibGUgLnN3aXBlci1wYWdpbmF0aW9uLWJ1bGxldCB7XG4gIGN1cnNvcjogcG9pbnRlcjtcbn1cblxuLnN3aXBlci1wYWdpbmF0aW9uLWJ1bGxldDpvbmx5LWNoaWxkIHtcbiAgZGlzcGxheTogbm9uZSAhaW1wb3J0YW50O1xufVxuXG4uc3dpcGVyLXBhZ2luYXRpb24tYnVsbGV0LWFjdGl2ZSB7XG4gIG9wYWNpdHk6IHZhcigtLXN3aXBlci1wYWdpbmF0aW9uLWJ1bGxldC1vcGFjaXR5LCAxKTtcbiAgYmFja2dyb3VuZDogdmFyKC0tc3dpcGVyLXBhZ2luYXRpb24tY29sb3IsIHZhcigtLXN3aXBlci10aGVtZS1jb2xvcikpO1xufVxuXG4uc3dpcGVyLXZlcnRpY2FsID4gLnN3aXBlci1wYWdpbmF0aW9uLWJ1bGxldHMsXG4uc3dpcGVyLXBhZ2luYXRpb24tdmVydGljYWwuc3dpcGVyLXBhZ2luYXRpb24tYnVsbGV0cyB7XG4gIHJpZ2h0OiAxMHB4O1xuICB0b3A6IDUwJTtcbiAgdHJhbnNmb3JtOiB0cmFuc2xhdGUzZCgwcHgsIC01MCUsIDApO1xufVxuXG4uc3dpcGVyLXZlcnRpY2FsID4gLnN3aXBlci1wYWdpbmF0aW9uLWJ1bGxldHMgLnN3aXBlci1wYWdpbmF0aW9uLWJ1bGxldCxcbi5zd2lwZXItcGFnaW5hdGlvbi12ZXJ0aWNhbC5zd2lwZXItcGFnaW5hdGlvbi1idWxsZXRzIC5zd2lwZXItcGFnaW5hdGlvbi1idWxsZXQge1xuICBtYXJnaW46IHZhcigtLXN3aXBlci1wYWdpbmF0aW9uLWJ1bGxldC12ZXJ0aWNhbC1nYXAsIDZweCkgMDtcbiAgZGlzcGxheTogYmxvY2s7XG59XG5cbi5zd2lwZXItdmVydGljYWwgPiAuc3dpcGVyLXBhZ2luYXRpb24tYnVsbGV0cy5zd2lwZXItcGFnaW5hdGlvbi1idWxsZXRzLWR5bmFtaWMsXG4uc3dpcGVyLXBhZ2luYXRpb24tdmVydGljYWwuc3dpcGVyLXBhZ2luYXRpb24tYnVsbGV0cy5zd2lwZXItcGFnaW5hdGlvbi1idWxsZXRzLWR5bmFtaWMge1xuICB0b3A6IDUwJTtcbiAgdHJhbnNmb3JtOiB0cmFuc2xhdGVZKC01MCUpO1xuICB3aWR0aDogOHB4O1xufVxuXG4uc3dpcGVyLXZlcnRpY2FsID4gLnN3aXBlci1wYWdpbmF0aW9uLWJ1bGxldHMuc3dpcGVyLXBhZ2luYXRpb24tYnVsbGV0cy1keW5hbWljIC5zd2lwZXItcGFnaW5hdGlvbi1idWxsZXQsXG4uc3dpcGVyLXBhZ2luYXRpb24tdmVydGljYWwuc3dpcGVyLXBhZ2luYXRpb24tYnVsbGV0cy5zd2lwZXItcGFnaW5hdGlvbi1idWxsZXRzLWR5bmFtaWMgLnN3aXBlci1wYWdpbmF0aW9uLWJ1bGxldCB7XG4gIGRpc3BsYXk6IGlubGluZS1ibG9jaztcbiAgdHJhbnNpdGlvbjogMjAwbXMgdHJhbnNmb3JtLCAyMDBtcyB0b3A7XG59XG5cbi5zd2lwZXItaG9yaXpvbnRhbCA+IC5zd2lwZXItcGFnaW5hdGlvbi1idWxsZXRzIC5zd2lwZXItcGFnaW5hdGlvbi1idWxsZXQsXG4uc3dpcGVyLXBhZ2luYXRpb24taG9yaXpvbnRhbC5zd2lwZXItcGFnaW5hdGlvbi1idWxsZXRzIC5zd2lwZXItcGFnaW5hdGlvbi1idWxsZXQge1xuICBtYXJnaW46IDAgdmFyKC0tc3dpcGVyLXBhZ2luYXRpb24tYnVsbGV0LWhvcml6b250YWwtZ2FwLCA0cHgpO1xufVxuXG4uc3dpcGVyLWhvcml6b250YWwgPiAuc3dpcGVyLXBhZ2luYXRpb24tYnVsbGV0cy5zd2lwZXItcGFnaW5hdGlvbi1idWxsZXRzLWR5bmFtaWMsXG4uc3dpcGVyLXBhZ2luYXRpb24taG9yaXpvbnRhbC5zd2lwZXItcGFnaW5hdGlvbi1idWxsZXRzLnN3aXBlci1wYWdpbmF0aW9uLWJ1bGxldHMtZHluYW1pYyB7XG4gIGxlZnQ6IDUwJTtcbiAgdHJhbnNmb3JtOiB0cmFuc2xhdGVYKC01MCUpO1xuICB3aGl0ZS1zcGFjZTogbm93cmFwO1xufVxuXG4uc3dpcGVyLWhvcml6b250YWwgPiAuc3dpcGVyLXBhZ2luYXRpb24tYnVsbGV0cy5zd2lwZXItcGFnaW5hdGlvbi1idWxsZXRzLWR5bmFtaWMgLnN3aXBlci1wYWdpbmF0aW9uLWJ1bGxldCxcbi5zd2lwZXItcGFnaW5hdGlvbi1ob3Jpem9udGFsLnN3aXBlci1wYWdpbmF0aW9uLWJ1bGxldHMuc3dpcGVyLXBhZ2luYXRpb24tYnVsbGV0cy1keW5hbWljIC5zd2lwZXItcGFnaW5hdGlvbi1idWxsZXQge1xuICB0cmFuc2l0aW9uOiAyMDBtcyB0cmFuc2Zvcm0sIDIwMG1zIGxlZnQ7XG59XG5cbi5zd2lwZXItaG9yaXpvbnRhbC5zd2lwZXItcnRsID4gLnN3aXBlci1wYWdpbmF0aW9uLWJ1bGxldHMtZHluYW1pYyAuc3dpcGVyLXBhZ2luYXRpb24tYnVsbGV0IHtcbiAgdHJhbnNpdGlvbjogMjAwbXMgdHJhbnNmb3JtLCAyMDBtcyByaWdodDtcbn1cblxuLnN3aXBlci1wYWdpbmF0aW9uLXByb2dyZXNzYmFyIHtcbiAgYmFja2dyb3VuZDogcmdiYSgwLCAwLCAwLCAwLjI1KTtcbiAgcG9zaXRpb246IGFic29sdXRlO1xufVxuXG4uc3dpcGVyLXBhZ2luYXRpb24tcHJvZ3Jlc3NiYXIgLnN3aXBlci1wYWdpbmF0aW9uLXByb2dyZXNzYmFyLWZpbGwge1xuICBiYWNrZ3JvdW5kOiB2YXIoLS1zd2lwZXItcGFnaW5hdGlvbi1jb2xvciwgdmFyKC0tc3dpcGVyLXRoZW1lLWNvbG9yKSk7XG4gIHBvc2l0aW9uOiBhYnNvbHV0ZTtcbiAgbGVmdDogMDtcbiAgdG9wOiAwO1xuICB3aWR0aDogMTAwJTtcbiAgaGVpZ2h0OiAxMDAlO1xuICB0cmFuc2Zvcm06IHNjYWxlKDApO1xuICB0cmFuc2Zvcm0tb3JpZ2luOiBsZWZ0IHRvcDtcbn1cblxuLnN3aXBlci1ydGwgLnN3aXBlci1wYWdpbmF0aW9uLXByb2dyZXNzYmFyIC5zd2lwZXItcGFnaW5hdGlvbi1wcm9ncmVzc2Jhci1maWxsIHtcbiAgdHJhbnNmb3JtLW9yaWdpbjogcmlnaHQgdG9wO1xufVxuXG4uc3dpcGVyLWhvcml6b250YWwgPiAuc3dpcGVyLXBhZ2luYXRpb24tcHJvZ3Jlc3NiYXIsXG4uc3dpcGVyLXBhZ2luYXRpb24tcHJvZ3Jlc3NiYXIuc3dpcGVyLXBhZ2luYXRpb24taG9yaXpvbnRhbCxcbi5zd2lwZXItdmVydGljYWwgPiAuc3dpcGVyLXBhZ2luYXRpb24tcHJvZ3Jlc3NiYXIuc3dpcGVyLXBhZ2luYXRpb24tcHJvZ3Jlc3NiYXItb3Bwb3NpdGUsXG4uc3dpcGVyLXBhZ2luYXRpb24tcHJvZ3Jlc3NiYXIuc3dpcGVyLXBhZ2luYXRpb24tdmVydGljYWwuc3dpcGVyLXBhZ2luYXRpb24tcHJvZ3Jlc3NiYXItb3Bwb3NpdGUge1xuICB3aWR0aDogMTAwJTtcbiAgaGVpZ2h0OiA0cHg7XG4gIGxlZnQ6IDA7XG4gIHRvcDogMDtcbn1cblxuLnN3aXBlci12ZXJ0aWNhbCA+IC5zd2lwZXItcGFnaW5hdGlvbi1wcm9ncmVzc2Jhcixcbi5zd2lwZXItcGFnaW5hdGlvbi1wcm9ncmVzc2Jhci5zd2lwZXItcGFnaW5hdGlvbi12ZXJ0aWNhbCxcbi5zd2lwZXItaG9yaXpvbnRhbCA+IC5zd2lwZXItcGFnaW5hdGlvbi1wcm9ncmVzc2Jhci5zd2lwZXItcGFnaW5hdGlvbi1wcm9ncmVzc2Jhci1vcHBvc2l0ZSxcbi5zd2lwZXItcGFnaW5hdGlvbi1wcm9ncmVzc2Jhci5zd2lwZXItcGFnaW5hdGlvbi1ob3Jpem9udGFsLnN3aXBlci1wYWdpbmF0aW9uLXByb2dyZXNzYmFyLW9wcG9zaXRlIHtcbiAgd2lkdGg6IDRweDtcbiAgaGVpZ2h0OiAxMDAlO1xuICBsZWZ0OiAwO1xuICB0b3A6IDA7XG59XG5cbi5zd2lwZXItcGFnaW5hdGlvbi1sb2NrIHtcbiAgZGlzcGxheTogbm9uZTtcbn1cblxuLnByaWNlLWl0ZW0tZmVhdHVyZSxcbi5wcmljZS1pdGVtLWRlc2NyaXB0aW9uLFxuLnByaWNlLWl0ZW0tbW9udGgge1xuICBmb250OiBub3JtYWwgNDAwIDE2cHgvMjVweCBcIk9wZW4gU2Fuc1wiO1xuICBjb2xvcjogIzg5OTFBRjtcbn1cblxuLnByaWNlLWJvdHRvbS1hZGRyZXNzLFxuLnByaWNlLWJvdHRvbS1lbWFpbCB7XG4gIGZvbnQ6IG5vcm1hbCA0MDAgMTRweC8zMHB4IFwiUm9ib3RvXCI7XG4gIHRleHQtYWxpZ246IGNlbnRlcjtcbiAgY29sb3I6ICM4OTkxQUY7XG59XG5cbi5wcmljaW5nIHtcbiAgYmFja2dyb3VuZDogdXJsKFwiLi4vaW1nL3N2Zy9mb290ZXItYmcuc3ZnXCIpIGNlbnRlciBjZW50ZXIvY292ZXI7XG4gIG1hcmdpbi1ib3R0b206IDYwcHg7XG59XG5cbi5wcmljZS1pdGVtcyB7XG4gIGRpc3BsYXk6IGZsZXg7XG4gIG1heC13aWR0aDogMTQwMHB4O1xuICBtYXJnaW46IDAgYXV0byAxODBweDtcbiAganVzdGlmeS1jb250ZW50OiBzcGFjZS1iZXR3ZWVuO1xuICBnYXA6IDEwcHg7XG59XG5cbi5wcmljZS1pdGVtOjphZnRlciB7XG4gIGJhY2tncm91bmQ6IHJnYmEoMCwgMCwgMSwgMC44KTtcbiAgY29udGVudDogXCJcIjtcbiAgcG9zaXRpb246IGFic29sdXRlO1xuICBvcGFjaXR5OiAwLjg7XG4gIHRvcDogMDtcbiAgbGVmdDogMDtcbiAgYm90dG9tOiAwO1xuICByaWdodDogMDtcbiAgei1pbmRleDogLTE7XG59XG5cbi5wcmljZS1pdGVtIHtcbiAgcG9zaXRpb246IHJlbGF0aXZlO1xuICBib3JkZXItcmFkaXVzOiAxNnB4O1xuICBwYWRkaW5nOiAwO1xuICBwb3NpdGlvbjogcmVsYXRpdmU7XG4gIGRpc3BsYXk6IGZsZXg7XG4gIGp1c3RpZnktY29udGVudDogc3BhY2UtYmV0d2VlbjtcbiAgbWluLWhlaWdodDogODUwcHg7XG4gIGZsZXgtZGlyZWN0aW9uOiBjb2x1bW47XG4gIGZsZXgtYmFzaXM6IDQzMHB4O1xufVxuXG4ucHJpY2UtaXRlbS1jb250ZW50IHtcbiAgbWF4LXdpZHRoOiAzMTBweDtcbiAgZGlzcGxheTogZmxleDtcbiAgZmxleC1kaXJlY3Rpb246IGNvbHVtbjtcbiAgbWFyZ2luOiAwIGF1dG87XG4gIHBhZGRpbmc6IDYwcHggMjBweCAwIDIwcHg7XG59XG5cbi5wcmljZS1pdGVtLWJpZyB7XG4gIGZvbnQ6IG5vcm1hbCA0MDAgNTBweC8yNXB4IFwiRE0gU2VyaWYgRGlzcGxheVwiO1xuICBsZXR0ZXItc3BhY2luZzogMC4wM2VtO1xuICBjb2xvcjogI0ZGRkZGRjtcbn1cblxuLnByaWNlLWl0ZW0tbW9udGgge1xuICBjb2xvcjogI0E1QURCQjtcbn1cblxuLnByaWNlLWl0ZW0tbmFtZSB7XG4gIGZvbnQ6IG5vcm1hbCA0MDAgMjFweC8yNXB4IFwiQXJzZW5hbFwiO1xuICBjb2xvcjogI0ZGRkZGRjtcbiAgbWFyZ2luLWJvdHRvbTogMzBweDtcbiAgbWFyZ2luLXRvcDogMTdweDtcbn1cblxuLnByaWNlLWl0ZW0tZmVhdHVyZXMge1xuICBtYXJnaW4tdG9wOiAyMHB4O1xuICBwYWRkaW5nLXRvcDogNjBweDtcbiAgYm9yZGVyLXRvcDogMnB4IHNvbGlkIHJnYmEoMjM1LCAyMzYsIDIzNywgMC4yKTtcbn1cblxuLnByaWNlLWl0ZW0tZmVhdHVyZTpub3QoOmxhc3QtY2hpbGQpIHtcbiAgbWFyZ2luLWJvdHRvbTogMjBweDtcbn1cblxuLnByaWNlLWl0ZW0tZmVhdHVyZTo6YmVmb3JlIHtcbiAgY29udGVudDogdXJsKFwiLi4vaW1nL3N2Zy9wcmljZS1jaGVjay1tYXJrLnN2Z1wiKTtcbiAgbWFyZ2luLXJpZ2h0OiAxMHB4O1xufVxuXG4ucHJpY2UtaXRlbS1idXR0b24ge1xuICBtYXJnaW4tdG9wOiBhdXRvO1xuICBtYXJnaW4tYm90dG9tOiA4MHB4O1xuICBoZWlnaHQ6IDUwcHg7XG4gIHdpZHRoOiAyNjBweDtcbiAgZGlzcGxheTogZmxleDtcbiAgYWxpZ24taXRlbXM6IGNlbnRlcjtcbiAganVzdGlmeS1jb250ZW50OiBjZW50ZXI7XG4gIG1hcmdpbjogNTBweCBhdXRvIDgwcHggYXV0bztcbiAgY3Vyc29yOiBwb2ludGVyO1xufVxuXG4ucHJpY2UtYm90dG9tIHtcbiAgdGV4dC1hbGlnbjogY2VudGVyO1xuICBtYXJnaW4tYm90dG9tOiA1MHB4O1xufVxuXG4ucHJpY2UtYm90dG9tLWxvZ28ge1xuICBmb250LXNpemU6IDQ4cHg7XG4gIG1hcmdpbjogMCBhdXRvIDE1cHg7XG59XG5cbi5wcmljZS1ib3R0b20tZW1haWwge1xuICB0ZXh0LWRlY29yYXRpb246IHVuZGVybGluZTtcbiAgZm9udC1zaXplOiAyNHB4O1xuICBtYXJnaW4tYm90dG9tOiAyMHB4O1xufVxuXG4ucHJpY2UtYm90dG9tLXNvY2lhbCB7XG4gIG1hcmdpbjogMCBhdXRvO1xufVxuXG4ucHJpY2UtYm90dG9tLWFkZHJlc3Mge1xuICBtYXJnaW4tYm90dG9tOiA0MHB4O1xufVxuXG5AbWVkaWEgKG1heC13aWR0aDogOTkycHgpIHtcbiAgLnByaWNlLWl0ZW1zIHtcbiAgICBmbGV4LWRpcmVjdGlvbjogY29sdW1uO1xuICAgIGFsaWduLWl0ZW1zOiBjZW50ZXI7XG4gICAgcm93LWdhcDogNTBweDtcbiAgfVxuXG4gIC5wcmljZS1pdGVtIHtcbiAgICB3aWR0aDogOTAlO1xuICAgIGp1c3RpZnktY29udGVudDogc3BhY2UtYmV0d2VlbjtcbiAgICBtaW4taGVpZ2h0OiBhdXRvO1xuICB9XG5cbiAgLnByaWNlLWl0ZW0tY29udGVudCB7XG4gICAgbWF4LXdpZHRoOiBub25lO1xuICB9XG5cbiAgLnByaWNlLWl0ZW0tYnV0dG9uIHtcbiAgICBtYXJnaW4tYm90dG9tOiA1MHB4O1xuICB9XG5cbiAgLnByaWNlLWl0ZW0tZmVhdHVyZXMge1xuICAgIHBhZGRpbmctdG9wOiA0MHB4O1xuICB9XG59XG5cbkBtZWRpYSAobWF4LXdpZHRoOiA2NDBweCkge1xuICAucHJpY2UtaXRlbS1idXR0b24ge1xuICAgIG1heC13aWR0aDogMjAwcHg7XG4gIH1cblxuICAucHJpY2UtYm90dG9tLWVtYWlsIHtcbiAgICBmb250LXNpemU6IDIycHg7XG4gIH1cbn1cblxuQGZvbnQtZmFjZSB7XG4gIGZvbnQtZmFtaWx5OiBcInN3aXBlci1pY29uc1wiO1xuICBzcmM6IHVybChcImRhdGE6YXBwbGljYXRpb24vZm9udC13b2ZmO2NoYXJzZXQ9dXRmLTg7YmFzZTY0LCBkMDlHUmdBQkFBQUFBQVpnQUJBQUFBQUFEQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQkdSbFJOQUFBR1JBQUFBQm9BQUFBY2k2cUhrVWRFUlVZQUFBV2dBQUFBSXdBQUFDUUFZQUJYUjFCUFV3QUFCaFFBQUFBdUFBQUFOdUFZNyt4SFUxVkNBQUFGeEFBQUFGQUFBQUJtMmZQY3pVOVRMeklBQUFIY0FBQUFTZ0FBQUdCUDlWNVJZMjFoY0FBQUFrUUFBQUNJQUFBQll0NkYwY0JqZG5RZ0FBQUN6QUFBQUFRQUFBQUVBQkVCUkdkaGMzQUFBQVdZQUFBQUNBQUFBQWovL3dBRFoyeDVaZ0FBQXl3QUFBRE1BQUFEMk1IdHJ5Vm9aV0ZrQUFBQmJBQUFBREFBQUFBMkUyK2VvV2hvWldFQUFBR2NBQUFBSHdBQUFDUUM5Z0R6YUcxMGVBQUFBaWdBQUFBWkFBQUFyZ0prQUJGc2IyTmhBQUFDMEFBQUFGb0FBQUJhRlFBVUdHMWhlSEFBQUFHOEFBQUFId0FBQUNBQWNBQkFibUZ0WlFBQUEvZ0FBQUU1QUFBQ1h2RmRCd2x3YjNOMEFBQUZOQUFBQUdJQUFBQ0U1czc0aFhqYVkyQmtZR0FBWXBmNUh1L2orVzIrTW5Bek1ZREF6YVg2UWpENi80Ly9CeGo1R0E4QXVSd01ZR2tBUHl3TDEzamFZMkJrWUdBODhQOEFneDRqKy84ZlFEWWZBMUFFQldnREFJQjJCT29BZU5wallHUmdZTkJoNEdkZ1lnQUJFTW5JQUJKellOQURDUUFBQ1dnQXNRQjQybU5nWWZ6Q09JR0JsWUdCMFljeGpZR0J3UjFLZjJXUVpHaGhZR0JpWUdWbWdBRkdCaVFRa09hYXd0REFvTUJReFhqZy93RUdQY1lEREE0d05VQTJDQ2d3c0FBQU80RUw2Z0FBZU5wajJNMGd5QUFDcXhnR05XQmtaMkQ0L3dNQSt4a0RkZ0FBQUhqYVkyQmdZR2FBWUJrR1JnWVFpQUh5R01GOEZnWUhJTTNEd01IQUJHUXJNT2d5V0RMRU0xVDkvdzhVQmZFTWdMekUvLy8vUC81Ly9mL1YveHYrcjRlYUFBZU1iQXh3SVVZbUlNSEVnS1lBWWpVY3NEQXdzTEt4YzNCeWNmUHc4akVRQS9nWkJBU0ZoRVZFeGNRbEpLV2taV1RsNUJVVWxaUlZWTlhVTlRRWkJnTUFBTVIrRStnQUVRRkVBQUFBS2dBcUFDb0FOQUErQUVnQVVnQmNBR1lBY0FCNkFJUUFqZ0NZQUtJQXJBQzJBTUFBeWdEVUFONEE2QUR5QVB3QkJnRVFBUm9CSkFFdUFUZ0JRZ0ZNQVZZQllBRnFBWFFCZmdHSUFaSUJuQUdtQWJJQnpnSHNBQUI0MnUyTk1RNkNVQXlHVzU2OHg5QW5lWVlnbTRNSmJoS0ZhRXhJT0FWWDhBcGV3U3Q0QmljNEFmZUFpZDNWT0JpeER4ZlBZRXphNU8rWGZpMDRZQURnZ2lVSVVMQ3VFSks4VmhPNGJTdnBkbmt0SEk1UUNZdGRpMnNsOFpuWGFIbHFVck5LemRLY1Q4Y2pscStyd1pTdklWY3pOaWV6c2ZuUC91em5tZlBGQk5PRE0ySzdNVFE0NVlFQVpxR1A4MUFtR0djRjNpUHFPb3AwcjFTUFRhVGJWa2ZVZTRIWGo5N3dZRSt5TndXWXh3V3U0djF1Z1dIZ28zUzFYZFpFVnFXTTdFVDBjZm5MR3hXZmtnUjQybzJQdldyRE1CU0ZqL0lITGFGMHpLalJnZGlWTXdTY05SQW9XVW9INzhZMmljQi95SVkwOUFuNkFIMkJkdS9VQit5eG9wWXNoUWlFdm52dTBkVVJnRHQ4UWVDOFBEdzdGcGppM2ZFQTR6L1BFSjZZT0I1aEtoNGRqM0V2WGh4UHFIL1NLVVkzcko3c3JaNEZabmgxUE1BdFBod1A2ZmwyUE1KTVBEZ2VRNHJZOFlUNkd6YW8wZUFFQTQwOUR1Z2dtVG5Gbk9jU0NpRWlMTWd4Q2lUSTZDcTVEWlVkM1FtcDEwdk8wTGFMVGQyY2pONGZPdW1sYzdsVVliU1FjWkZrdXRSRzdnNkpLWkt5MFJtZExZNjgwQ0RuRUorVU1rcEZGZTFSTjdueGRWcFhyQzRhVHRuYXVyT25ZZXJjWmcyWVZtTE4vZC9nY3pmRWltckUvZnMvYk91cTI5Wm1uOHRsb09SYVhnWmdHYTc4eU85L2NuWG0yQnBhR3ZxMjVEdjlTNEU5KzVTSWM5UHF1cEpLaFlGU1NsNDcrUWNyMW1ZTkFBQUFlTnB0dzBjS3drQUFBTURaSkE4UTdPVUp2a0xzUGZaNnpGVkVSUHk4cUhoMllFUiszaS9CUDgzdklCTEx5U3NvS2ltcnFLcXBhMmhwNitqcTZSc1lHaG1ibUpxWlN5MHNyYXh0Yk8zc0hSeWRuRU1VNHVSNnl4N0pKWHZlUDdXckR5Y0FBQUFBQUFILy93QUNlTnBqWUdSZ1lPQUJZaGtnWmdKQ1pnWk5Ca1lHTFFadElKc0ZMTVlBQUF3M0FMZ0FlTm9saXpFS2dEQVFCQ2NoUmJDMnNGRVIwWUQ2cVZRaUJDdi9IOWV6R0k2WjVYQkF3OENCSy9tNWlRUVZhdVZiWExuT3JNWnYyb0xkS0ZhOFBqdXJ1MmhKekdhYm1PU0x6Tk16dnV0cEIzTjQybU5nWkdCZzRHS1FZekJoWU14SkxNbGo0R0JnQVlvdy9QL1BBSkpoTE02c1NvV0tmV0NBQXdEQWpnYlJBQUI0Mm1OZ1lHQmtBSUliQ1pvNUlQcm1VbjBoR0EwQU84RUZUUUFBXCIpIGZvcm1hdChcIndvZmZcIik7XG4gIGZvbnQtd2VpZ2h0OiA0MDA7XG4gIGZvbnQtc3R5bGU6IG5vcm1hbDtcbn1cblxuOnJvb3Qge1xuICAtLXN3aXBlci10aGVtZS1jb2xvcjogIzAwN2FmZjtcbn1cblxuLnN3aXBlciB7XG4gIG1hcmdpbi1sZWZ0OiBhdXRvO1xuICBtYXJnaW4tcmlnaHQ6IGF1dG87XG4gIHBvc2l0aW9uOiByZWxhdGl2ZTtcbiAgb3ZlcmZsb3c6IGhpZGRlbjtcbiAgbGlzdC1zdHlsZTogbm9uZTtcbiAgcGFkZGluZzogMDtcbiAgei1pbmRleDogMTtcbn1cblxuLnN3aXBlci12ZXJ0aWNhbCA+IC5zd2lwZXItd3JhcHBlciB7XG4gIGZsZXgtZGlyZWN0aW9uOiBjb2x1bW47XG59XG5cbi5zd2lwZXItd3JhcHBlciB7XG4gIHBvc2l0aW9uOiByZWxhdGl2ZTtcbiAgd2lkdGg6IDEwMCU7XG4gIGhlaWdodDogMTAwJTtcbiAgei1pbmRleDogMTtcbiAgZGlzcGxheTogZmxleDtcbiAgdHJhbnNpdGlvbi1wcm9wZXJ0eTogdHJhbnNmb3JtO1xuICBib3gtc2l6aW5nOiBjb250ZW50LWJveDtcbn1cblxuLnN3aXBlci1hbmRyb2lkIC5zd2lwZXItc2xpZGUsXG4uc3dpcGVyLXdyYXBwZXIge1xuICB0cmFuc2Zvcm06IHRyYW5zbGF0ZTNkKDBweCwgMCwgMCk7XG59XG5cbi5zd2lwZXItcG9pbnRlci1ldmVudHMge1xuICB0b3VjaC1hY3Rpb246IHBhbi15O1xufVxuXG4uc3dpcGVyLXBvaW50ZXItZXZlbnRzLnN3aXBlci12ZXJ0aWNhbCB7XG4gIHRvdWNoLWFjdGlvbjogcGFuLXg7XG59XG5cbi5zd2lwZXItc2xpZGUge1xuICBmbGV4LXNocmluazogMDtcbiAgd2lkdGg6IDEwMCU7XG4gIGhlaWdodDogMTAwJTtcbiAgcG9zaXRpb246IHJlbGF0aXZlO1xuICB0cmFuc2l0aW9uLXByb3BlcnR5OiB0cmFuc2Zvcm07XG59XG5cbi5zd2lwZXItc2xpZGUtaW52aXNpYmxlLWJsYW5rIHtcbiAgdmlzaWJpbGl0eTogaGlkZGVuO1xufVxuXG4uc3dpcGVyLWF1dG9oZWlnaHQsXG4uc3dpcGVyLWF1dG9oZWlnaHQgLnN3aXBlci1zbGlkZSB7XG4gIGhlaWdodDogYXV0bztcbn1cblxuLnN3aXBlci1hdXRvaGVpZ2h0IC5zd2lwZXItd3JhcHBlciB7XG4gIGFsaWduLWl0ZW1zOiBmbGV4LXN0YXJ0O1xuICB0cmFuc2l0aW9uLXByb3BlcnR5OiB0cmFuc2Zvcm0sIGhlaWdodDtcbn1cblxuLnN3aXBlci1iYWNrZmFjZS1oaWRkZW4gLnN3aXBlci1zbGlkZSB7XG4gIHRyYW5zZm9ybTogdHJhbnNsYXRlWigwKTtcbiAgYmFja2ZhY2UtdmlzaWJpbGl0eTogaGlkZGVuO1xufVxuXG4uc3dpcGVyLTNkLFxuLnN3aXBlci0zZC5zd2lwZXItY3NzLW1vZGUgLnN3aXBlci13cmFwcGVyIHtcbiAgcGVyc3BlY3RpdmU6IDEyMDBweDtcbn1cblxuLnN3aXBlci0zZCAuc3dpcGVyLXdyYXBwZXIsXG4uc3dpcGVyLTNkIC5zd2lwZXItc2xpZGUsXG4uc3dpcGVyLTNkIC5zd2lwZXItc2xpZGUtc2hhZG93LFxuLnN3aXBlci0zZCAuc3dpcGVyLXNsaWRlLXNoYWRvdy1sZWZ0LFxuLnN3aXBlci0zZCAuc3dpcGVyLXNsaWRlLXNoYWRvdy1yaWdodCxcbi5zd2lwZXItM2QgLnN3aXBlci1zbGlkZS1zaGFkb3ctdG9wLFxuLnN3aXBlci0zZCAuc3dpcGVyLXNsaWRlLXNoYWRvdy1ib3R0b20sXG4uc3dpcGVyLTNkIC5zd2lwZXItY3ViZS1zaGFkb3cge1xuICB0cmFuc2Zvcm0tc3R5bGU6IHByZXNlcnZlLTNkO1xufVxuXG4uc3dpcGVyLTNkIC5zd2lwZXItc2xpZGUtc2hhZG93LFxuLnN3aXBlci0zZCAuc3dpcGVyLXNsaWRlLXNoYWRvdy1sZWZ0LFxuLnN3aXBlci0zZCAuc3dpcGVyLXNsaWRlLXNoYWRvdy1yaWdodCxcbi5zd2lwZXItM2QgLnN3aXBlci1zbGlkZS1zaGFkb3ctdG9wLFxuLnN3aXBlci0zZCAuc3dpcGVyLXNsaWRlLXNoYWRvdy1ib3R0b20ge1xuICBwb3NpdGlvbjogYWJzb2x1dGU7XG4gIGxlZnQ6IDA7XG4gIHRvcDogMDtcbiAgd2lkdGg6IDEwMCU7XG4gIGhlaWdodDogMTAwJTtcbiAgcG9pbnRlci1ldmVudHM6IG5vbmU7XG4gIHotaW5kZXg6IDEwO1xufVxuXG4uc3dpcGVyLTNkIC5zd2lwZXItc2xpZGUtc2hhZG93IHtcbiAgYmFja2dyb3VuZDogcmdiYSgwLCAwLCAwLCAwLjE1KTtcbn1cblxuLnN3aXBlci0zZCAuc3dpcGVyLXNsaWRlLXNoYWRvdy1sZWZ0IHtcbiAgYmFja2dyb3VuZDogbGluZWFyLWdyYWRpZW50KHRvIGxlZnQsIHJnYmEoMCwgMCwgMCwgMC41KSwgcmdiYSgwLCAwLCAwLCAwKSk7XG59XG5cbi5zd2lwZXItM2QgLnN3aXBlci1zbGlkZS1zaGFkb3ctcmlnaHQge1xuICBiYWNrZ3JvdW5kOiBsaW5lYXItZ3JhZGllbnQodG8gcmlnaHQsIHJnYmEoMCwgMCwgMCwgMC41KSwgcmdiYSgwLCAwLCAwLCAwKSk7XG59XG5cbi5zd2lwZXItM2QgLnN3aXBlci1zbGlkZS1zaGFkb3ctdG9wIHtcbiAgYmFja2dyb3VuZDogbGluZWFyLWdyYWRpZW50KHRvIHRvcCwgcmdiYSgwLCAwLCAwLCAwLjUpLCByZ2JhKDAsIDAsIDAsIDApKTtcbn1cblxuLnN3aXBlci0zZCAuc3dpcGVyLXNsaWRlLXNoYWRvdy1ib3R0b20ge1xuICBiYWNrZ3JvdW5kOiBsaW5lYXItZ3JhZGllbnQodG8gYm90dG9tLCByZ2JhKDAsIDAsIDAsIDAuNSksIHJnYmEoMCwgMCwgMCwgMCkpO1xufVxuXG4uc3dpcGVyLWNzcy1tb2RlID4gLnN3aXBlci13cmFwcGVyIHtcbiAgb3ZlcmZsb3c6IGF1dG87XG4gIHNjcm9sbGJhci13aWR0aDogbm9uZTtcbiAgLW1zLW92ZXJmbG93LXN0eWxlOiBub25lO1xufVxuXG4uc3dpcGVyLWNzcy1tb2RlID4gLnN3aXBlci13cmFwcGVyOjotd2Via2l0LXNjcm9sbGJhciB7XG4gIGRpc3BsYXk6IG5vbmU7XG59XG5cbi5zd2lwZXItY3NzLW1vZGUgPiAuc3dpcGVyLXdyYXBwZXIgPiAuc3dpcGVyLXNsaWRlIHtcbiAgc2Nyb2xsLXNuYXAtYWxpZ246IHN0YXJ0IHN0YXJ0O1xufVxuXG4uc3dpcGVyLWhvcml6b250YWwuc3dpcGVyLWNzcy1tb2RlID4gLnN3aXBlci13cmFwcGVyIHtcbiAgc2Nyb2xsLXNuYXAtdHlwZTogeCBtYW5kYXRvcnk7XG59XG5cbi5zd2lwZXItdmVydGljYWwuc3dpcGVyLWNzcy1tb2RlID4gLnN3aXBlci13cmFwcGVyIHtcbiAgc2Nyb2xsLXNuYXAtdHlwZTogeSBtYW5kYXRvcnk7XG59XG5cbi5zd2lwZXItY2VudGVyZWQgPiAuc3dpcGVyLXdyYXBwZXI6OmJlZm9yZSB7XG4gIGNvbnRlbnQ6IFwiXCI7XG4gIGZsZXgtc2hyaW5rOiAwO1xuICBvcmRlcjogOTk5OTtcbn1cblxuLnN3aXBlci1jZW50ZXJlZC5zd2lwZXItaG9yaXpvbnRhbCA+IC5zd2lwZXItd3JhcHBlciA+IC5zd2lwZXItc2xpZGU6Zmlyc3QtY2hpbGQge1xuICBtYXJnaW4taW5saW5lLXN0YXJ0OiB2YXIoLS1zd2lwZXItY2VudGVyZWQtb2Zmc2V0LWJlZm9yZSk7XG59XG5cbi5zd2lwZXItY2VudGVyZWQuc3dpcGVyLWhvcml6b250YWwgPiAuc3dpcGVyLXdyYXBwZXI6OmJlZm9yZSB7XG4gIGhlaWdodDogMTAwJTtcbiAgd2lkdGg6IHZhcigtLXN3aXBlci1jZW50ZXJlZC1vZmZzZXQtYWZ0ZXIpO1xufVxuXG4uc3dpcGVyLWNlbnRlcmVkLnN3aXBlci12ZXJ0aWNhbCA+IC5zd2lwZXItd3JhcHBlciA+IC5zd2lwZXItc2xpZGU6Zmlyc3QtY2hpbGQge1xuICBtYXJnaW4tYmxvY2stc3RhcnQ6IHZhcigtLXN3aXBlci1jZW50ZXJlZC1vZmZzZXQtYmVmb3JlKTtcbn1cblxuLnN3aXBlci1jZW50ZXJlZC5zd2lwZXItdmVydGljYWwgPiAuc3dpcGVyLXdyYXBwZXI6OmJlZm9yZSB7XG4gIHdpZHRoOiAxMDAlO1xuICBoZWlnaHQ6IHZhcigtLXN3aXBlci1jZW50ZXJlZC1vZmZzZXQtYWZ0ZXIpO1xufVxuXG4uc3dpcGVyLWNlbnRlcmVkID4gLnN3aXBlci13cmFwcGVyID4gLnN3aXBlci1zbGlkZSB7XG4gIHNjcm9sbC1zbmFwLWFsaWduOiBjZW50ZXIgY2VudGVyO1xufVxuXG4udGVzdGltb25pYWxzIHtcbiAgbWF4LXdpZHRoOiAxMDMwcHg7XG4gIG1hcmdpbi1ib3R0b206IDI1MHB4O1xufVxuXG4udGVzdGltb25pYWxzLXNsaWRlciB7XG4gIGRpc3BsYXk6IGZsZXg7XG59XG5cbi50ZXN0aW1vbmlhbHMtaW1nIHtcbiAgbWFyZ2luLXJpZ2h0OiAxMDBweDtcbiAgbWFyZ2luLXRvcDogNzdweDtcbn1cblxuLnRlc3RpbW9uaWFscy1jb250ZW50X19xdW90ZSB7XG4gIGZvbnQ6IGl0YWxpYyA0MDAgMzJweC8xNzAlIFwiQXJzZW5hbFwiO1xufVxuXG4udGVzdGltb25pYWxzLWNvbnRlbnRfX2F1dGhvciB7XG4gIGZvbnQtZmFtaWx5OiBcIk9wZW4gU2Fuc1wiO1xuICBmb250LXN0eWxlOiBub3JtYWw7XG4gIGNvbG9yOiAjODk5MUFGO1xufVxuXG4udGVzdGltb25pYWxzLWNvbnRlbnRfX2NvbXBhbnkge1xuICBmb250OiBub3JtYWwgNDAwIDE4cHgvMTgwJSBcIk9wZW4gU2Fuc1wiO1xufVxuXG4uc3dpcGVyLXdyYXBwZXIge1xuICBtYXJnaW4tYm90dG9tOiA2MnB4O1xufVxuXG4uc3dpcGVyLWhvcml6b250YWwgPiAuc3dpcGVyLXBhZ2luYXRpb24tYnVsbGV0cyAuc3dpcGVyLXBhZ2luYXRpb24tYnVsbGV0LFxuLnN3aXBlci1wYWdpbmF0aW9uLWhvcml6b250YWwuc3dpcGVyLXBhZ2luYXRpb24tYnVsbGV0cyAuc3dpcGVyLXBhZ2luYXRpb24tYnVsbGV0IHtcbiAgcGFkZGluZzogMCAwO1xuICBwb3NpdGlvbjogcmVsYXRpdmU7XG59XG5cbi5zd2lwZXItaG9yaXpvbnRhbCA+IC5zd2lwZXItcGFnaW5hdGlvbi1idWxsZXRzIC5zd2lwZXItcGFnaW5hdGlvbi1idWxsZXQtYWN0aXZlLFxuLnN3aXBlci1wYWdpbmF0aW9uLWhvcml6b250YWwuc3dpcGVyLXBhZ2luYXRpb24tYnVsbGV0cyAuc3dpcGVyLXBhZ2luYXRpb24tYnVsbGV0LWFjdGl2ZSB7XG4gIHRvcDogLTJweDtcbiAgd2lkdGg6IDEycHg7XG4gIGhlaWdodDogMTJweDtcbiAgdHJhbnNpdGlvbjogYWxsIDAuNXMgZWFzZTtcbn1cblxuLnN3aXBlci1ob3Jpem9udGFsID4gLnN3aXBlci1wYWdpbmF0aW9uLWJ1bGxldHMgLnN3aXBlci1wYWdpbmF0aW9uLWJ1bGxldC1hY3RpdmU6OmFmdGVyLFxuLnN3aXBlci1wYWdpbmF0aW9uLWhvcml6b250YWwuc3dpcGVyLXBhZ2luYXRpb24tYnVsbGV0cyAuc3dpcGVyLXBhZ2luYXRpb24tYnVsbGV0LWFjdGl2ZTo6YWZ0ZXIge1xuICBtYXJnaW4tbGVmdDogLTlweDtcbn1cblxuLnN3aXBlci1wYWdpbmF0aW9uLWJ1bGxldDo6YWZ0ZXIge1xuICBjb250ZW50OiBcIlwiO1xuICBwYWRkaW5nOiAxMHB4IDE1cHg7XG4gIG1hcmdpbi1sZWZ0OiAtMTFweDtcbn1cblxuQG1lZGlhIChtYXgtd2lkdGg6IDc2OHB4KSB7XG4gIC50ZXN0aW1vbmlhbHMtaW1nIHtcbiAgICBtYXJnaW4tcmlnaHQ6IDI1cHg7XG4gICAgbWFyZ2luLXRvcDogNTBweDtcbiAgfVxuXG4gIC50ZXN0aW1vbmlhbHMtY29udGVudF9fcXVvdGUge1xuICAgIGZvbnQtc2l6ZTogMjRweDtcbiAgfVxuXG4gIC50ZXN0aW1vbmlhbHMtaW1nIGltZyB7XG4gICAgbWF4LXdpZHRoOiA1MHB4O1xuICB9XG59XG5Ac3VwcG9ydHMgKC13ZWJraXQtYXBwZWFyYW5jZTpub25lKXtcbi5oZWFkZXItZW1haWw6YmVmb3Jle2JhY2tncm91bmQ6dXJsKFwiLi4vaW1nL3N2Zy9lbWFpbC5zdmdcIikgbm8tcmVwZWF0fVxuLmhlYWRlci1waG9uZTpiZWZvcmV7YmFja2dyb3VuZDp1cmwoXCIuLi9pbWcvc3ZnL3Bob25lLnN2Z1wiKSBuby1yZXBlYXR9XG4uaGVhZGVyLWNvbnRlbnR7YmFja2dyb3VuZDp1cmwoXCIuLi9pbWcvaGVhZGVyLWJnLndlYnBcIikgbm8tcmVwZWF0IGNlbnRlciBjZW50ZXIvY292ZXJ9XG4ucHJpY2luZ3tiYWNrZ3JvdW5kOnVybChcIi4uL2ltZy9zdmcvZm9vdGVyLWJnLnN2Z1wiKSBjZW50ZXIgY2VudGVyL2NvdmVyfVxufVxuXG4gQG1lZGlhIChtYXgtd2lkdGg6IDE4MDBweCl7XG5cbkBzdXBwb3J0cyAoLXdlYmtpdC1hcHBlYXJhbmNlOm5vbmUpe1xuXG59XG5cbn1cblxuIEBtZWRpYSAobWF4LXdpZHRoOiA5OTJweCl7XG5cbkBzdXBwb3J0cyAoLXdlYmtpdC1hcHBlYXJhbmNlOm5vbmUpe1xuXG59XG5cbn1cblxuIEBtZWRpYSAobWF4LXdpZHRoOiA3NjhweCl7XG5cbkBzdXBwb3J0cyAoLXdlYmtpdC1hcHBlYXJhbmNlOm5vbmUpe1xuXG59XG5cbn1cblxuIEBtZWRpYSAobWF4LXdpZHRoOiA2NDBweCl7XG5cbkBzdXBwb3J0cyAoLXdlYmtpdC1hcHBlYXJhbmNlOm5vbmUpe1xuXG59XG5cbn1cblxuIEBtZWRpYSAobWF4LXdpZHRoOiAxNDQwcHgpe1xuXG5Ac3VwcG9ydHMgKC13ZWJraXQtYXBwZWFyYW5jZTpub25lKXtcblxufVxuXG59XG5cbiBAbWVkaWEgKG1heC13aWR0aDogMTA0MHB4KXtcblxuQHN1cHBvcnRzICgtd2Via2l0LWFwcGVhcmFuY2U6bm9uZSl7XG5cbn1cblxufVxuIiwiQGltcG9ydCAnLi9ub3JtYWxpemUvbm9ybWFsaXplLW5vLWNvbW1lbnRzLnNjc3MnO1xuQGltcG9ydCAnLi92YXJzL3ZhcnMuc2Nzcyc7XG5cbiosICo6YmVmb3JlLCAqOmFmdGVyIHtcbiAgICBib3gtc2l6aW5nOiBib3JkZXItYm94O1xuICAgIHNjcm9sbC1iZWhhdmlvcjogc21vb3RoO1xufVxuXG5ib2R5IHtcbiAgICBiYWNrZ3JvdW5kLWNvbG9yOiAkYmFja2dyb3VuZC1ncmF5O1xuICAgIGNvbG9yOiAkd2hpdGU7XG59XG5cbmEsIGE6bGluaywgYTp2aXNpdGVkIHtcbiAgICB0ZXh0LWRlY29yYXRpb246IG5vbmU7XG4gICAgY29sb3I6ICR3aGl0ZTtcbn1cblxub2wsIHVsIHtcblx0bGlzdC1zdHlsZTogbm9uZTtcbiAgICBwYWRkaW5nOiAwO1xufVxuXG4uY29udGFpbmVyIHtcbiAgICBtYXgtd2lkdGg6IDE5MjBweDtcbiAgICBtYXJnaW46IGF1dG87XG4gICAgYmFja2dyb3VuZC1jb2xvcjogJGJhY2tncm91bmQtYmxhY2s7XG59XG4uY29udGVudCB7XG4gICAgbWFyZ2luOiAwIGF1dG87XG59XG5cbmJ1dHRvbiB7XG4gICAgYm9yZGVyOiBub25lO1xuICAgIGN1cnNvcjogcG9pbnRlcjtcbn1cbi5pdGVtLWJ1dHRvbiB7XG4gICAgYmFja2dyb3VuZC1jb2xvcjogIzAwNTlhYztcbiAgICBib3JkZXItcmFkaXVzOiA4cHg7XG4gICAgY29sb3I6ICR3aGl0ZTtcbiAgICBmb250LWZhbWlseTogJ09wZW4gU2Fucyc7XG4gICAgZm9udC1zdHlsZTogbm9ybWFsO1xufVxuLmxvZ28ge1xuICAgIGZvbnQtc2l6ZTogMzZweDtcbiAgICBmb250LWZhbWlseTogXCJSaWdodGVvdXNcIiwgc2Fucy1zZXJpZjtcbiAgICBmb250LXdlaWdodDogNDAwO1xuICAgIHRleHQtdHJhbnNmb3JtOiB1cHBlcmNhc2U7XG4gICAgbGluZS1oZWlnaHQ6IDQ1cHg7XG59XG5cbi5zZWN0aW9uLXRpdGxlIHtcbiAgICBtYXgtd2lkdGg6IDU0MHB4O1xuICAgIGZvbnQtZmFtaWx5OiAnQXJzZW5hbCc7XG4gICAgZm9udC13ZWlnaHQ6IDQwMDtcbiAgICBmb250LXNpemU6IDQ4cHg7XG4gICAgbGluZS1oZWlnaHQ6IDYwcHg7XG59XG4uc2VjdGlvbi1kZXNjcmlwdGlvbiB7XG4gICAgbWF4LXdpZHRoOiA1NDBweDtcbiAgICBmb250LWZhbWlseTogJ09wZW4gU2Fucyc7XG4gICAgZm9udC13ZWlnaHQ6IDQwMDtcbiAgICBmb250LXNpemU6IDE3cHg7XG4gICAgbGluZS1oZWlnaHQ6IDE3MCU7XG4gICAgY29sb3I6ICRib2R5LXRleHQtZ3JheTtcbiAgICBwYWRkaW5nLWxlZnQ6IDEwcHg7XG59XG5cbi8vIE1lZGlhIHF1ZXJpZXNcbkBtZWRpYShtYXgtd2lkdGg6IDE4MDBweCkge1xuICAgIC5jb250ZW50IHtcbiAgICAgICAgcGFkZGluZzogMCAyMHB4O1xuICAgIH1cbn1cblxuQGltcG9ydCBcImNodW5rcy9mb250cy5zY3NzXCI7XG5AaW1wb3J0IFwiY2h1bmtzL2Zvb3Rlci5zY3NzXCI7XG5AaW1wb3J0IFwiY2h1bmtzL2hlYWRlci5zY3NzXCI7XG5AaW1wb3J0IFwiY2h1bmtzL2hpZ2hsaWdodHMuc2Nzc1wiO1xuQGltcG9ydCBcImNodW5rcy9ob3RlbHMuc2Nzc1wiO1xuQGltcG9ydCBcImNodW5rcy9wYWdpbmF0aW9uLnNjc3NcIjtcbkBpbXBvcnQgXCJjaHVua3MvcHJpY2luZy5zY3NzXCI7XG5AaW1wb3J0IFwiY2h1bmtzL3N3aXBlci5zY3NzXCI7XG5AaW1wb3J0IFwiY2h1bmtzL3Rlc3RpbW9uaWFscy5zY3NzXCI7IiwiLy8gQ29sb3JzIFxuJGJhY2tncm91bmQtZ3JheTogI0U1RTVFNTtcbiRiYWNrZ3JvdW5kLWJsYWNrOiAjMDkxMzFCO1xuJHdoaXRlOiAjRkZGRkZGO1xuJGJsYWNrLWJ0bjogIzBFMEUwRTtcbiRibGFjazogIzAwMDAwMDtcbiR5ZWxsb3c6ICNGMkM5NEM7XG4kcmF0aW5nLXllbGxvdzogI0ZGQzIyQjtcbiR0ZXh0LWdyYXk6ICNCMUI0Qjk7XG4kYm9keS10ZXh0LWdyYXk6ICM4OTkxQUZcbiIsIkBmb250LWZhY2Uge1xuICAgIGZvbnQtZmFtaWx5OiAnQXJzZW5hbCc7XG4gICAgc3JjOiB1cmwoJy4uL2ZvbnQvQXJzZW5hbC1SZWd1bGFyLmVvdCcpO1xuICAgIHNyYzogdXJsKCcuLi9mb250L0Fyc2VuYWwtUmVndWxhci5lb3Q/I2llZml4JykgZm9ybWF0KCdlbWJlZGRlZC1vcGVudHlwZScpLFxuICAgICAgICAgdXJsKFwiLi4vZm9udC9BcnNlbmFsLVJlZ3VsYXIud29mZjJcIikgZm9ybWF0KCd3b2ZmMicpLFxuICAgICAgICAgdXJsKFwiLi4vZm9udC9BcnNlbmFsLVJlZ3VsYXIud29mZlwiKSBmb3JtYXQoJ3dvZmYnKSxcbiAgICAgICAgIHVybChcIi4uL2ZvbnQvQXJzZW5hbC1SZWd1bGFyLnR0ZlwiKSBmb3JtYXQoJ3RydWV0eXBlJyk7XG4gICAgZm9udC13ZWlnaHQ6IG5vcm1hbDtcbiAgICBmb250LXN0eWxlOiBub3JtYWw7XG59XG5AZm9udC1mYWNlIHtcbiAgICBmb250LWZhbWlseTogJ0Fyc2VuYWwnO1xuICAgIHNyYzogdXJsKCcuLi9mb250L0Fyc2VuYWwtQm9sZC5lb3QnKTtcbiAgICBzcmM6IHVybCgnLi4vZm9udC9BcnNlbmFsLUJvbGQuZW90PyNpZWZpeCcpIGZvcm1hdCgnZW1iZWRkZWQtb3BlbnR5cGUnKSxcbiAgICAgICAgIHVybChcIi4uL2ZvbnQvQXJzZW5hbC1Cb2xkLndvZmYyXCIpIGZvcm1hdCgnd29mZjInKSxcbiAgICAgICAgIHVybChcIi4uL2ZvbnQvQXJzZW5hbC1Cb2xkLndvZmZcIikgZm9ybWF0KCd3b2ZmJyksXG4gICAgICAgICB1cmwoXCIuLi9mb250L0Fyc2VuYWwtQm9sZC50dGZcIikgZm9ybWF0KCd0cnVldHlwZScpO1xuICAgIGZvbnQtd2VpZ2h0OiA3MDA7XG4gICAgZm9udC1zdHlsZTogbm9ybWFsO1xufVxuQGZvbnQtZmFjZSB7XG4gICAgZm9udC1mYW1pbHk6ICdBcnNlbmFsJztcbiAgICBzcmM6IHVybCgnLi4vZm9udC9BcnNlbmFsLWl0YWxpYy5lb3QnKTtcbiAgICBzcmM6IHVybCgnLi4vZm9udC9BcnNlbmFsLWl0YWxpYy5lb3Q/I2llZml4JykgZm9ybWF0KCdlbWJlZGRlZC1vcGVudHlwZScpLFxuICAgICAgICAgdXJsKFwiLi4vZm9udC9BcnNlbmFsLWl0YWxpYy53b2ZmMlwiKSBmb3JtYXQoJ3dvZmYyJyksXG4gICAgICAgICB1cmwoXCIuLi9mb250L0Fyc2VuYWwtaXRhbGljLndvZmZcIikgZm9ybWF0KCd3b2ZmJyksXG4gICAgICAgICB1cmwoXCIuLi9mb250L0Fyc2VuYWwtaXRhbGljLnR0ZlwiKSBmb3JtYXQoJ3RydWV0eXBlJyk7XG4gICAgZm9udC13ZWlnaHQ6IG5vcm1hbDtcbiAgICBmb250LXN0eWxlOiBpdGFsaWM7XG59XG5AZm9udC1mYWNlIHtcbiAgICBmb250LWZhbWlseTogJ09wZW4gU2Fucyc7XG4gICAgc3JjOiB1cmwoJy4uL2ZvbnQvT3BlblNhbnMtUmVndWxhci5lb3QnKTtcbiAgICBzcmM6IHVybCgnLi4vZm9udC9PcGVuU2Fucy1SZWd1bGFyLmVvdD8jaWVmaXgnKSBmb3JtYXQoJ2VtYmVkZGVkLW9wZW50eXBlJyksXG4gICAgICAgICB1cmwoXCIuLi9mb250L09wZW5TYW5zLVJlZ3VsYXIud29mZjJcIikgZm9ybWF0KCd3b2ZmMicpLFxuICAgICAgICAgdXJsKFwiLi4vZm9udC9PcGVuU2Fucy1SZWd1bGFyLndvZmZcIikgZm9ybWF0KCd3b2ZmJyksXG4gICAgICAgICB1cmwoXCIuLi9mb250L09wZW5TYW5zLVJlZ3VsYXIudHRmXCIpIGZvcm1hdCgndHJ1ZXR5cGUnKTtcbiAgICBmb250LXdlaWdodDogbm9ybWFsO1xuICAgIGZvbnQtc3R5bGU6IG5vcm1hbDtcbn1cbkBmb250LWZhY2Uge1xuICAgIGZvbnQtZmFtaWx5OiAnT3BlbiBTYW5zJztcbiAgICBzcmM6IHVybCgnLi4vZm9udC9PcGVuU2Fucy1Cb2xkLmVvdCcpO1xuICAgIHNyYzogdXJsKCcuLi9mb250L09wZW5TYW5zLUJvbGQuZW90PyNpZWZpeCcpIGZvcm1hdCgnZW1iZWRkZWQtb3BlbnR5cGUnKSxcbiAgICAgICAgIHVybChcIi4uL2ZvbnQvT3BlblNhbnMtQm9sZC53b2ZmMlwiKSBmb3JtYXQoJ3dvZmYyJyksXG4gICAgICAgICB1cmwoXCIuLi9mb250L09wZW5TYW5zLUJvbGQud29mZlwiKSBmb3JtYXQoJ3dvZmYnKSxcbiAgICAgICAgIHVybChcIi4uL2ZvbnQvT3BlblNhbnMtQm9sZC50dGZcIikgZm9ybWF0KCd0cnVldHlwZScpO1xuICAgIGZvbnQtd2VpZ2h0OiBib2xkO1xuICAgIGZvbnQtc3R5bGU6IG5vcm1hbDtcbn1cbkBmb250LWZhY2Uge1xuICAgIGZvbnQtZmFtaWx5OiAnT3BlbiBTYW5zJztcbiAgICBzcmM6IHVybCgnLi4vZm9udC9PcGVuU2Fucy1TZW1pQm9sZC5lb3QnKTtcbiAgICBzcmM6IHVybCgnLi4vZm9udC9PcGVuU2Fucy1TZW1pQm9sZC5lb3Q/I2llZml4JykgZm9ybWF0KCdlbWJlZGRlZC1vcGVudHlwZScpLFxuICAgICAgICAgdXJsKFwiLi4vZm9udC9PcGVuU2Fucy1TZW1pQm9sZC53b2ZmMlwiKSBmb3JtYXQoJ3dvZmYyJyksXG4gICAgICAgICB1cmwoXCIuLi9mb250L09wZW5TYW5zLVNlbWlCb2xkLndvZmZcIikgZm9ybWF0KCd3b2ZmJyksXG4gICAgICAgICB1cmwoXCIuLi9mb250L09wZW5TYW5zLVNlbWlCb2xkLnR0ZlwiKSBmb3JtYXQoJ3RydWV0eXBlJyk7XG4gICAgZm9udC13ZWlnaHQ6IDYwMDtcbiAgICBmb250LXN0eWxlOiBub3JtYWw7XG59XG5AZm9udC1mYWNlIHtcbiAgICBmb250LWZhbWlseTogJ09wZW4gU2Fucyc7XG4gICAgc3JjOiB1cmwoJy4uL2ZvbnQvT3BlblNhbnMtSXRhbGljLmVvdCcpO1xuICAgIHNyYzogdXJsKCcuLi9mb250L09wZW5TYW5zLUl0YWxpYy5lb3Q/I2llZml4JykgZm9ybWF0KCdlbWJlZGRlZC1vcGVudHlwZScpLFxuICAgICAgICAgdXJsKFwiLi4vZm9udC9PcGVuU2Fucy1JdGFsaWMud29mZjJcIikgZm9ybWF0KCd3b2ZmMicpLFxuICAgICAgICAgdXJsKFwiLi4vZm9udC9PcGVuU2Fucy1JdGFsaWMud29mZlwiKSBmb3JtYXQoJ3dvZmYnKSxcbiAgICAgICAgIHVybChcIi4uL2ZvbnQvT3BlblNhbnMtSXRhbGljLnR0ZlwiKSBmb3JtYXQoJ3RydWV0eXBlJyk7XG4gICAgZm9udC13ZWlnaHQ6IG5vcm1hbDtcbiAgICBmb250LXN0eWxlOiBpdGFsaWM7XG59XG5AZm9udC1mYWNlIHtcbiAgICBmb250LWZhbWlseTogJ1JpZ2h0ZW91cyc7XG4gICAgc3JjOiB1cmwoJy4uL2ZvbnQvUmlnaHRlb3VzLVJlZ3VsYXIuZW90Jyk7XG4gICAgc3JjOiB1cmwoJy4uL2ZvbnQvUmlnaHRlb3VzLVJlZ3VsYXIuZW90PyNpZWZpeCcpIGZvcm1hdCgnZW1iZWRkZWQtb3BlbnR5cGUnKSxcbiAgICAgICAgIHVybChcIi4uL2ZvbnQvUmlnaHRlb3VzLVJlZ3VsYXIud29mZjJcIikgZm9ybWF0KCd3b2ZmMicpLFxuICAgICAgICAgdXJsKFwiLi4vZm9udC9SaWdodGVvdXMtUmVndWxhci53b2ZmXCIpIGZvcm1hdCgnd29mZicpLFxuICAgICAgICAgdXJsKFwiLi4vZm9udC9SaWdodGVvdXMtUmVndWxhci50dGZcIikgZm9ybWF0KCd0cnVldHlwZScpO1xuICAgIGZvbnQtd2VpZ2h0OiBub3JtYWw7XG4gICAgZm9udC1zdHlsZTogbm9ybWFsO1xufVxuQGZvbnQtZmFjZSB7XG4gICAgZm9udC1mYW1pbHk6ICdETSBTZXJpZiBEaXNwbGF5JztcbiAgICBzcmM6IHVybCgnLi4vZm9udC9ETVNlcmlmRGlzcGxheS1pdGFsaWMuZW90Jyk7XG4gICAgc3JjOiB1cmwoJy4uL2ZvbnQvRE1TZXJpZkRpc3BsYXktaXRhbGljLmVvdD8jaWVmaXgnKSBmb3JtYXQoJ2VtYmVkZGVkLW9wZW50eXBlJyksXG4gICAgICAgIHVybChcIi4uL2ZvbnQvRE1TZXJpZkRpc3BsYXktaXRhbGljLndvZmYyXCIpIGZvcm1hdCgnd29mZjInKSxcbiAgICAgICAgdXJsKFwiLi4vZm9udC9ETVNlcmlmRGlzcGxheS1pdGFsaWMud29mZlwiKSBmb3JtYXQoJ3dvZmYnKSxcbiAgICAgICAgdXJsKFwiLi4vZm9udC9ETVNlcmlmRGlzcGxheS1pdGFsaWMudHRmXCIpIGZvcm1hdCgndHJ1ZXR5cGUnKTtcbiAgICBmb250LXdlaWdodDogbm9ybWFsO1xuICAgIGZvbnQtc3R5bGU6IGl0YWxpYztcbn1cbkBmb250LWZhY2Uge1xuICAgIGZvbnQtZmFtaWx5OiAnRE0gU2VyaWYgRGlzcGxheSc7XG4gICAgc3JjOiB1cmwoJy4uL2ZvbnQvRE1TZXJpZkRpc3BsYXktUmVndWxhci5lb3QnKTtcbiAgICBzcmM6IHVybCgnLi4vZm9udC9ETVNlcmlmRGlzcGxheS1SZWd1bGFyLmVvdD8jaWVmaXgnKSBmb3JtYXQoJ2VtYmVkZGVkLW9wZW50eXBlJyksXG4gICAgICAgIHVybChcIi4uL2ZvbnQvRE1TZXJpZkRpc3BsYXktUmVndWxhci53b2ZmMlwiKSBmb3JtYXQoJ3dvZmYyJyksXG4gICAgICAgIHVybChcIi4uL2ZvbnQvRE1TZXJpZkRpc3BsYXktUmVndWxhci53b2ZmXCIpIGZvcm1hdCgnd29mZicpLFxuICAgICAgICB1cmwoXCIuLi9mb250L0RNU2VyaWZEaXNwbGF5LVJlZ3VsYXIudHRmXCIpIGZvcm1hdCgndHJ1ZXR5cGUnKTtcbiAgICBmb250LXdlaWdodDogbm9ybWFsO1xuICAgIGZvbnQtc3R5bGU6IG5vcm1hbDtcbn1cbkBmb250LWZhY2Uge1xuICAgIGZvbnQtZmFtaWx5OiAnUm9ib3RvJztcbiAgICBzcmM6IHVybCgnLi4vZm9udC9Sb2JvdG8tUmVndWxhci5lb3QnKTtcbiAgICBzcmM6IHVybCgnLi4vZm9udC9Sb2JvdG8tUmVndWxhci5lb3Q/I2llZml4JykgZm9ybWF0KCdlbWJlZGRlZC1vcGVudHlwZScpLFxuICAgICAgICB1cmwoXCIuLi9mb250L1JvYm90by1SZWd1bGFyLndvZmYyXCIpIGZvcm1hdCgnd29mZjInKSxcbiAgICAgICAgdXJsKFwiLi4vZm9udC9Sb2JvdG8tUmVndWxhci53b2ZmXCIpIGZvcm1hdCgnd29mZicpLFxuICAgICAgICB1cmwoXCIuLi9mb250L1JvYm90by1SZWd1bGFyLnR0ZlwiKSBmb3JtYXQoJ3RydWV0eXBlJyk7XG4gICAgZm9udC13ZWlnaHQ6IG5vcm1hbDtcbiAgICBmb250LXN0eWxlOiBub3JtYWw7XG59XG5AZm9udC1mYWNlIHtcbiAgICBmb250LWZhbWlseTogJ1JvYm90byBCb2xkJztcbiAgICBzcmM6IHVybCgnLi4vZm9udC9Sb2JvdG8tQm9sZC5lb3QnKTtcbiAgICBzcmM6IHVybCgnLi4vZm9udC9Sb2JvdG8tQm9sZC5lb3Q/I2llZml4JykgZm9ybWF0KCdlbWJlZGRlZC1vcGVudHlwZScpLFxuICAgICAgICB1cmwoXCIuLi9mb250L1JvYm90by1Cb2xkLndvZmYyXCIpIGZvcm1hdCgnd29mZjInKSxcbiAgICAgICAgdXJsKFwiLi4vZm9udC9Sb2JvdG8tQm9sZC53b2ZmXCIpIGZvcm1hdCgnd29mZicpLFxuICAgICAgICB1cmwoXCIuLi9mb250L1JvYm90by1Cb2xkLnR0ZlwiKSBmb3JtYXQoJ3RydWV0eXBlJyk7XG4gICAgZm9udC13ZWlnaHQ6IGJvbGQ7XG4gICAgZm9udC1zdHlsZTogbm9ybWFsO1xufVxuXG5cbiIsIi5mb290ZXIge1xyXG4gICAgbWF4LXdpZHRoOiAxNDAwcHg7XHJcbiAgICBib3JkZXItdG9wOiAxcHggc29saWQgcmdiYSgwLCA4OSwgMTcyLCAwLjQpO1xyXG4gICAgcGFkZGluZy10b3A6IDQwcHg7XHJcbiAgICBkaXNwbGF5OiBmbGV4O1xyXG4gICAganVzdGlmeS1jb250ZW50OiBzcGFjZS1iZXR3ZWVuO1xyXG4gICAgZm9udC1mYW1pbHk6ICdPcGVuIFNhbnMnO1xyXG4gICAgZm9udC1zdHlsZTogbm9ybWFsO1xyXG4gICAgZm9udC13ZWlnaHQ6IDQwMDtcclxuICAgIGZvbnQtc2l6ZTogMTdweDtcclxuICAgIGxpbmUtaGVpZ2h0OiAyMTQlO1xyXG4gICAgY29sb3I6ICRib2R5LXRleHQtZ3JheTtcclxuICAgIGdhcDogNXB4O1xyXG59IiwiXG4vLyBDb250YWN0c1xuLmhlYWRlci10b3Age1xuICAgIGRpc3BsYXk6IGZsZXg7XG4gICAganVzdGlmeS1jb250ZW50OiBzcGFjZS1iZXR3ZWVuO1xuICAgIGhlaWdodDogNjhweDtcbiAgICBtYXgtd2lkdGg6IDE3MTdweDtcbiAgICBhbGlnbi1pdGVtczogY2VudGVyO1xufVxuLmhlYWRlciB7XG4gICAgJi1jb250YWN0c3tcbiAgICAgICAgZGlzcGxheTogZmxleDtcbiAgICAgICAgZm9udC1mYW1pbHk6ICdSb2JvdG8nO1xuICAgICAgICBmb250LXN0eWxlOiBub3JtYWw7XG4gICAgICAgIGZvbnQtd2VpZ2h0OiA0MDA7XG4gICAgICAgIGZvbnQtc2l6ZTogMThweDtcbiAgICAgICAgbGluZS1oZWlnaHQ6IDI3cHg7XG4gICAgICAgIHRleHQtZGVjb3JhdGlvbi1saW5lOiB1bmRlcmxpbmU7XG4gICAgfVxuICAgICYtZW1haWwge1xuICAgICAgICBkaXNwbGF5OiBmbGV4O1xuICAgICAgICBhbGlnbi1pdGVtczogY2VudGVyO1xuICAgIH1cbiAgICAmLWVtYWlsOmJlZm9yZSB7XG4gICAgICAgIGNvbnRlbnQ6IFwiXCI7XG4gICAgICAgIGJhY2tncm91bmQtaW1hZ2U6IHVybChcIi4uL2ltZy9zdmcvZW1haWwuc3ZnXCIpIG5vLXJlcGVhdDtcbiAgICAgICAgd2lkdGg6IDI0cHg7XG4gICAgICAgIGhlaWdodDogMjRweDtcbiAgICAgICAgbWFyZ2luLXJpZ2h0OiAxMnB4O1xuICAgIH1cbiAgICAmLXBob25lIHtcbiAgICAgICAgZGlzcGxheTogZmxleDtcbiAgICAgICAgcGFkZGluZy1sZWZ0OiAyNHB4O1xuICAgICAgICBhbGlnbi1pdGVtczogY2VudGVyO1xuICAgIH1cbiAgICAmLXBob25lOmJlZm9yZSB7XG4gICAgICAgIGNvbnRlbnQ6IFwiXCI7XG4gICAgICAgIGJhY2tncm91bmQtaW1hZ2U6IHVybChcIi4uL2ltZy9zdmcvcGhvbmUuc3ZnXCIpIG5vLXJlcGVhdDtcbiAgICAgICAgd2lkdGg6IDI0cHg7XG4gICAgICAgIGhlaWdodDogMjRweDtcbiAgICAgICAgbWFyZ2luLXJpZ2h0OiAxMnB4O1xuICAgIH1cbn1cbi5zb2NpYWwge1xuICAgIGRpc3BsYXk6IGZsZXg7XG4gICAgYWxpZ24taXRlbXM6IGNlbnRlcjtcbiAgICB0ZXh0LWFsaWduOiBjZW50ZXI7XG4gICAgd2lkdGg6IDI2N3B4O1xuICAgIGp1c3RpZnktY29udGVudDogc3BhY2UtYmV0d2VlbjtcbiAgICAmX19saW5rID4gc3ZnIHtcbiAgICAgICAgcGFkZGluZzogMCAxMHB4O1xuICAgICAgICB3aWR0aDogMTAwJTtcbiAgICAgICAgZmlsbDogI2ExYTFhMTtcbiAgICAgICAgdHJhbnNpdGlvbjogYWxsIC4zcyBlYXNlO1xuICAgICAgICAmOmhvdmVyIHtcbiAgICAgICAgICAgIGZpbGw6ICR3aGl0ZTtcbiAgICAgICAgfVxuICAgIH1cbiAgICAmX19saW5rIHtcbiAgICAgICAgLXdlYmtpdC10YXAtaGlnaGxpZ2h0LWNvbG9yOiB0cmFuc3BhcmVudDtcbiAgICB9XG59XG5cbi8vIE5hdmlnYXRpb25cbi5oZWFkZXItY29udGVudCB7XG4gICAgYmFja2dyb3VuZC1yZXBlYXQ6IG5vLXJlcGVhdDtcbiAgICBiYWNrZ3JvdW5kLXBvc2l0aW9uOiBjZW50ZXIgY2VudGVyO1xuICAgIGJhY2tncm91bmQtaW1hZ2U6IHVybChcIi4uL2ltZy9oZWFkZXItYmcuanBnXCIpO1xuICAgIGJhY2tncm91bmQtc2l6ZTogY292ZXI7XG4gICAgcG9zaXRpb246IHJlbGF0aXZlO1xufVxuLmhlYWRlciB7XG4gICAgJi1uYXZpZ2F0aW9uIHtcbiAgICAgICAgZGlzcGxheTogZmxleDtcbiAgICAgICAganVzdGlmeS1jb250ZW50OiBzcGFjZS1iZXR3ZWVuO1xuICAgICAgICBoZWlnaHQ6IDEwMHB4O1xuICAgICAgICBhbGlnbi1pdGVtczogY2VudGVyO1xuICAgICAgICBtYXgtd2lkdGg6IDE3MTdweDtcbiAgICAgICAgbWFyZ2luOiAwIGF1dG8gMTIzcHggYXV0bztcbiAgICAgICAgJl9fZWxlbWVudCB7XG4gICAgICAgICAgICBkaXNwbGF5OiBmbGV4O1xuICAgICAgICAgICAgYWxpZ24taXRlbXM6IGNlbnRlcjtcbiAgICAgICAgICAgIGp1c3RpZnktY29udGVudDogc3BhY2UtYmV0d2VlbjtcbiAgICAgICAgICAgIGNvbHVtbi1nYXA6IDUwcHg7XG4gICAgICAgIH1cbiAgICAgICAgJl9fbGluayB7XG4gICAgICAgICAgICB0ZXh0LXRyYW5zZm9ybTogdXBwZXJjYXNlO1xuICAgICAgICAgICAgZm9udC1zaXplOiAxN3B4O1xuICAgICAgICAgICAgZm9udC1mYW1pbHk6IFwiT3BlbiBTYW5zXCIsIHNhbnMtc2VyaWY7XG4gICAgICAgICAgICBmb250LXdlaWdodDogYm9sZDtcbiAgICAgICAgICAgIGhlaWdodDogMjRweDtcbiAgICAgICAgICAgIHBhZGRpbmc6IDAgNXB4O1xuICAgICAgICAgICAgYm9yZGVyLXJhZGl1czogNXB4O1xuICAgICAgICAgICAgdHJhbnNpdGlvbjogLjNzIGVhc2U7XG4gICAgICAgICAgICAmLmFjdGl2ZSB7XG4gICAgICAgICAgICAgICAgZGlzcGxheTogYmxvY2s7XG4gICAgICAgICAgICB9XG4gICAgICAgICAgICAmOmhvdmVyIHtcbiAgICAgICAgICAgICAgICBiYWNrZ3JvdW5kOiAjMDA1OUFDO1xuICAgICAgICAgICAgfVxuICAgICAgICAgICAgJjpmb2N1cyB7XG4gICAgICAgICAgICAgICAgYmFja2dyb3VuZDogIzE5ODJlNDtcbiAgICAgICAgICAgIH1cbiAgICAgICAgfVxuICAgICAgICAmX19pY29uIHtcbiAgICAgICAgICAgIGN1cnNvcjogcG9pbnRlcjtcbiAgICAgICAgICAgIGRpc3BsYXk6IG5vbmU7XG4gICAgICAgICAgICAmLWNsb3NlIHtcbiAgICAgICAgICAgICAgICBkaXNwbGF5OiBub25lO1xuICAgICAgICAgICAgfVxuICAgICAgICB9XG4gICAgICAgICZfX2ljb24gcGljdHVyZSB7XG4gICAgICAgICAgICBkaXNwbGF5OiBmbGV4O1xuICAgICAgICB9XG4gICAgfVxufVxuXG4vLyBBcHBcbi5oZWFkZXItYXBwIHtcbiAgICBtYXJnaW4tYm90dG9tOiAxMzBweDtcbiAgICB0ZXh0LWFsaWduOiBjZW50ZXI7XG4gICAgcGFkZGluZy1ib3R0b206IDc2cHg7XG4gICAgbWFyZ2luOiAwIGF1dG87XG4gICAgJl9fc3VidGl0bGUge1xuICAgICAgICB0ZXh0LXRyYW5zZm9ybTogdXBwZXJjYXNlO1xuICAgICAgICBmb250LWZhbWlseTogJ0Fyc2VuYWwnO1xuICAgICAgICBmb250LXNpemU6IDM2cHg7XG4gICAgICAgIGxpbmUtaGVpZ2h0OiA0NXB4O1xuICAgICAgICBsZXR0ZXItc3BhY2luZzogMC4yZW07XG4gICAgICAgIG1hcmdpbjogMCAwIC0xNXB4IDA7XG4gICAgfVxuICAgICZfX3RpdGxlIHtcbiAgICAgICAgZm9udC1mYW1pbHk6ICdBcnNlbmFsJztcbiAgICAgICAgZm9udC1zaXplOiAxNDRweDtcbiAgICAgICAgdGV4dC10cmFuc2Zvcm06IHVwcGVyY2FzZTtcbiAgICAgICAgbWFyZ2luOiAwO1xuICAgICAgICBtYXJnaW4tYm90dG9tOiAxOHB4O1xuICAgIH1cbn1cbi5oZWFkZXItc2VhcmNoIHtcbiAgICAmLWZvcm0ge1xuICAgICAgICAvLyBwb3NpdGlvbjogcmVsYXRpdmVcbiAgICAgICAgZGlzcGxheTogZmxleDtcbiAgICAgICAganVzdGlmeS1jb250ZW50OiBjZW50ZXI7XG4gICAgfVxuICAgICZfX3RpdGxlIHtcbiAgICAgICAgZm9udC1mYW1pbHk6ICdPcGVuIFNhbnMnO1xuICAgICAgICBmb250LXN0eWxlOiBpdGFsaWM7XG4gICAgICAgIGZvbnQtc2l6ZTogMThweDtcbiAgICAgICAgbGV0dGVyLXNwYWNpbmc6IDAuMWVtO1xuICAgIH1cbiAgICAmX19pbnB1dCB7XG4gICAgICAgIHdpZHRoOiA0NzZweDtcbiAgICAgICAgaGVpZ2h0OiA3NnB4O1xuICAgICAgICBib3JkZXI6IG5vbmU7XG4gICAgICAgIGJvcmRlci1yYWRpdXM6IDEwcHggMCAwIDEwcHg7XG4gICAgICAgIGZvbnQtZmFtaWx5OiAnT3BlbiBTYW5zJztcbiAgICAgICAgZm9udC1zaXplOiAxOXB4O1xuICAgICAgICBwYWRkaW5nLWxlZnQ6IDM0cHg7XG4gICAgICAgIG91dGxpbmU6IG5vbmU7XG4gICAgICAgIGxlZnQ6IDA7XG4gICAgfVxuICAgICZfX2J1dHRvbiB7XG4gICAgICAgIGJhY2tncm91bmQtY29sb3I6ICRibGFjay1idG47XG4gICAgICAgIG1pbi13aWR0aDogOTdweDtcbiAgICAgICAgaGVpZ2h0OiA3NnB4O1xuICAgICAgICBib3JkZXItcmFkaXVzOiAwIDEwcHggMTBweCAwO1xuICAgICAgICAmOmFmdGVyIHtcbiAgICAgICAgICAgIGNvbnRlbnQ6IHVybCguLi9pbWcvc3ZnL3NlYXJjaC5zdmcpO1xuICAgICAgICB9XG4gICAgfVxufVxuXG5cbi8vIEZlYXR1cmVzXG4uaGVhZGVyLWZlYXR1cmVzIHtcbiAgICBtYXgtd2lkdGg6IDEzNDhweDtcbiAgICBtYXJnaW46IDAgYXV0byAyNzVweDtcbiAgICBkaXNwbGF5OiBncmlkO1xuICAgIGdyaWQtdGVtcGxhdGUtY29sdW1uczogcmVwZWF0KDQsIDI1MHB4KTtcbiAgICBqdXN0aWZ5LWNvbnRlbnQ6IHNwYWNlLWJldHdlZW47XG59XG4uaGVhZGVyLWZlYXR1cmUge1xuICAgICZfX2ltZy13cmFwcGVyIHtcbiAgICAgICAgbWluLWhlaWdodDogNzBweDtcbiAgICAgICAgb3ZlcmZsb3c6IGhpZGRlbjtcbiAgICAgICAgcG9zaXRpb246IHJlbGF0aXZlO1xuICAgIH1cbiAgICAmX19pbWcge1xuICAgICAgICBwb3NpdGlvbjogYWJzb2x1dGU7XG4gICAgICAgIGJvdHRvbTogMDtcbiAgICB9XG4gICAgJl9fdGl0bGUge1xuICAgIGZvbnQtZmFtaWx5OiAnQXJzZW5hbCc7XG4gICAgZm9udC1zdHlsZTogbm9ybWFsO1xuICAgIGZvbnQtd2VpZ2h0OiA3MDA7XG4gICAgZm9udC1zaXplOiAyMnB4O1xuICAgIGxpbmUtaGVpZ2h0OiAxNzAlO1xuICAgIG1hcmdpbi10b3A6IDIwcHg7XG4gICAgbWFyZ2luLWJvdHRvbTogNHB4O1xuICAgIH1cbiAgICAmX19kZXNjcmlwdGlvbiB7XG4gICAgICAgIGZvbnQtZmFtaWx5OiAnT3BlbiBTYW5zJztcbiAgICAgICAgZm9udC1zdHlsZTogbm9ybWFsO1xuICAgICAgICBmb250LXNpemU6IDE2cHg7XG4gICAgICAgIGxpbmUtaGVpZ2h0OiAxNzAlO1xuICAgIH1cbn1cblxuLy8gQWJvdXRcbi5oZWFkZXItYWJvdXQge1xuICAgIHBhZGRpbmctYm90dG9tOiAxOTBweDtcbiAgICBtYXgtd2lkdGg6IDEyMzBweDtcbiAgICBkaXNwbGF5OiBmbGV4O1xuICAgIGp1c3RpZnktY29udGVudDogc3BhY2UtYmV0d2Vlbjtcbn1cblxuLy8gQWRhcHRpdmVcblxuQG1lZGlhIChtYXgtd2lkdGg6IDk5MnB4KSB7XG4gICAgLmhlYWRlci10b3Age1xuICAgICAgICBmbGV4LWRpcmVjdGlvbjogY29sdW1uO1xuICAgICAgICBqdXN0aWZ5LWNvbnRlbnQ6IHNwYWNlLWV2ZW5seTtcbiAgICAgICAgaGVpZ2h0OiA4OHB4O1xuICAgIH1cbiAgICAuaGVhZGVyLW5hdmlnYXRpb24ge1xuICAgICAgICBtYXgtd2lkdGg6IG5vbmU7XG4gICAgfVxuICAgIC5oZWFkZXItbmF2aWdhdGlvbl9fZWxlbWVudCB7XG4gICAgICAgIGNvbHVtbi1nYXA6IDMwcHg7XG4gICAgfVxuICAgIC8vIEhlYWRlciBhcHBcbiAgICAuaGVhZGVyLWZlYXR1cmVzIHtcbiAgICAgICAgZ3JpZC10ZW1wbGF0ZS1jb2x1bW5zOiByZXBlYXQoMiwgMjUwcHgpO1xuICAgICAgICBqdXN0aWZ5LWNvbnRlbnQ6IHNwYWNlLWV2ZW5seTtcbiAgICB9XG5cbiAgICAvLyBIZWFkZXIgYWJvdXRcbiAgICAuaGVhZGVyLWFib3V0IHtcbiAgICAgICAgZmxleC1kaXJlY3Rpb246IGNvbHVtbjtcbiAgICAgICAgYWxpZ24taXRlbXM6IGNlbnRlcjtcbiAgICAgICAgdGV4dC1hbGlnbjogY2VudGVyO1xuICAgIH1cbiAgICAuc2VjdGlvbi1kZXNjcmlwdGlvbntcbiAgICAgICAgcGFkZGluZy1sZWZ0OiAwO1xuICAgIH1cbiAgICAuc2VjdGlvbi10aXRsZSB7XG4gICAgICAgIGZvbnQtc2l6ZTogMzJweDtcbiAgICB9XG59XG5cblxuQG1lZGlhIChtYXgtd2lkdGg6IDc2OHB4KXtcbiAgICAuaGVhZGVyLWNvbnRlbnQge1xuICAgICAgICBwYWRkaW5nOiAwO1xuICAgIH1cbiAgICAuaGVhZGVyLW5hdmlnYXRpb24ge1xuICAgICAgICBwb3NpdGlvbjogcmVsYXRpdmU7XG4gICAgICAgICZfX2VsZW1lbnQge1xuICAgICAgICAgICAgcG9zaXRpb246IGFic29sdXRlO1xuICAgICAgICAgICAgYmFja2dyb3VuZDogIzA5MTMxQjtcbiAgICAgICAgICAgIGZsZXgtZGlyZWN0aW9uOiBjb2x1bW47XG4gICAgICAgICAgICB3aWR0aDogMTAwJTtcbiAgICAgICAgICAgIHRvcDogLTFweDtcbiAgICAgICAgICAgIHBhZGRpbmc6IDUwcHggMCA1MHB4IDA7XG4gICAgICAgICAgICByb3ctZ2FwOiAzMHB4O1xuICAgICAgICAgICAgdHJhbnNmb3JtOiB0cmFuc2xhdGVYKC0xMDAlKTtcbiAgICAgICAgICAgIHRyYW5zaXRpb246IGFsbCAuNnMgZWFzZS1pbi1vdXQ7XG4gICAgICAgICAgICAmLmFjdGl2ZSB7XG4gICAgICAgICAgICAgICAgdHJhbnNmb3JtOiB0cmFuc2xhdGVYKDApO1xuICAgICAgICAgICAgICAgIHRyYW5zaXRpb246IGFsbCAuNnMgZWFzZS1pbi1vdXQ7XG4gICAgICAgICAgICB9XG4gICAgICAgIH1cbiAgICB9XG4gICAgLmhlYWRlci1uYXZpZ2F0aW9uX19pY29uIHtcbiAgICAgICAgZGlzcGxheTogYmxvY2s7XG4gICAgICAgIC13ZWJraXQtdGFwLWhpZ2hsaWdodC1jb2xvcjogcmdiYSgyNTUsIDI1NSwgMjU1LCAwKTtcbiAgICAgICAgLXdlYmtpdC10YXAtaGlnaGxpZ2h0LWNvbG9yOiB0cmFuc3BhcmVudDtcbiAgICAgICAgJi1jbG9zZSB7XG4gICAgICAgICAgICBwb3NpdGlvbjogYWJzb2x1dGU7XG4gICAgICAgICAgICByaWdodDogMjBweDtcbiAgICAgICAgICAgIGRpc3BsYXk6IGJsb2NrO1xuICAgICAgICB9XG4gICAgfVxuICAgIC5oZWFkZXItbmF2aWdhdGlvbl9fbG9nbywgLmhlYWRlci1uYXZpZ2F0aW9uX19pY29uIHtcbiAgICAgICAgcGFkZGluZzogMCAyMHB4O1xuICAgIH1cblxuICAgIC8vIEhlYWRlciBBcHBcbiAgICAuaGVhZGVyLWFwcCB7XG4gICAgICAgICZfX3RpdGxlIHtcbiAgICAgICAgICAgIGZvbnQtc2l6ZTogNjhweDtcbiAgICAgICAgICAgIGxpbmUtaGVpZ2h0OiA3NXB4O1xuICAgICAgICAgICAgbWFyZ2luLWJvdHRvbTogMzBweDtcbiAgICAgICAgfVxuICAgICAgICAmX19zdWJ0aXRsZSB7XG4gICAgICAgICAgICBmb250LXNpemU6IDE3cHg7XG4gICAgICAgIH1cbiAgICB9XG4gICAgLmhlYWRlci1zZWFyY2gge1xuICAgICAgICAmX19pbnB1dCB7XG4gICAgICAgICAgICBmb250LXNpemU6IDE3cHg7XG4gICAgICAgICAgICBwYWRkaW5nLWxlZnQ6IDA7XG4gICAgICAgICAgICBoZWlnaHQ6IDYwcHg7XG4gICAgICAgICAgICB0ZXh0LWFsaWduOiBjZW50ZXI7XG4gICAgICAgICAgICBib3JkZXItcmFkaXVzOiA4cHggMCAwIDhweDtcbiAgICAgICAgfVxuICAgICAgICAmX190aXRsZSB7XG4gICAgICAgICAgICBmb250LXNpemU6IDE3cHg7XG4gICAgICAgIH1cbiAgICB9XG4gICAgLmhlYWRlci1zZWFyY2hfX2J1dHRvbiB7XG4gICAgICAgIGhlaWdodDogNjBweDtcbiAgICAgICAgbWluLXdpZHRoOiA2N3B4O1xuICAgICAgICBib3JkZXItcmFkaXVzOiAwIDhweCA4cHggMDtcbiAgICB9XG59XG5cblxuQG1lZGlhIChtYXgtd2lkdGg6IDY0MHB4KSB7XG4gICAgLmhlYWRlci1jb250YWN0cyB7XG4gICAgICAgIGRpc3BsYXk6IGZsZXg7XG4gICAgICAgIGZsZXgtZGlyZWN0aW9uOiBjb2x1bW47XG4gICAgfVxuICAgIC5oZWFkZXItdG9weyBcbiAgICAgICAgaGVpZ2h0OiAxMDhweDtcbiAgICAgICAganVzdGlmeS1jb250ZW50OiBjZW50ZXI7XG4gICAgfVxuICAgIC5oZWFkZXItcGhvbmUge1xuICAgICAgICBtYXJnaW4tYm90dG9tOiAxNXB4O1xuICAgICAgICBwYWRkaW5nLWxlZnQ6IDA7XG4gICAgfVxuICAgIFxuICAgIC8vIEhlYWRlciBhcHBcbiAgICAuaGVhZGVyLWZlYXR1cmVzIHtcbiAgICAgICAgZ3JpZC10ZW1wbGF0ZS1jb2x1bW5zOiByZXBlYXQoMSwgMjUwcHgpO1xuICAgICAgICBqdXN0aWZ5LWNvbnRlbnQ6IHNwYWNlLWV2ZW5seTtcbiAgICB9XG4gICAgLmhlYWRlci1mZWF0dXJlIHtcbiAgICAgICAgdGV4dC1hbGlnbjogY2VudGVyO1xuICAgICAgICBtYXJnaW4tYm90dG9tOiA1MHB4O1xuICAgICAgICAmX19kZXNjcmlwdGlvbiB7XG4gICAgICAgICAgICBtYXJnaW4tdG9wOiAwO1xuICAgICAgICB9XG4gICAgICAgICZfX2ltZyB7XG4gICAgICAgICAgICBwb3NpdGlvbjogaW5pdGlhbDtcbiAgICAgICAgfVxuICAgICAgICAmX190aXRsZSB7XG4gICAgICAgICAgICBtYXJnaW4tdG9wOiAwO1xuICAgICAgICB9XG4gICAgfVxufSIsIi5oaWdobGlnaHRzIHtcclxuICAgIG1heC13aWR0aDogMTI2MHB4O1xyXG4gICAgbWFyZ2luLWJvdHRvbTogMTYwcHg7XHJcbiAgICAmLWNvbnRlbnQge1xyXG4gICAgICAgIGRpc3BsYXk6IGdyaWQ7XHJcbiAgICAgICAgZ3JpZC10ZW1wbGF0ZS1jb2x1bW5zOiByZXBlYXQoMiwgMWZyKTtcclxuICAgICAgICBnYXA6IDE2MHB4IDcwcHg7XHJcbiAgICB9XHJcbn1cclxuXHJcbkBtZWRpYSAobWF4LXdpZHRoOiAxNDQwcHgpIHtcclxuICAgIC5oaWdobGlnaHRzLWNvbnRlbnQtbWVkaWEtaW1nIGltZyB7XHJcbiAgICAgICAgbWF4LXdpZHRoOiA0NTBweDtcclxuICAgIH1cclxuICAgIC5oaWdobGlnaHRzLWNvbnRlbnQge1xyXG4gICAgICAgIGNvbHVtbi1nYXA6IDQwcHg7XHJcbiAgICB9XHJcbn1cclxuQG1lZGlhIChtYXgtd2lkdGg6IDEwNDBweCkge1xyXG4gICAgLmhpZ2hsaWdodHMtY29udGVudCB7XHJcbiAgICAgICAgZ3JpZC10ZW1wbGF0ZS1jb2x1bW5zOiAxZnI7XHJcbiAgICAgICAganVzdGlmeS1pdGVtczogY2VudGVyO1xyXG4gICAgICAgIHJvdy1nYXA6IDA7XHJcbiAgICAgICAgJi1tZWRpYS1pbWdfdG9wIHtcclxuICAgICAgICAgICAgZ3JpZC1yb3ctc3RhcnQ6IDM7XHJcbiAgICAgICAgICAgIG1hcmdpbi10b3A6IDE1MHB4O1xyXG4gICAgICAgIH1cclxuICAgIH1cclxufVxyXG5AbWVkaWEgKG1heC13aWR0aDogNjQwcHgpIHtcclxuICAgIC5oaWdobGlnaHRzLWNvbnRlbnQtbWVkaWEtaW1nIGltZyB7XHJcbiAgICAgICAgbWF4LXdpZHRoOiAzMDBweDtcclxuICAgIH1cclxufSIsIlxyXG4vLyBUaXRsZVxyXG4uaG90ZWxzIHtcclxuICAgIG1heC13aWR0aDogMTQwMHB4O1xyXG4gICAgbWFyZ2luLWJvdHRvbTogMjI5cHg7XHJcbiAgICAmLWNvdW50cmllcyB7XHJcbiAgICAgICAgZGlzcGxheTogZmxleDtcclxuICAgICAgICB0ZXh0LWFsaWduOiBjZW50ZXI7XHJcbiAgICAgICAganVzdGlmeS1jb250ZW50OiBjZW50ZXI7XHJcbiAgICAgICAgY29sdW1uLWdhcDogNDBweDtcclxuICAgICAgICBtYXJnaW4tYm90dG9tOiA2MHB4O1xyXG4gICAgfVxyXG4gICAgJi1jb3VudHJpZXMtbmFtZSB7XHJcbiAgICAgICAgZm9udC1mYW1pbHk6ICdPcGVuIFNhbnMnO1xyXG4gICAgICAgIGZvbnQtd2VpZ2h0OiA3MDA7XHJcbiAgICAgICAgZm9udC1zaXplOiAxNHB4O1xyXG4gICAgICAgIGxpbmUtaGVpZ2h0OiAxOXB4O1xyXG4gICAgICAgIHBhZGRpbmc6IDVweCAxM3B4O1xyXG4gICAgICAgIGN1cnNvcjogcG9pbnRlcjtcclxuICAgIH1cclxuICAgICYtY291bnRyaWVzLW5hbWUuYWN0aXZlIHtcclxuICAgICAgICBjb2xvcjogJGJsYWNrO1xyXG4gICAgICAgIGJhY2tncm91bmQ6ICR5ZWxsb3c7XHJcbiAgICAgICAgYm9yZGVyLXJhZGl1czogOHB4O1xyXG4gICAgfVxyXG4gICAgJi1pdGVtcy1jb250ZW50IHtcclxuICAgICAgICBkaXNwbGF5OiBub25lO1xyXG4gICAgICAgICYuYWN0aXZlIHtcclxuICAgICAgICAgICAgZGlzcGxheTogYmxvY2s7XHJcbiAgICAgICAgfVxyXG4gICAgfVxyXG59XHJcblxyXG4vLyBJdGVtc1xyXG4vLyBIb3RlbHMgcmF0aW5nIGZyb20gMCB0byA1IHN0YXIgc3R5bGVzXHJcbi55ZWxsb3ctc3RhciB7XHJcbiAgICBmaWxsOiAkcmF0aW5nLXllbGxvdztcclxufVxyXG4uaG90ZWxzLWl0ZW1zIHtcclxuICAgIGRpc3BsYXk6IGdyaWQ7XHJcbiAgICBncmlkLXRlbXBsYXRlLWNvbHVtbnM6IHJlcGVhdCg0LCAxZnIpO1xyXG4gICAgY29sdW1uLWdhcDogNDBweDtcclxuICAgIG1hcmdpbi1ib3R0b206IDgwcHg7XHJcbn1cclxuLmhvdGVscy1pdGVtIHtcclxuICAgIGJvcmRlci1yYWRpdXM6IDhweDtcclxuICAgIGJhY2tncm91bmQtY29sb3I6ICRibGFjaztcclxuICAgICZfX2ltZy13cmFwcGVyIHtcclxuICAgICAgICBwb3NpdGlvbjogcmVsYXRpdmU7XHJcbiAgICAgICAgbWFyZ2luLWJvdHRvbTogMzhweDtcclxuICAgIH1cclxuICAgICZfX2ltZyB7XHJcbiAgICAgICAgYm9yZGVyLXJhZGl1czogOHB4IDhweCAwIDA7XHJcbiAgICAgICAgd2lkdGg6IDEwMCU7XHJcbiAgICAgICAgaGVpZ2h0OiAyNTZweDtcclxuICAgICAgICBvYmplY3QtZml0OiBjb3ZlcjtcclxuICAgIH1cclxuICAgICZfX3RpdGxlIHtcclxuICAgICAgICBmb250LWZhbWlseTogJ0Fyc2VuYWwnO1xyXG4gICAgICAgIGZvbnQtc3R5bGU6IG5vcm1hbDtcclxuICAgICAgICBmb250LXdlaWdodDogNzAwO1xyXG4gICAgICAgIGZvbnQtc2l6ZTogMjRweDtcclxuICAgICAgICBsaW5lLWhlaWdodDogMjVweDtcclxuICAgICAgICBsZXR0ZXItc3BhY2luZzogMC4wMWVtO1xyXG4gICAgICAgIHRleHQtYWxpZ246IGNlbnRlcjtcclxuICAgICAgICBtYXJnaW46IDA7XHJcbiAgICAgICAgbWFyZ2luLWJvdHRvbTogMThweDtcclxuICAgIH1cclxuICAgICZfX2hlYXJ0IHtcclxuICAgICAgICBwb3NpdGlvbjogYWJzb2x1dGU7XHJcbiAgICAgICAgdG9wOiAyNHB4O1xyXG4gICAgICAgIHJpZ2h0OiAyNHB4O1xyXG4gICAgICAgIGN1cnNvcjogcG9pbnRlcjtcclxuICAgICAgICAmLXBhdGguZmF2b3JpdGVkIHtcclxuICAgICAgICAgICAgZmlsbDogJHJhdGluZy15ZWxsb3c7XHJcbiAgICAgICAgfVxyXG4gICAgfVxyXG4gICAgJl9fcmF0aW5nIHtcclxuICAgICAgICBwYWRkaW5nLWxlZnQ6IDI0cHg7XHJcbiAgICAgICAgbWFyZ2luLWJvdHRvbTogMzNweDtcclxuICAgIH1cclxuICAgICZfX3N0YXI6bm90KDpsYXN0LWNoaWxkKSB7XHJcbiAgICAgICAgbWFyZ2luLXJpZ2h0OiA4cHg7XHJcbiAgICB9XHJcbiAgICAmX19wcmljZS13cmFwcGVyIHtcclxuICAgICAgICBwYWRkaW5nLXJpZ2h0OiAyMnB4O1xyXG4gICAgICAgIHRleHQtYWxpZ246IHJpZ2h0O1xyXG4gICAgICAgIGZvbnQtZmFtaWx5OiAnRE0gU2VyaWYgRGlzcGxheSc7XHJcbiAgICAgICAgZm9udC13ZWlnaHQ6IDQwMDtcclxuICAgICAgICBsZXR0ZXItc3BhY2luZzogMC4wMmVtO1xyXG4gICAgICAgIGxpbmUtaGVpZ2h0OiAyNXB4O1xyXG4gICAgICAgIG1hcmdpbi1ib3R0b206IDIxcHg7XHJcbiAgICB9XHJcbiAgICAmX19wcmljZV9vbGQge1xyXG4gICAgICAgIGZvbnQtc3R5bGU6IGl0YWxpYztcclxuICAgICAgICBmb250LXNpemU6IDIycHg7XHJcbiAgICAgICAgdGV4dC1kZWNvcmF0aW9uLWxpbmU6IGxpbmUtdGhyb3VnaDtcclxuICAgICAgICBjb2xvcjogJHRleHQtZ3JheTtcclxuICAgICAgICBwYWRkaW5nLXJpZ2h0OiAzcHg7XHJcbiAgICB9XHJcbiAgICAmX19wcmljZV9iaWcge1xyXG4gICAgICAgIGZvbnQtc2l6ZTogNDhweDtcclxuICAgICAgICB0ZXh0LWFsaWduOiByaWdodDtcclxuICAgIH1cclxuICAgICZfX2Rlc2NyaXB0aW9uIHtcclxuICAgICAgICBwYWRkaW5nOiAwIDI0cHg7XHJcbiAgICAgICAgbWFyZ2luOiAwO1xyXG4gICAgICAgIGZvbnQtZmFtaWx5OiAnT3BlbiBTYW5zJztcclxuICAgICAgICBmb250LXN0eWxlOiBub3JtYWw7XHJcbiAgICAgICAgZm9udC13ZWlnaHQ6IDQwMDtcclxuICAgICAgICBmb250LXNpemU6IDE3cHg7XHJcbiAgICAgICAgbGluZS1oZWlnaHQ6IDE3MCU7XHJcbiAgICAgICAgY29sb3I6ICRib2R5LXRleHQtZ3JheTtcclxuICAgIH1cclxuICAgICZfX3NhdmluZyB7XHJcbiAgICAgICAgZm9udC1mYW1pbHk6ICdPcGVuIFNhbnMnO1xyXG4gICAgICAgIGZvbnQtc3R5bGU6IG5vcm1hbDtcclxuICAgICAgICBmb250LXdlaWdodDogNDAwO1xyXG4gICAgICAgIGZvbnQtc2l6ZTogMTRweDtcclxuICAgICAgICBsaW5lLWhlaWdodDogMjVweDtcclxuICAgICAgICB0ZXh0LWFsaWduOiBjZW50ZXI7XHJcbiAgICAgICAgbGV0dGVyLXNwYWNpbmc6IDAuMDJlbTtcclxuICAgICAgICBjb2xvcjogIzExMTExMTtcclxuICAgICAgICBkaXNwbGF5OiBibG9jaztcclxuICAgICAgICBtYXJnaW4tYm90dG9tOiAyMHB4O1xyXG4gICAgfVxyXG4gICAgJl9fYnV0dG9uIHtcclxuICAgICAgICB3aWR0aDogMjkwcHg7XHJcbiAgICAgICAgaGVpZ2h0OiA5MnB4O1xyXG4gICAgICAgIHRleHQtYWxpZ246IGNlbnRlcjtcclxuICAgICAgICBkaXNwbGF5OiBibG9jaztcclxuICAgICAgICBtYXJnaW46IDAgYXV0bztcclxuICAgICAgICBmb250LXdlaWdodDogNzAwO1xyXG4gICAgICAgIGZvbnQtc2l6ZTogMTdweDtcclxuICAgICAgICBsZXR0ZXItc3BhY2luZzogMC4yZW07XHJcbiAgICAgICAgdGV4dC10cmFuc2Zvcm06IHVwcGVyY2FzZTtcclxuICAgICAgICBtYXJnaW4tYm90dG9tOiAyNHB4O1xyXG4gICAgfVxyXG59XHJcblxyXG4uaG90ZWxzLWJ1dHRvbiB7XHJcbiAgICB3aWR0aDogMTUxcHg7XHJcbiAgICBoZWlnaHQ6IDQ1cHg7XHJcbiAgICB0ZXh0LXRyYW5zZm9ybTogdXBwZXJjYXNlO1xyXG4gICAgbGV0dGVyLXNwYWNpbmc6IDAuMWVtO1xyXG4gICAgZm9udC1mYW1pbHk6ICdSb2JvdG8nO1xyXG4gICAgZm9udC1zdHlsZTogbm9ybWFsO1xyXG4gICAgZm9udC13ZWlnaHQ6IDkwMDtcclxuICAgIGZvbnQtc2l6ZTogMTVweDtcclxuICAgIGxpbmUtaGVpZ2h0OiAxOHB4O1xyXG4gICAgbWFyZ2luOiAwIGF1dG87XHJcbiAgICBkaXNwbGF5OiBibG9jaztcclxuICAgIGJvcmRlcjogMnB4IHNvbGlkICNGRkZGRkY7XHJcbiAgICBiYWNrZ3JvdW5kLWNvbG9yOiBub25lO1xyXG4gICAgY29sb3I6ICR3aGl0ZTtcclxufVxyXG5cclxuLy8gTWVkaWFcclxuQG1lZGlhIChtYXgtd2lkdGg6IDE0NDBweCkge1xyXG4gICAgLmhvdGVscy1pdGVtcyB7XHJcbiAgICAgICAgZ3JpZC10ZW1wbGF0ZS1jb2x1bW5zOiByZXBlYXQoMiwgMWZyKTtcclxuICAgICAgICBqdXN0aWZ5LWl0ZW1zOiBjZW50ZXI7XHJcbiAgICAgICAgcm93LWdhcDogNTBweDtcclxuICAgICAgICBjb2x1bW4tZ2FwOiAxMHB4O1xyXG4gICAgfVxyXG4gICAgLmhvdGVscy1pdGVtX19pbWcge1xyXG4gICAgICAgIG1heC13aWR0aDogbm9uZTtcclxuICAgICAgICB3aWR0aDogMTAwJTtcclxuICAgICAgICBvYmplY3QtZml0OiBjb3ZlcjtcclxuICAgIH1cclxuICAgIC5ob3RlbHMtaXRlbSB7XHJcbiAgICAgICAgbWF4LXdpZHRoOiA0MDBweDtcclxuICAgIH1cclxufVxyXG5AbWVkaWEgKG1heC13aWR0aDogNzY4cHgpIHtcclxuICAgIC5ob3RlbHMtY291bnRyaWVzIHtcclxuICAgICAgICBkaXNwbGF5OiBncmlkO1xyXG4gICAgICAgIGdyaWQtdGVtcGxhdGUtY29sdW1uczogMWZyIDFmciAxZnI7XHJcbiAgICAgICAgY29sdW1uLWdhcDogMjBweDtcclxuICAgICAgICAmLW5hbWUge1xyXG4gICAgICAgICAgICBqdXN0aWZ5LXNlbGY6IGNlbnRlcjtcclxuICAgICAgICB9XHJcbiAgICB9XHJcbiAgICAuaG90ZWxzLWl0ZW1zIHtcclxuICAgICAgICBncmlkLXRlbXBsYXRlLWNvbHVtbnM6IHJlcGVhdCgxLCAxZnIpO1xyXG4gICAgfVxyXG59XHJcbiIsIi8vICR0aGVtZUNvbG9yOiAjMDA3YWZmICFkZWZhdWx0O1xyXG5cclxuQGF0LXJvb3Qge1xyXG4gICAgOnJvb3Qge1xyXG4gICAgLS1zd2lwZXItcGFnaW5hdGlvbi1jb2xvcjogI0YyQzk0QztcclxuICAgIC8vIC0tc3dpcGVyLXBhZ2luYXRpb24tYnVsbGV0LXNpemU6IDhweDtcclxuICAgIC8vIC0tc3dpcGVyLXBhZ2luYXRpb24tYnVsbGV0LXdpZHRoOiA4cHg7XHJcbiAgICAvLyAtLXN3aXBlci1wYWdpbmF0aW9uLWJ1bGxldC1oZWlnaHQ6IDhweDtcclxuICAgIC0tc3dpcGVyLXBhZ2luYXRpb24tYnVsbGV0LWluYWN0aXZlLWNvbG9yOiAjRkZGO1xyXG4gICAgLS1zd2lwZXItcGFnaW5hdGlvbi1idWxsZXQtaW5hY3RpdmUtb3BhY2l0eTogMTtcclxuICAgIC8vIC0tc3dpcGVyLXBhZ2luYXRpb24tYnVsbGV0LW9wYWNpdHk6IDE7XHJcbiAgICAtLXN3aXBlci1wYWdpbmF0aW9uLWJ1bGxldC1ob3Jpem9udGFsLWdhcDogMTVweDtcclxuICAgIC8vIC0tc3dpcGVyLXBhZ2luYXRpb24tYnVsbGV0LXZlcnRpY2FsLWdhcDogNnB4O1xyXG4gICAgfVxyXG59XHJcblxyXG4uc3dpcGVyLXBhZ2luYXRpb24ge1xyXG4gIHBvc2l0aW9uOiBhYnNvbHV0ZTtcclxuICB0ZXh0LWFsaWduOiBjZW50ZXI7XHJcbiAgdHJhbnNpdGlvbjogMzAwbXMgb3BhY2l0eTtcclxuICB0cmFuc2Zvcm06IHRyYW5zbGF0ZTNkKDAsIDAsIDApO1xyXG4gIHotaW5kZXg6IDEwO1xyXG4gICYuc3dpcGVyLXBhZ2luYXRpb24taGlkZGVuIHtcclxuICAgIG9wYWNpdHk6IDA7XHJcbiAgfVxyXG4gIC5zd2lwZXItcGFnaW5hdGlvbi1kaXNhYmxlZCA+ICYsXHJcbiAgJi5zd2lwZXItcGFnaW5hdGlvbi1kaXNhYmxlZCB7XHJcbiAgICBkaXNwbGF5OiBub25lICFpbXBvcnRhbnQ7XHJcbiAgfVxyXG59XHJcblxyXG4uc3dpcGVyLXBhZ2luYXRpb24tZnJhY3Rpb24sXHJcbi5zd2lwZXItcGFnaW5hdGlvbi1jdXN0b20sXHJcbi5zd2lwZXItaG9yaXpvbnRhbCA+IC5zd2lwZXItcGFnaW5hdGlvbi1idWxsZXRzLFxyXG4uc3dpcGVyLXBhZ2luYXRpb24tYnVsbGV0cy5zd2lwZXItcGFnaW5hdGlvbi1ob3Jpem9udGFsIHtcclxuICBib3R0b206IDEwcHg7XHJcbiAgbGVmdDogMDtcclxuICB3aWR0aDogMTAwJTtcclxufVxyXG5cclxuLnN3aXBlci1wYWdpbmF0aW9uLWJ1bGxldHMtZHluYW1pYyB7XHJcbiAgb3ZlcmZsb3c6IGhpZGRlbjtcclxuICBmb250LXNpemU6IDA7XHJcbiAgLnN3aXBlci1wYWdpbmF0aW9uLWJ1bGxldCB7XHJcbiAgICB0cmFuc2Zvcm06IHNjYWxlKDAuMzMpO1xyXG4gICAgcG9zaXRpb246IHJlbGF0aXZlO1xyXG4gIH1cclxuICAuc3dpcGVyLXBhZ2luYXRpb24tYnVsbGV0LWFjdGl2ZSB7XHJcbiAgICB0cmFuc2Zvcm06IHNjYWxlKDEpO1xyXG4gIH1cclxuICAuc3dpcGVyLXBhZ2luYXRpb24tYnVsbGV0LWFjdGl2ZS1tYWluIHtcclxuICAgIHRyYW5zZm9ybTogc2NhbGUoMSk7XHJcbiAgfVxyXG4gIC5zd2lwZXItcGFnaW5hdGlvbi1idWxsZXQtYWN0aXZlLXByZXYge1xyXG4gICAgdHJhbnNmb3JtOiBzY2FsZSgwLjY2KTtcclxuICB9XHJcbiAgLnN3aXBlci1wYWdpbmF0aW9uLWJ1bGxldC1hY3RpdmUtcHJldi1wcmV2IHtcclxuICAgIHRyYW5zZm9ybTogc2NhbGUoMC4zMyk7XHJcbiAgfVxyXG4gIC5zd2lwZXItcGFnaW5hdGlvbi1idWxsZXQtYWN0aXZlLW5leHQge1xyXG4gICAgdHJhbnNmb3JtOiBzY2FsZSgwLjY2KTtcclxuICB9XHJcbiAgLnN3aXBlci1wYWdpbmF0aW9uLWJ1bGxldC1hY3RpdmUtbmV4dC1uZXh0IHtcclxuICAgIHRyYW5zZm9ybTogc2NhbGUoMC4zMyk7XHJcbiAgfVxyXG59XHJcbi5zd2lwZXItcGFnaW5hdGlvbi1idWxsZXQge1xyXG4gIHdpZHRoOiB2YXIoLS1zd2lwZXItcGFnaW5hdGlvbi1idWxsZXQtd2lkdGgsIHZhcigtLXN3aXBlci1wYWdpbmF0aW9uLWJ1bGxldC1zaXplLCA4cHgpKTtcclxuICBoZWlnaHQ6IHZhcigtLXN3aXBlci1wYWdpbmF0aW9uLWJ1bGxldC1oZWlnaHQsIHZhcigtLXN3aXBlci1wYWdpbmF0aW9uLWJ1bGxldC1zaXplLCA4cHgpKTtcclxuICBkaXNwbGF5OiBpbmxpbmUtYmxvY2s7XHJcbiAgYm9yZGVyLXJhZGl1czogNTAlO1xyXG4gIGJhY2tncm91bmQ6IHZhcigtLXN3aXBlci1wYWdpbmF0aW9uLWJ1bGxldC1pbmFjdGl2ZS1jb2xvciwgIzAwMCk7XHJcbiAgb3BhY2l0eTogdmFyKC0tc3dpcGVyLXBhZ2luYXRpb24tYnVsbGV0LWluYWN0aXZlLW9wYWNpdHksIDAuMik7XHJcbiAgQGF0LXJvb3QgYnV0dG9uI3smfSB7XHJcbiAgICBib3JkZXI6IG5vbmU7XHJcbiAgICBtYXJnaW46IDA7XHJcbiAgICBwYWRkaW5nOiAwO1xyXG4gICAgYm94LXNoYWRvdzogbm9uZTtcclxuICAgIGFwcGVhcmFuY2U6IG5vbmU7XHJcbiAgfVxyXG4gIC5zd2lwZXItcGFnaW5hdGlvbi1jbGlja2FibGUgJiB7XHJcbiAgICBjdXJzb3I6IHBvaW50ZXI7XHJcbiAgfVxyXG5cclxuICAmOm9ubHktY2hpbGQge1xyXG4gICAgZGlzcGxheTogbm9uZSAhaW1wb3J0YW50O1xyXG4gIH1cclxufVxyXG4uc3dpcGVyLXBhZ2luYXRpb24tYnVsbGV0LWFjdGl2ZSB7XHJcbiAgb3BhY2l0eTogdmFyKC0tc3dpcGVyLXBhZ2luYXRpb24tYnVsbGV0LW9wYWNpdHksIDEpO1xyXG4gIGJhY2tncm91bmQ6IHZhcigtLXN3aXBlci1wYWdpbmF0aW9uLWNvbG9yLCB2YXIoLS1zd2lwZXItdGhlbWUtY29sb3IpKTtcclxufVxyXG5cclxuLnN3aXBlci12ZXJ0aWNhbCA+IC5zd2lwZXItcGFnaW5hdGlvbi1idWxsZXRzLFxyXG4uc3dpcGVyLXBhZ2luYXRpb24tdmVydGljYWwuc3dpcGVyLXBhZ2luYXRpb24tYnVsbGV0cyB7XHJcbiAgcmlnaHQ6IDEwcHg7XHJcbiAgdG9wOiA1MCU7XHJcbiAgdHJhbnNmb3JtOiB0cmFuc2xhdGUzZCgwcHgsIC01MCUsIDApO1xyXG4gIC5zd2lwZXItcGFnaW5hdGlvbi1idWxsZXQge1xyXG4gICAgbWFyZ2luOiB2YXIoLS1zd2lwZXItcGFnaW5hdGlvbi1idWxsZXQtdmVydGljYWwtZ2FwLCA2cHgpIDA7XHJcbiAgICBkaXNwbGF5OiBibG9jaztcclxuICB9XHJcbiAgJi5zd2lwZXItcGFnaW5hdGlvbi1idWxsZXRzLWR5bmFtaWMge1xyXG4gICAgdG9wOiA1MCU7XHJcbiAgICB0cmFuc2Zvcm06IHRyYW5zbGF0ZVkoLTUwJSk7XHJcbiAgICB3aWR0aDogOHB4O1xyXG4gICAgLnN3aXBlci1wYWdpbmF0aW9uLWJ1bGxldCB7XHJcbiAgICAgIGRpc3BsYXk6IGlubGluZS1ibG9jaztcclxuICAgICAgdHJhbnNpdGlvbjogMjAwbXMgdHJhbnNmb3JtLCAyMDBtcyB0b3A7XHJcbiAgICB9XHJcbiAgfVxyXG59XHJcbi5zd2lwZXItaG9yaXpvbnRhbCA+IC5zd2lwZXItcGFnaW5hdGlvbi1idWxsZXRzLFxyXG4uc3dpcGVyLXBhZ2luYXRpb24taG9yaXpvbnRhbC5zd2lwZXItcGFnaW5hdGlvbi1idWxsZXRzIHtcclxuICAuc3dpcGVyLXBhZ2luYXRpb24tYnVsbGV0IHtcclxuICAgIG1hcmdpbjogMCB2YXIoLS1zd2lwZXItcGFnaW5hdGlvbi1idWxsZXQtaG9yaXpvbnRhbC1nYXAsIDRweCk7XHJcbiAgfVxyXG4gICYuc3dpcGVyLXBhZ2luYXRpb24tYnVsbGV0cy1keW5hbWljIHtcclxuICAgIGxlZnQ6IDUwJTtcclxuICAgIHRyYW5zZm9ybTogdHJhbnNsYXRlWCgtNTAlKTtcclxuICAgIHdoaXRlLXNwYWNlOiBub3dyYXA7XHJcbiAgICAuc3dpcGVyLXBhZ2luYXRpb24tYnVsbGV0IHtcclxuICAgICAgdHJhbnNpdGlvbjogMjAwbXMgdHJhbnNmb3JtLCAyMDBtcyBsZWZ0O1xyXG4gICAgfVxyXG4gIH1cclxufVxyXG4uc3dpcGVyLWhvcml6b250YWwuc3dpcGVyLXJ0bCA+IC5zd2lwZXItcGFnaW5hdGlvbi1idWxsZXRzLWR5bmFtaWMgLnN3aXBlci1wYWdpbmF0aW9uLWJ1bGxldCB7XHJcbiAgdHJhbnNpdGlvbjogMjAwbXMgdHJhbnNmb3JtLCAyMDBtcyByaWdodDtcclxufVxyXG5cclxuLnN3aXBlci1wYWdpbmF0aW9uLXByb2dyZXNzYmFyIHtcclxuICBiYWNrZ3JvdW5kOiByZ2JhKDAsIDAsIDAsIDAuMjUpO1xyXG4gIHBvc2l0aW9uOiBhYnNvbHV0ZTtcclxuICAuc3dpcGVyLXBhZ2luYXRpb24tcHJvZ3Jlc3NiYXItZmlsbCB7XHJcbiAgICBiYWNrZ3JvdW5kOiB2YXIoLS1zd2lwZXItcGFnaW5hdGlvbi1jb2xvciwgdmFyKC0tc3dpcGVyLXRoZW1lLWNvbG9yKSk7XHJcbiAgICBwb3NpdGlvbjogYWJzb2x1dGU7XHJcbiAgICBsZWZ0OiAwO1xyXG4gICAgdG9wOiAwO1xyXG4gICAgd2lkdGg6IDEwMCU7XHJcbiAgICBoZWlnaHQ6IDEwMCU7XHJcbiAgICB0cmFuc2Zvcm06IHNjYWxlKDApO1xyXG4gICAgdHJhbnNmb3JtLW9yaWdpbjogbGVmdCB0b3A7XHJcbiAgfVxyXG4gIC5zd2lwZXItcnRsICYgLnN3aXBlci1wYWdpbmF0aW9uLXByb2dyZXNzYmFyLWZpbGwge1xyXG4gICAgdHJhbnNmb3JtLW9yaWdpbjogcmlnaHQgdG9wO1xyXG4gIH1cclxuICAuc3dpcGVyLWhvcml6b250YWwgPiAmLFxyXG4gICYuc3dpcGVyLXBhZ2luYXRpb24taG9yaXpvbnRhbCxcclxuICAuc3dpcGVyLXZlcnRpY2FsID4gJi5zd2lwZXItcGFnaW5hdGlvbi1wcm9ncmVzc2Jhci1vcHBvc2l0ZSxcclxuICAmLnN3aXBlci1wYWdpbmF0aW9uLXZlcnRpY2FsLnN3aXBlci1wYWdpbmF0aW9uLXByb2dyZXNzYmFyLW9wcG9zaXRlIHtcclxuICAgIHdpZHRoOiAxMDAlO1xyXG4gICAgaGVpZ2h0OiA0cHg7XHJcbiAgICBsZWZ0OiAwO1xyXG4gICAgdG9wOiAwO1xyXG4gIH1cclxuICAuc3dpcGVyLXZlcnRpY2FsID4gJixcclxuICAmLnN3aXBlci1wYWdpbmF0aW9uLXZlcnRpY2FsLFxyXG4gIC5zd2lwZXItaG9yaXpvbnRhbCA+ICYuc3dpcGVyLXBhZ2luYXRpb24tcHJvZ3Jlc3NiYXItb3Bwb3NpdGUsXHJcbiAgJi5zd2lwZXItcGFnaW5hdGlvbi1ob3Jpem9udGFsLnN3aXBlci1wYWdpbmF0aW9uLXByb2dyZXNzYmFyLW9wcG9zaXRlIHtcclxuICAgIHdpZHRoOiA0cHg7XHJcbiAgICBoZWlnaHQ6IDEwMCU7XHJcbiAgICBsZWZ0OiAwO1xyXG4gICAgdG9wOiAwO1xyXG4gIH1cclxufVxyXG4uc3dpcGVyLXBhZ2luYXRpb24tbG9jayB7XHJcbiAgZGlzcGxheTogbm9uZTtcclxufVxyXG4iLCIvLyBFeHRlbmRzXHJcbiVwcmljZS1pdGVtLXRleHQge1xyXG4gICAgZm9udC1mYW1pbHk6ICdPcGVuIFNhbnMnO1xyXG4gICAgZm9udC1zdHlsZTogbm9ybWFsO1xyXG4gICAgZm9udC13ZWlnaHQ6IDQwMDtcclxuICAgIGZvbnQtc2l6ZTogMTZweDtcclxuICAgIGxpbmUtaGVpZ2h0OiAyNXB4O1xyXG4gICAgY29sb3I6ICRib2R5LXRleHQtZ3JheTtcclxufVxyXG4lcHJpY2UtYm90dG9tLXRleHQge1xyXG4gICAgdGV4dC1hbGlnbjogY2VudGVyO1xyXG4gICAgZm9udC1mYW1pbHk6ICdSb2JvdG8nO1xyXG4gICAgZm9udC1zdHlsZTogbm9ybWFsO1xyXG4gICAgZm9udC13ZWlnaHQ6IDQwMDtcclxuICAgIGZvbnQtc2l6ZTogMTRweDtcclxuICAgIGxpbmUtaGVpZ2h0OiAzMHB4O1xyXG4gICAgY29sb3I6ICRib2R5LXRleHQtZ3JheTtcclxufVxyXG5cclxuLnByaWNpbmcge1xyXG4gICAgYmFja2dyb3VuZC1pbWFnZTogIHVybCgnLi4vaW1nL3N2Zy9mb290ZXItYmcuc3ZnJyk7XHJcbiAgICBiYWNrZ3JvdW5kLXNpemU6IGNvdmVyO1xyXG4gICAgYmFja2dyb3VuZC1wb3NpdGlvbjogY2VudGVyIGNlbnRlcjtcclxuICAgIG1hcmdpbi1ib3R0b206IDYwcHg7XHJcbn1cclxuLnByaWNlLWl0ZW1zIHtcclxuICAgIGRpc3BsYXk6IGZsZXg7XHJcbiAgICBtYXgtd2lkdGg6IDE0MDBweDtcclxuICAgIG1hcmdpbjogMCBhdXRvIDE4MHB4O1xyXG4gICAganVzdGlmeS1jb250ZW50OiBzcGFjZS1iZXR3ZWVuO1xyXG4gICAgZ2FwOiAxMHB4O1xyXG59XHJcbi8vXHJcbi5wcmljZS1pdGVtOjphZnRlciB7XHJcbiAgICBjb250ZW50OiAnJztcclxuICAgIHBvc2l0aW9uOiBhYnNvbHV0ZTtcclxuICAgIG9wYWNpdHk6IDAuODtcclxuICAgIHRvcDogMDtcclxuICAgIGxlZnQ6IDA7IFxyXG4gICAgYm90dG9tOiAwO1xyXG4gICAgcmlnaHQ6IDA7XHJcbiAgICB6LWluZGV4OiAtMTsgIFxyXG4gICAgYmFja2dyb3VuZC1jb2xvcjogcmdiYSgwLCAwLCAxLCAwLjgpO1xyXG4gICAgLy8gYmFja2dyb3VuZDogdXJsKCcuLi9pbWcvcHJpY2UtYmcucG5nJykgcmlnaHQgYm90dG9tIG5vLXJlcGVhdDtcclxuICAgIC8vIGJhY2tncm91bmQtc2l6ZTogY292ZXI7XHJcbn1cclxuLnByaWNlLWl0ZW0ge1xyXG4gICAgLy8gYmFja2dyb3VuZDogdXJsKCcuLi9pbWcvcHJpY2UtYmcucG5nJyk7XHJcbiAgICAvLyBiYWNrZ3JvdW5kLXNpemU6IGNvdmVyO1xyXG4gICAgcG9zaXRpb246IHJlbGF0aXZlOyAvL1xyXG4gICAgYm9yZGVyLXJhZGl1czogMTZweDtcclxuICAgIHBhZGRpbmc6IDA7XHJcbiAgICBwb3NpdGlvbjogcmVsYXRpdmU7XHJcbiAgICBkaXNwbGF5OiBmbGV4O1xyXG4gICAganVzdGlmeS1jb250ZW50OiBzcGFjZS1iZXR3ZWVuO1xyXG4gICAgbWluLWhlaWdodDogODUwcHg7XHJcbiAgICBmbGV4LWRpcmVjdGlvbjogY29sdW1uO1xyXG4gICAgZmxleC1iYXNpczogNDMwcHg7XHJcbiAgICAmLWNvbnRlbnQge1xyXG4gICAgICAgIG1heC13aWR0aDogMzEwcHg7XHJcbiAgICAgICAgZGlzcGxheTogZmxleDtcclxuICAgICAgICBmbGV4LWRpcmVjdGlvbjogY29sdW1uO1xyXG4gICAgICAgIG1hcmdpbjogMCBhdXRvO1xyXG4gICAgICAgIHBhZGRpbmc6IDYwcHggMjBweCAwIDIwcHg7XHJcbiAgICB9XHJcbiAgICAmLWJpZyB7XHJcbiAgICAgICAgZm9udC1mYW1pbHk6ICdETSBTZXJpZiBEaXNwbGF5JztcclxuICAgICAgICBmb250LXN0eWxlOiBub3JtYWw7XHJcbiAgICAgICAgZm9udC13ZWlnaHQ6IDQwMDtcclxuICAgICAgICBmb250LXNpemU6IDUwcHg7XHJcbiAgICAgICAgbGluZS1oZWlnaHQ6IDI1cHg7XHJcbiAgICAgICAgbGV0dGVyLXNwYWNpbmc6IDAuMDNlbTtcclxuICAgICAgICBjb2xvcjogJHdoaXRlO1xyXG4gICAgfVxyXG4gICAgJi1tb250aCB7XHJcbiAgICAgICAgQGV4dGVuZCAlcHJpY2UtaXRlbS10ZXh0O1xyXG4gICAgICAgIGNvbG9yOiAjQTVBREJCO1xyXG4gICAgfVxyXG4gICAgJi1uYW1lIHtcclxuICAgICAgICBjb2xvcjogJHdoaXRlO1xyXG4gICAgICAgIGZvbnQtZmFtaWx5OiAnQXJzZW5hbCc7XHJcbiAgICAgICAgZm9udC1zdHlsZTogbm9ybWFsO1xyXG4gICAgICAgIGZvbnQtd2VpZ2h0OiA0MDA7XHJcbiAgICAgICAgZm9udC1zaXplOiAyMXB4O1xyXG4gICAgICAgIGxpbmUtaGVpZ2h0OiAyNXB4O1xyXG4gICAgICAgIG1hcmdpbi1ib3R0b206IDMwcHg7XHJcbiAgICAgICAgbWFyZ2luLXRvcDogMTdweDtcclxuICAgIH1cclxuICAgICYtZGVzY3JpcHRpb24ge1xyXG4gICAgICAgIEBleHRlbmQgJXByaWNlLWl0ZW0tdGV4dDtcclxuICAgIH1cclxuICAgICYtZmVhdHVyZXMge1xyXG4gICAgICAgIG1hcmdpbi10b3A6IDIwcHg7XHJcbiAgICAgICAgcGFkZGluZy10b3A6IDYwcHg7XHJcbiAgICAgICAgYm9yZGVyLXRvcDogMnB4IHNvbGlkIHJnYmEoMjM1LCAyMzYsIDIzNywgMC4yKTtcclxuICAgIH1cclxuICAgICYtZmVhdHVyZSB7XHJcbiAgICAgICAgQGV4dGVuZCAlcHJpY2UtaXRlbS10ZXh0O1xyXG4gICAgICAgICY6bm90KDpsYXN0LWNoaWxkKSB7XHJcbiAgICAgICAgICAgIG1hcmdpbi1ib3R0b206IDIwcHg7XHJcbiAgICAgICAgfVxyXG4gICAgICAgICY6OmJlZm9yZXtcclxuICAgICAgICAgICAgY29udGVudDogdXJsKCcuLi9pbWcvc3ZnL3ByaWNlLWNoZWNrLW1hcmsuc3ZnJyk7XHJcbiAgICAgICAgICAgIG1hcmdpbi1yaWdodDogMTBweDtcclxuICAgICAgICB9XHJcbiAgICB9XHJcbiAgICAmLWJ1dHRvbiB7XHJcbiAgICAgICAgbWFyZ2luLXRvcDogYXV0bztcclxuICAgICAgICBtYXJnaW4tYm90dG9tOiA4MHB4O1xyXG4gICAgICAgIGhlaWdodDogNTBweDtcclxuICAgICAgICB3aWR0aDogMjYwcHg7XHJcbiAgICAgICAgZGlzcGxheTogZmxleDtcclxuICAgICAgICBhbGlnbi1pdGVtczogY2VudGVyO1xyXG4gICAgICAgIGp1c3RpZnktY29udGVudDogY2VudGVyO1xyXG4gICAgICAgIG1hcmdpbjogNTBweCBhdXRvIDgwcHggYXV0bztcclxuICAgICAgICBjdXJzb3I6IHBvaW50ZXI7XHJcbiAgICB9XHJcbn1cclxuXHJcbi8vIFByaWNlIGJvdHRvbSBcclxuLnByaWNlLWJvdHRvbSB7XHJcbiAgICB0ZXh0LWFsaWduOiBjZW50ZXI7XHJcbiAgICBtYXJnaW4tYm90dG9tOiA1MHB4O1xyXG4gICAgJi1sb2dvIHtcclxuICAgICAgICBmb250LXNpemU6IDQ4cHg7XHJcbiAgICAgICAgbWFyZ2luOiAwIGF1dG8gMTVweDtcclxuICAgIH1cclxuICAgICYtZW1haWwge1xyXG4gICAgICAgIEBleHRlbmQgJXByaWNlLWJvdHRvbS10ZXh0O1xyXG4gICAgICAgIHRleHQtZGVjb3JhdGlvbjogdW5kZXJsaW5lO1xyXG4gICAgICAgIGZvbnQtc2l6ZTogMjRweDtcclxuICAgICAgICBtYXJnaW4tYm90dG9tOiAyMHB4O1xyXG4gICAgfVxyXG4gICAgJi1zb2NpYWwge1xyXG4gICAgICAgIG1hcmdpbjogMCBhdXRvO1xyXG4gICAgfVxyXG4gICAgJi1hZGRyZXNzIHtcclxuICAgICAgICBAZXh0ZW5kICVwcmljZS1ib3R0b20tdGV4dDtcclxuICAgICAgICBtYXJnaW4tYm90dG9tOiA0MHB4O1xyXG4gICAgfVxyXG59XHJcblxyXG5cclxuLy8gTWVkaWFcclxuQG1lZGlhIChtYXgtd2lkdGg6IDk5MnB4KSB7XHJcbiAgICAucHJpY2UtaXRlbXMge1xyXG4gICAgICAgIGZsZXgtZGlyZWN0aW9uOiBjb2x1bW47XHJcbiAgICAgICAgYWxpZ24taXRlbXM6IGNlbnRlcjtcclxuICAgICAgICByb3ctZ2FwOiA1MHB4O1xyXG4gICAgfVxyXG4gICAgLnByaWNlLWl0ZW0ge1xyXG4gICAgICAgIHdpZHRoOiA5MCU7XHJcbiAgICAgICAganVzdGlmeS1jb250ZW50OiBzcGFjZS1iZXR3ZWVuO1xyXG4gICAgICAgIG1pbi1oZWlnaHQ6IGF1dG87XHJcbiAgICAgICAgLy8gb3BhY2l0eTogMC44O1xyXG4gICAgICAgICYtY29udGVudCB7XHJcbiAgICAgICAgICAgIG1heC13aWR0aDogbm9uZTtcclxuICAgICAgICB9XHJcbiAgICAgICAgJi1idXR0b24ge1xyXG4gICAgICAgICAgICBtYXJnaW4tYm90dG9tOiA1MHB4O1xyXG4gICAgICAgIH1cclxuICAgICAgICAmLWZlYXR1cmVzIHtcclxuICAgICAgICAgICAgcGFkZGluZy10b3A6IDQwcHg7XHJcbiAgICAgICAgfVxyXG4gICAgfVxyXG59XHJcbkBtZWRpYSAobWF4LXdpZHRoOiA2NDBweCkge1xyXG4gICAgLnByaWNlLWl0ZW0tYnV0dG9uIHtcclxuICAgICAgICBtYXgtd2lkdGg6IDIwMHB4O1xyXG4gICAgfVxyXG4gICAgLnByaWNlLWJvdHRvbS1lbWFpbCB7XHJcbiAgICAgICAgZm9udC1zaXplOiAyMnB4O1xyXG4gICAgfVxyXG59IiwiJHRoZW1lQ29sb3I6ICMwMDdhZmYgIWRlZmF1bHQ7XHJcbkBhdC1yb290IHtcclxuICBAZm9udC1mYWNlIHtcclxuICAgIGZvbnQtZmFtaWx5OiAnc3dpcGVyLWljb25zJztcclxuICAgIHNyYzogdXJsKCdkYXRhOmFwcGxpY2F0aW9uL2ZvbnQtd29mZjtjaGFyc2V0PXV0Zi04O2Jhc2U2NCwgZDA5R1JnQUJBQUFBQUFaZ0FCQUFBQUFBREFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUJHUmxSTkFBQUdSQUFBQUJvQUFBQWNpNnFIa1VkRVJVWUFBQVdnQUFBQUl3QUFBQ1FBWUFCWFIxQlBVd0FBQmhRQUFBQXVBQUFBTnVBWTcreEhVMVZDQUFBRnhBQUFBRkFBQUFCbTJmUGN6VTlUTHpJQUFBSGNBQUFBU2dBQUFHQlA5VjVSWTIxaGNBQUFBa1FBQUFDSUFBQUJZdDZGMGNCamRuUWdBQUFDekFBQUFBUUFBQUFFQUJFQlJHZGhjM0FBQUFXWUFBQUFDQUFBQUFqLy93QURaMng1WmdBQUF5d0FBQURNQUFBRDJNSHRyeVZvWldGa0FBQUJiQUFBQURBQUFBQTJFMitlb1dob1pXRUFBQUdjQUFBQUh3QUFBQ1FDOWdEemFHMTBlQUFBQWlnQUFBQVpBQUFBcmdKa0FCRnNiMk5oQUFBQzBBQUFBRm9BQUFCYUZRQVVHRzFoZUhBQUFBRzhBQUFBSHdBQUFDQUFjQUJBYm1GdFpRQUFBL2dBQUFFNUFBQUNYdkZkQndsd2IzTjBBQUFGTkFBQUFHSUFBQUNFNXM3NGhYamFZMkJrWUdBQVlwZjVIdS9qK1cyK01uQXpNWURBemFYNlFqRDYvNC8vQnhqNUdBOEF1UndNWUdrQVB5d0wxM2phWTJCa1lHQTg4UDhBZ3g0aisvOGZRRFlmQTFBRUJXZ0RBSUIyQk9vQWVOcGpZR1JnWU5CaDRHZGdZZ0FCRU1uSUFCSnpZTkFEQ1FBQUNXZ0FzUUI0Mm1OZ1lmekNPSUdCbFlHQjBZY3hqWUdCd1IxS2YyV1FaR2hoWUdCaVlHVm1nQUZHQmlRUWtPYWF3dERBb01CUXhYamcvd0VHUGNZRERBNHdOVUEyQ0Nnd3NBQUFPNEVMNmdBQWVOcGoyTTBneUFBQ3F4Z0dOV0JrWjJENC93TUEreGtEZGdBQUFIamFZMkJnWUdhQVlCa0dSZ1lRaUFIeUdNRjhGZ1lISU0zRHdNSEFCR1FyTU9neVdETEVNMVQ5L3c4VUJmRU1nTHpFLy8vL1AvNS8vZi9WL3h2K3I0ZWFBQWVNYkF4d0lVWW1JTUhFZ0tZQVlqVWNzREF3c0xLeGMzQnljZlB3OGpFUUEvZ1pCQVNGaEVWRXhjUWxKS1drWldUbDVCVVVsWlJWVk5YVU5UUVpCZ01BQU1SK0UrZ0FFUUZFQUFBQUtnQXFBQ29BTkFBK0FFZ0FVZ0JjQUdZQWNBQjZBSVFBamdDWUFLSUFyQUMyQU1BQXlnRFVBTjRBNkFEeUFQd0JCZ0VRQVJvQkpBRXVBVGdCUWdGTUFWWUJZQUZxQVhRQmZnR0lBWklCbkFHbUFiSUJ6Z0hzQUFCNDJ1Mk5NUTZDVUF5R1c1Njh4OUFuZVlZZ200TUpiaEtGYUV4SU9BVlg4QXBld1N0NEJpYzRBZmVBaWQzVk9CaXhEeGZQWUV6YTVPK1hmaTA0WUFEZ2dpVUlVTEN1RUpLOFZoTzRiU3ZwZG5rdEhJNVFDWXRkaTJzbDhablhhSGxxVXJOS3pkS2NUOGNqbHErcndaU3ZJVmN6TmllenNmblAvdXpubWZQRkJOT0RNMks3TVRRNDVZRUFacUdQODFBbUdHY0YzaVBxT29wMHIxU1BUYVRiVmtmVWU0SFhqOTd3WUUreU53V1l4d1d1NHYxdWdXSGdvM1MxWGRaRVZxV003RVQwY2ZuTEd4V2ZrZ1I0Mm8yUHZXckRNQlNGai9JSExhRjB6S2pSZ2RpVk13U2NOUkFvV1VvSDc4WTJpY0IveUlZMDlBbjZBSDJCZHUvVUIreXhvcFlzaFFpRXZudnUwZFVSZ0R0OFFlQzhQRHc3RnBqaTNmRUE0ei9QRUo2WU9CNWhLaDRkajNFdlhoeFBxSC9TS1VZM3JKN3NyWjRGWm5oMVBNQXRQaHdQNmZsMlBNSk1QRGdlUTRyWThZVDZHemFvMGVBRUE0MDlEdWdnbVRuRm5PY1NDaUVpTE1neENpVEk2Q3E1RFpVZDNRbXAxMHZPMExhTFRkMmNqTjRmT3VtbGM3bFVZYlNRY1pGa3V0Ukc3ZzZKS1pLeTBSbWRMWTY4MENEbkVKK1VNa3BGRmUxUk43bnhkVnBYckM0YVR0bmF1ck9uWWVyY1pnMllWbUxOL2QvZ2N6ZkVpbXJFL2ZzL2JPdXEyOVptbjh0bG9PUmFYZ1pnR2E3OHlPOS9jblhtMkJwYUd2cTI1RHY5UzRFOSs1U0ljOVBxdXBKS2hZRlNTbDQ3K1FjcjFtWU5BQUFBZU5wdHcwY0t3a0FBQU1EWkpBOFE3T1VKdmtMc1BmWjZ6RlZFUlB5OHFIaDJZRVIrM2kvQlA4M3ZJQkxMeVNzb0tpbXJxS3FwYTJocDYranE2UnNZR2htYm1KcVpTeTBzcmF4dGJPM3NIUnlkbkVNVTR1UjZ5eDdKSlh2ZVA3V3JEeWNBQUFBQUFBSC8vd0FDZU5wallHUmdZT0FCWWhrZ1pnSkNaZ1pOQmtZR0xRWnRJSnNGTE1ZQUFBdzNBTGdBZU5vbGl6RUtnREFRQkNjaFJiQzJzRkVSMFlENnFWUWlCQ3YvSDllekdJNlo1WEJBdzhDQksvbTVpUVFWYXVWYlhMbk9yTVp2Mm9MZEtGYThQanVydTJoSnpHYWJtT1NMek5NenZ1dHBCM040Mm1OZ1pHQmc0R0tRWXpCaFlNeEpMTWxqNEdCZ0FZb3cvUC9QQUpKaExNNnNTb1dLZldDQUF3REFqZ2JSQUFCNDJtTmdZR0JrQUlJYkNabzVJUHJtVW4waEdBMEFPOEVGVFFBQScpXHJcbiAgICAgIGZvcm1hdCgnd29mZicpO1xyXG4gICAgZm9udC13ZWlnaHQ6IDQwMDtcclxuICAgIGZvbnQtc3R5bGU6IG5vcm1hbDtcclxuICB9XHJcbn1cclxuQGF0LXJvb3Qge1xyXG4gIDpyb290IHtcclxuICAgIC0tc3dpcGVyLXRoZW1lLWNvbG9yOiAjeyR0aGVtZUNvbG9yfTtcclxuICB9XHJcbn1cclxuLnN3aXBlciB7XHJcbiAgbWFyZ2luLWxlZnQ6IGF1dG87XHJcbiAgbWFyZ2luLXJpZ2h0OiBhdXRvO1xyXG4gIHBvc2l0aW9uOiByZWxhdGl2ZTtcclxuICBvdmVyZmxvdzogaGlkZGVuO1xyXG4gIGxpc3Qtc3R5bGU6IG5vbmU7XHJcbiAgcGFkZGluZzogMDtcclxuICB6LWluZGV4OiAxO1xyXG59XHJcbi5zd2lwZXItdmVydGljYWwgPiAuc3dpcGVyLXdyYXBwZXIge1xyXG4gIGZsZXgtZGlyZWN0aW9uOiBjb2x1bW47XHJcbn1cclxuLnN3aXBlci13cmFwcGVyIHtcclxuICBwb3NpdGlvbjogcmVsYXRpdmU7XHJcbiAgd2lkdGg6IDEwMCU7XHJcbiAgaGVpZ2h0OiAxMDAlO1xyXG4gIHotaW5kZXg6IDE7XHJcbiAgZGlzcGxheTogZmxleDtcclxuICB0cmFuc2l0aW9uLXByb3BlcnR5OiB0cmFuc2Zvcm07XHJcbiAgYm94LXNpemluZzogY29udGVudC1ib3g7XHJcbn1cclxuLnN3aXBlci1hbmRyb2lkIC5zd2lwZXItc2xpZGUsXHJcbi5zd2lwZXItd3JhcHBlciB7XHJcbiAgdHJhbnNmb3JtOiB0cmFuc2xhdGUzZCgwcHgsIDAsIDApO1xyXG59XHJcbi5zd2lwZXItcG9pbnRlci1ldmVudHMge1xyXG4gIHRvdWNoLWFjdGlvbjogcGFuLXk7XHJcbiAgJi5zd2lwZXItdmVydGljYWwge1xyXG4gICAgdG91Y2gtYWN0aW9uOiBwYW4teDtcclxuICB9XHJcbn1cclxuLnN3aXBlci1zbGlkZSB7XHJcbiAgZmxleC1zaHJpbms6IDA7XHJcbiAgd2lkdGg6IDEwMCU7XHJcbiAgaGVpZ2h0OiAxMDAlO1xyXG4gIHBvc2l0aW9uOiByZWxhdGl2ZTtcclxuICB0cmFuc2l0aW9uLXByb3BlcnR5OiB0cmFuc2Zvcm07XHJcbn1cclxuLnN3aXBlci1zbGlkZS1pbnZpc2libGUtYmxhbmsge1xyXG4gIHZpc2liaWxpdHk6IGhpZGRlbjtcclxufVxyXG4uc3dpcGVyLWF1dG9oZWlnaHQge1xyXG4gICYsXHJcbiAgLnN3aXBlci1zbGlkZSB7XHJcbiAgICBoZWlnaHQ6IGF1dG87XHJcbiAgfVxyXG5cclxuICAuc3dpcGVyLXdyYXBwZXIge1xyXG4gICAgYWxpZ24taXRlbXM6IGZsZXgtc3RhcnQ7XHJcbiAgICB0cmFuc2l0aW9uLXByb3BlcnR5OiB0cmFuc2Zvcm0sIGhlaWdodDtcclxuICB9XHJcbn1cclxuLnN3aXBlci1iYWNrZmFjZS1oaWRkZW4gLnN3aXBlci1zbGlkZSB7XHJcbiAgdHJhbnNmb3JtOiB0cmFuc2xhdGVaKDApO1xyXG4gIGJhY2tmYWNlLXZpc2liaWxpdHk6IGhpZGRlbjtcclxufVxyXG4uc3dpcGVyLTNkIHtcclxuICAmLFxyXG4gICYuc3dpcGVyLWNzcy1tb2RlIC5zd2lwZXItd3JhcHBlciB7XHJcbiAgICBwZXJzcGVjdGl2ZTogMTIwMHB4O1xyXG4gIH1cclxuICAuc3dpcGVyLXdyYXBwZXIsXHJcbiAgLnN3aXBlci1zbGlkZSxcclxuICAuc3dpcGVyLXNsaWRlLXNoYWRvdyxcclxuICAuc3dpcGVyLXNsaWRlLXNoYWRvdy1sZWZ0LFxyXG4gIC5zd2lwZXItc2xpZGUtc2hhZG93LXJpZ2h0LFxyXG4gIC5zd2lwZXItc2xpZGUtc2hhZG93LXRvcCxcclxuICAuc3dpcGVyLXNsaWRlLXNoYWRvdy1ib3R0b20sXHJcbiAgLnN3aXBlci1jdWJlLXNoYWRvdyB7XHJcbiAgICB0cmFuc2Zvcm0tc3R5bGU6IHByZXNlcnZlLTNkO1xyXG4gIH1cclxuICAuc3dpcGVyLXNsaWRlLXNoYWRvdyxcclxuICAuc3dpcGVyLXNsaWRlLXNoYWRvdy1sZWZ0LFxyXG4gIC5zd2lwZXItc2xpZGUtc2hhZG93LXJpZ2h0LFxyXG4gIC5zd2lwZXItc2xpZGUtc2hhZG93LXRvcCxcclxuICAuc3dpcGVyLXNsaWRlLXNoYWRvdy1ib3R0b20ge1xyXG4gICAgcG9zaXRpb246IGFic29sdXRlO1xyXG4gICAgbGVmdDogMDtcclxuICAgIHRvcDogMDtcclxuICAgIHdpZHRoOiAxMDAlO1xyXG4gICAgaGVpZ2h0OiAxMDAlO1xyXG4gICAgcG9pbnRlci1ldmVudHM6IG5vbmU7XHJcbiAgICB6LWluZGV4OiAxMDtcclxuICB9XHJcbiAgLnN3aXBlci1zbGlkZS1zaGFkb3cge1xyXG4gICAgYmFja2dyb3VuZDogcmdiYSgwLCAwLCAwLCAwLjE1KTtcclxuICB9XHJcbiAgLnN3aXBlci1zbGlkZS1zaGFkb3ctbGVmdCB7XHJcbiAgICBiYWNrZ3JvdW5kLWltYWdlOiBsaW5lYXItZ3JhZGllbnQodG8gbGVmdCwgcmdiYSgwLCAwLCAwLCAwLjUpLCByZ2JhKDAsIDAsIDAsIDApKTtcclxuICB9XHJcbiAgLnN3aXBlci1zbGlkZS1zaGFkb3ctcmlnaHQge1xyXG4gICAgYmFja2dyb3VuZC1pbWFnZTogbGluZWFyLWdyYWRpZW50KHRvIHJpZ2h0LCByZ2JhKDAsIDAsIDAsIDAuNSksIHJnYmEoMCwgMCwgMCwgMCkpO1xyXG4gIH1cclxuICAuc3dpcGVyLXNsaWRlLXNoYWRvdy10b3Age1xyXG4gICAgYmFja2dyb3VuZC1pbWFnZTogbGluZWFyLWdyYWRpZW50KHRvIHRvcCwgcmdiYSgwLCAwLCAwLCAwLjUpLCByZ2JhKDAsIDAsIDAsIDApKTtcclxuICB9XHJcbiAgLnN3aXBlci1zbGlkZS1zaGFkb3ctYm90dG9tIHtcclxuICAgIGJhY2tncm91bmQtaW1hZ2U6IGxpbmVhci1ncmFkaWVudCh0byBib3R0b20sIHJnYmEoMCwgMCwgMCwgMC41KSwgcmdiYSgwLCAwLCAwLCAwKSk7XHJcbiAgfVxyXG59XHJcblxyXG4uc3dpcGVyLWNzcy1tb2RlIHtcclxuICA+IC5zd2lwZXItd3JhcHBlciB7XHJcbiAgICBvdmVyZmxvdzogYXV0bztcclxuICAgIHNjcm9sbGJhci13aWR0aDogbm9uZTtcclxuICAgIC1tcy1vdmVyZmxvdy1zdHlsZTogbm9uZTtcclxuICAgICY6Oi13ZWJraXQtc2Nyb2xsYmFyIHtcclxuICAgICAgZGlzcGxheTogbm9uZTtcclxuICAgIH1cclxuICB9XHJcbiAgPiAuc3dpcGVyLXdyYXBwZXIgPiAuc3dpcGVyLXNsaWRlIHtcclxuICAgIHNjcm9sbC1zbmFwLWFsaWduOiBzdGFydCBzdGFydDtcclxuICB9XHJcbn1cclxuLnN3aXBlci1ob3Jpem9udGFsLnN3aXBlci1jc3MtbW9kZSB7XHJcbiAgPiAuc3dpcGVyLXdyYXBwZXIge1xyXG4gICAgc2Nyb2xsLXNuYXAtdHlwZTogeCBtYW5kYXRvcnk7XHJcbiAgfVxyXG59XHJcbi5zd2lwZXItdmVydGljYWwuc3dpcGVyLWNzcy1tb2RlIHtcclxuICA+IC5zd2lwZXItd3JhcHBlciB7XHJcbiAgICBzY3JvbGwtc25hcC10eXBlOiB5IG1hbmRhdG9yeTtcclxuICB9XHJcbn1cclxuLnN3aXBlci1jZW50ZXJlZCB7XHJcbiAgPiAuc3dpcGVyLXdyYXBwZXI6OmJlZm9yZSB7XHJcbiAgICBjb250ZW50OiAnJztcclxuICAgIGZsZXgtc2hyaW5rOiAwO1xyXG4gICAgb3JkZXI6IDk5OTk7XHJcbiAgfVxyXG4gICYuc3dpcGVyLWhvcml6b250YWwge1xyXG4gICAgPiAuc3dpcGVyLXdyYXBwZXIgPiAuc3dpcGVyLXNsaWRlOmZpcnN0LWNoaWxkIHtcclxuICAgICAgbWFyZ2luLWlubGluZS1zdGFydDogdmFyKC0tc3dpcGVyLWNlbnRlcmVkLW9mZnNldC1iZWZvcmUpO1xyXG4gICAgfVxyXG4gICAgPiAuc3dpcGVyLXdyYXBwZXI6OmJlZm9yZSB7XHJcbiAgICAgIGhlaWdodDogMTAwJTtcclxuICAgICAgd2lkdGg6IHZhcigtLXN3aXBlci1jZW50ZXJlZC1vZmZzZXQtYWZ0ZXIpO1xyXG4gICAgfVxyXG4gIH1cclxuICAmLnN3aXBlci12ZXJ0aWNhbCB7XHJcbiAgICA+IC5zd2lwZXItd3JhcHBlciA+IC5zd2lwZXItc2xpZGU6Zmlyc3QtY2hpbGQge1xyXG4gICAgICBtYXJnaW4tYmxvY2stc3RhcnQ6IHZhcigtLXN3aXBlci1jZW50ZXJlZC1vZmZzZXQtYmVmb3JlKTtcclxuICAgIH1cclxuICAgID4gLnN3aXBlci13cmFwcGVyOjpiZWZvcmUge1xyXG4gICAgICB3aWR0aDogMTAwJTtcclxuICAgICAgaGVpZ2h0OiB2YXIoLS1zd2lwZXItY2VudGVyZWQtb2Zmc2V0LWFmdGVyKTtcclxuICAgIH1cclxuICB9XHJcblxyXG4gID4gLnN3aXBlci13cmFwcGVyID4gLnN3aXBlci1zbGlkZSB7XHJcbiAgICBzY3JvbGwtc25hcC1hbGlnbjogY2VudGVyIGNlbnRlcjtcclxuICB9XHJcbn1cclxuXHJcblxyXG5cclxuIiwiLnRlc3RpbW9uaWFscyB7XHJcbiAgICBtYXgtd2lkdGg6IDEwMzBweDtcclxuICAgIG1hcmdpbi1ib3R0b206IDI1MHB4O1xyXG4gICAgJi1zbGlkZXJ7XHJcbiAgICAgICAgZGlzcGxheTogZmxleDtcclxuICAgIH1cclxuICAgICYtaW1nIHtcclxuICAgICAgICBtYXJnaW4tcmlnaHQ6IDEwMHB4O1xyXG4gICAgICAgIG1hcmdpbi10b3A6IDc3cHg7XHJcbiAgICB9XHJcbiAgICAmLWNvbnRlbnQge1xyXG4gICAgICAgICZfX3F1b3RlIHtcclxuICAgICAgICAgICAgZm9udC1mYW1pbHk6ICdBcnNlbmFsJztcclxuICAgICAgICAgICAgZm9udC1zdHlsZTogaXRhbGljO1xyXG4gICAgICAgICAgICBmb250LXdlaWdodDogNDAwO1xyXG4gICAgICAgICAgICBmb250LXNpemU6IDMycHg7XHJcbiAgICAgICAgICAgIGxpbmUtaGVpZ2h0OiAxNzAlO1xyXG4gICAgICAgIH1cclxuICAgICAgICAmX19hdXRob3Ige1xyXG4gICAgICAgICAgICBmb250LWZhbWlseTogJ09wZW4gU2Fucyc7XHJcbiAgICAgICAgICAgIGZvbnQtc3R5bGU6IG5vcm1hbDtcclxuICAgICAgICAgICAgY29sb3I6ICRib2R5LXRleHQtZ3JheTtcclxuICAgICAgICB9XHJcbiAgICAgICAgJl9fY29tcGFueSB7XHJcbiAgICAgICAgICAgIGZvbnQtZmFtaWx5OiAnT3BlbiBTYW5zJztcclxuICAgICAgICAgICAgZm9udC1zdHlsZTogbm9ybWFsO1xyXG4gICAgICAgICAgICBmb250LXdlaWdodDogNDAwO1xyXG4gICAgICAgICAgICBmb250LXNpemU6IDE4cHg7XHJcbiAgICAgICAgICAgIGxpbmUtaGVpZ2h0OiAxODAlO1xyXG4gICAgICAgIH1cclxuICAgIH1cclxufVxyXG5cclxuLnN3aXBlci13cmFwcGVyIHtcclxuICAgIG1hcmdpbi1ib3R0b206IDYycHg7XHJcbn1cclxuLnN3aXBlci1ob3Jpem9udGFsID4gLnN3aXBlci1wYWdpbmF0aW9uLWJ1bGxldHMgLnN3aXBlci1wYWdpbmF0aW9uLWJ1bGxldCwgLnN3aXBlci1wYWdpbmF0aW9uLWhvcml6b250YWwuc3dpcGVyLXBhZ2luYXRpb24tYnVsbGV0cyAuc3dpcGVyLXBhZ2luYXRpb24tYnVsbGV0IHtcclxuICAgIHBhZGRpbmc6IDAgMDtcclxuICAgIHBvc2l0aW9uOiByZWxhdGl2ZTtcclxuICAgICYtYWN0aXZle1xyXG4gICAgICAgIHRvcDogLTJweDtcclxuICAgICAgICB3aWR0aDogMTJweDtcclxuICAgICAgICBoZWlnaHQ6IDEycHg7XHJcbiAgICAgICAgdHJhbnNpdGlvbjogYWxsIC41cyBlYXNlO1xyXG4gICAgICAgICY6OmFmdGVyIHtcclxuICAgICAgICAgICAgbWFyZ2luLWxlZnQ6IC05cHg7XHJcbiAgICAgICAgfVxyXG4gICAgICAgIH1cclxufVxyXG4uc3dpcGVyLXBhZ2luYXRpb24tYnVsbGV0OjphZnRlciB7XHJcbiAgICBjb250ZW50OiBcIlwiO1xyXG4gICAgcGFkZGluZzogMTBweCAxNXB4O1xyXG4gICAgbWFyZ2luLWxlZnQ6IC0xMXB4O1xyXG59XHJcbkBtZWRpYSAobWF4LXdpZHRoOiA3NjhweCkge1xyXG4gICAgLnRlc3RpbW9uaWFscy1pbWcge1xyXG4gICAgICAgIG1hcmdpbi1yaWdodDogMjVweDtcclxuICAgICAgICBtYXJnaW4tdG9wOiA1MHB4O1xyXG4gICAgfVxyXG4gICAgLnRlc3RpbW9uaWFscy1jb250ZW50X19xdW90ZSB7XHJcbiAgICAgICAgZm9udC1zaXplOiAyNHB4O1xyXG4gICAgfVxyXG4gICAgLnRlc3RpbW9uaWFscy1pbWcgaW1nIHtcclxuICAgICAgICBtYXgtd2lkdGg6IDUwcHg7XHJcbiAgICB9XHJcbn0iXX0= */
/*# sourceMappingURL=data:application/json;charset=utf-8;base64, */